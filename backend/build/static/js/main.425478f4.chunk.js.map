{"version":3,"sources":["components/util/Notification.tsx","components/home/BigSearchBar.tsx","components/util/SearchBar.tsx","local_db/db.ts","local_db/vod.ts","local_db/channel.ts","services/storage.ts","components/util/Navbar.tsx","components/home/Home.tsx","twitch_api/getComments.ts","util/Observable.ts","twitch_api/getVodInfo.ts","services/speeds.ts","components/analysis/ErrorVodPage.tsx","components/analysis/Cards/VodInfoCard.tsx","util/util.ts","components/analysis/Charts/SpeedsChart.tsx","components/analysis/Cards/SpeedsChartCard.tsx","components/analysis/Charts/KeywordsChart.tsx","services/keywords.ts","components/analysis/Cards/KeywordsCard.tsx","components/analysis/Cards/MoreVodInfoCard.tsx","components/analysis/AnalyzeVod.tsx","components/bookmarks/Bookmark.tsx","components/releases.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["Notification","props","handleClose","setOpen","Snackbar","open","autoHideDuration","onClose","snackbarProps","elevation","variant","severity","alertProps","message","useStyles","makeStyles","theme","root","border","borderRadius","display","width","maxWidth","background","palette","paper","button","marginLeft","marginTop","spacing","marginBottom","input","flex","outlineStyle","boxShadow","borderColor","fontSize","BigSearchBar","history","useHistory","classes","React","useState","isErr","setIsErr","vodVal","setVodVal","dotAnimation","setDot","useEffect","interval","setInterval","clearInterval","handleSubmit","filtered","parseInt","index","indexOf","tmp","slice","secondSlash","push","go","className","autoFocus","type","onChange","e","target","value","onKeyDown","key","placeholder","IconButton","onClick","SearchBar","db","vod","channel","version","stores","table","Dexie","Vod","vodID","channelID","comments","vodInfo","this","put","getNumVods","count","Channel","id","name","getChannel","get","getVodFullInfoDB","a","channelName","channelInfo","getVodFullInfo","filteredVodInfo","_id","display_name","logo","url","changeComments","map","item","seconds","content_offset_seconds","body","commenter","saveVods","channelDB","save","removeVod","where","equals","delete","getNumVodsDB","getAllVods","Promise","toArray","res","all","createStyles","grow","flexGrow","menuButton","marginRight","title","fontFamily","color","breakpoints","up","backgroundColor","search","appbar","transparent","Navbar","disableSearch","bookmarkNum","actualBookmarkNum","setNum","AppBar","position","Toolbar","Typography","Link","href","Tooltip","aria-label","Badge","badgeContent","bar","animation","top","left","flexDirection","minHeight","height","justifyContent","overflow","margin","padding","opacity","transform","backgroundPosition","zIndex","backgroundSize","Home","Container","config","headers","getFirstComments","videoId","startSeconds","axios","data","getNext","cursor","getComments","observable","start","end","d","filter","updateProgress","length","_next","allComments","DIVISIONS","i","then","reduce","acc","curr","Observable","onUpdate","progress","decrementAmount","Math","abs","getVodInfo","output","views","language","created_at","published_at","recorded_at","game","preview","small","medium","large","key2","getCommentsData","observ","finish","getSpeeds","increment","filteredComments","toLowerCase","filterSet","Set","forEach","line","split","replace","has","speeds","lastSecond","Array","fill","comment","time","flattenSpeeds","speed","flattenFactor","dividedSpeeds","newSpeeds","j","subtitle","info","ErrorVodPage","component","align","media","paddingTop","VodInfoCard","downloadComments","saveVod","Card","CardHeader","avatar","window","Avatar","src","subheader","rel","CardActionArea","CardMedia","image","CardActions","Button","size","getInnerDims","innerWidth","innerHeight","useWindowDimensions","winDim","setWinDim","handleResize","addEventListener","removeEventListener","Chart","VictoryZoomVoronoiContainer","createContainer","zoomXDomain","setZoomXDomain","entireDomain","setEntireDomain","x","y","max","windowWidth","setWidth","graphRef","useCallback","node","getBoundingClientRect","style","ref","right","bottom","domain","containerComponent","zoomDimension","responsive","onZoomDomainChange","dependentAxis","label","axisLabelComponent","dy","tickFormat","num","numHours","numMins","numSecs","convertToSeconds","flatten","s","interpolation","memo","prevProps","nextProps","slider","paddingLeft","paddingRight","header","paddingBottom","chart","action","form","alignItems","updateButton","SpeedsChartCard","setFlatten","setData","CardContent","SpeedsChart","Grid","container","xs","md","xl","Slider","marks","min","defaultValue","_","newVal","aria-labelledby","noValidate","autoComplete","onSubmit","preventDefault","currentTarget","elements","TextField","multiline","fullWidth","setHoveredData","clickedData","setClickedData","onMouseOver","onMouseOut","getKeywords","emotes","emoteMap","emoteName","emoteImgURL","emoteNumTimes","total","trim","msg","hasUsed","trimmed","add","colours","sort","b","newOutput","otherPercent","pie","content","alignSelf","KeywordsCard","selectedData","setSelectedData","KeywordsChart","round","alt","cell","displayNice","toString","MoreVodInfoCard","Date","toUTCString","Paper","Table","TableBody","TableRow","TableCell","scope","loadedText","AnalyzeVod","useParams","setVodInfo","setComments","twitchVodInfo","setTwitchVodInfo","commentsLoaded","setCommentsLoaded","saveErr","setSaveErr","saveMsg","setSaveMsg","setBookmarkNum","loadComments","prog","completed","vodFullInfo","err","join","element","document","createElement","file","Blob","URL","createObjectURL","download","appendChild","click","removeChild","lg","noSaved","Bookmark","allVods","setAllVods","vods","GridItem","cardInner","sm","toDateString","removeVodFromStorage","primary","main","mainDownload","textTransform","icon","Releases","App","CssBaseline","StylesProvider","injectFirst","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","secondary","default","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"wQAkCeA,EAzBM,SAACC,GACpB,IAAMC,EAAc,WAClBD,EAAME,SAAQ,IAEhB,OACE,mCACE,cAACC,EAAA,EAAD,yBACEC,KAAMJ,EAAMI,KACZC,iBAAkB,IAClBC,QAASL,GACLD,EAAMO,eAJZ,aAME,cAAC,IAAD,yBACEC,UAAW,EACXC,QAAQ,SACRC,SAAS,SACLV,EAAMW,YAJZ,IAKEL,QAASL,EALX,SAOGD,EAAMY,iBCvBXC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJC,OAAQ,oBACRC,aAAc,GACdC,QAAS,OACTC,MAAO,OACPC,SAAU,IACVC,WAAYP,EAAMQ,QAAQD,WAAWE,OAEvCC,OAAQ,CACNC,WAAY,OACZC,UAAWZ,EAAMa,QAAQ,GACzBC,aAAcd,EAAMa,QAAQ,IAE9BE,MAAO,CACLb,OAAQ,EACRc,KAAM,EACNL,WAAY,GACZM,aAAc,OACdC,UAAW,OACXC,YAAa,cACb,mBAAoB,CAClBf,QAAS,QAEXgB,SAAU,uBACVb,WAAYP,EAAMQ,QAAQD,WAAWE,WA2D1BY,EAxDM,WACnB,IAAMC,EAAUC,cACVC,EAAU1B,IAFS,EAGC2B,IAAMC,UAAS,GAHhB,mBAGlBC,EAHkB,KAGXC,EAHW,OAIGH,IAAMC,SAAS,IAJlB,mBAIlBG,EAJkB,KAIVC,EAJU,OAKML,IAAMC,SAAS,IALrB,mBAKlBK,EALkB,KAKJC,EALI,KAMzBP,IAAMQ,WAAU,WACd,IAAMC,EAAWC,aAAY,WACCH,EAAP,QAAjBD,EAA+B,GAE1BA,EAAe,OAEvB,KACH,OAAO,kBAAMK,cAAcF,MAC1B,CAACH,IACJ,IAAMM,EAAe,WACnB,IAAIC,EAAmBC,SAASV,GAChC,IAAKS,EAAU,CACb,IAAME,EAAQX,EAAOY,QAAQ,WAC7B,GAAID,GAAS,EAAG,CACd,IAAME,EAAMb,EAAOc,MAAMH,EAAQ,GAC3BI,EAAcF,EAAID,QAAQ,KAE9BH,EADEM,GAAe,EACNL,SAASG,EAAIC,MAAM,EAAGC,IACjBL,SAASG,IAG3BJ,GACFhB,EAAQuB,KAAR,kBAAwBP,IACxBhB,EAAQwB,GAAG,IACNlB,GAAS,IAGlB,OACE,sBAAKmB,UAAWvB,EAAQvB,KAAxB,UACE,uBACE+C,WAAS,EACTD,UAAWvB,EAAQT,MACnBkC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOrB,EAAUqB,EAAEC,OAAOC,QACpCC,UAAW,SAACH,GACI,UAAVA,EAAEI,KAAiBlB,KAEzBmB,YAAW,2CAAsCzB,KAEnD,cAAC0B,EAAA,EAAD,CAAYC,QAASrB,EAAcU,UAAWvB,EAAQd,OAAtD,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CACEb,QAAO,6CACPR,KAAMsC,EACNxC,QAASyC,Q,wFC/EX9B,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJC,OAAQ,sBACRC,aAAc,GACdG,SAAU,IACVF,QAAS,OACTC,MAAO,OACPE,WAAYP,EAAMQ,QAAQD,WAAWE,OAEvCC,OAAQ,CACNC,WAAY,QAEdI,MAAO,CACLb,OAAQ,EACRc,KAAM,EACNL,WAAY,GACZM,aAAc,OACdC,UAAW,OACXC,YAAa,cACb,mBAAoB,CAClBf,QAAS,QAEXgB,SAAU,GACVb,WAAYP,EAAMQ,QAAQD,WAAWE,WAgD1BkD,EA7CG,WAChB,IAAMrC,EAAUC,cACVC,EAAU1B,IAFM,EAGI2B,IAAMC,UAAS,GAHnB,mBAGfC,EAHe,KAGRC,EAHQ,OAIMH,IAAMC,SAAS,IAJrB,mBAIfG,EAJe,KAIPC,EAJO,KAKhBO,EAAe,WACnB,IAAIC,EAAmBC,SAASV,GAChC,IAAKS,EAAU,CACb,IAAME,EAAQX,EAAOY,QAAQ,WAC7B,GAAID,GAAS,EAAG,CACd,IAAME,EAAMb,EAAOc,MAAMH,EAAQ,GAC3BI,EAAcF,EAAID,QAAQ,KAE9BH,EADEM,GAAe,EACNL,SAASG,EAAIC,MAAM,EAAGC,IACjBL,SAASG,IAG3BJ,GACFhB,EAAQuB,KAAR,kBAAwBP,IACxBhB,EAAQwB,GAAG,IACNlB,GAAS,IAGlB,OACE,sBAAKmB,UAAWvB,EAAQvB,KAAxB,UACE,uBACEgD,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOrB,EAAUqB,EAAEC,OAAOC,QACpCC,UAAW,SAACH,GACI,UAAVA,EAAEI,KAAiBlB,KAEzBmB,YAAY,uBACZT,UAAWvB,EAAQT,QAErB,cAAC0C,EAAA,EAAD,CAAYC,QAASrB,EAAcU,UAAWvB,EAAQd,OAAtD,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CACEb,QAAO,yBACPR,KAAMsC,EACNxC,QAASyC,Q,oDCjBJgC,EAAK,I,kDAXhB,aAAe,IAAD,8BACZ,cAAM,aAJRC,SAGc,IAFdC,aAEc,EAEZ,EAAKC,QAAQ,GAAGC,OAAO,CACrBH,IAAK,QACLC,QAAS,oBAEX,EAAKD,IAAM,EAAKI,MAAM,OACtB,EAAKH,QAAU,EAAKG,MAAM,WAPd,E,iBAJOC,ICrCVC,EAAb,WAME,WACEC,EACAC,EACAC,EACAC,GACC,yBAVHH,WAUE,OATFC,eASE,OARFC,cAQE,OAPFC,aAOE,EACAC,KAAKJ,MAAQA,EACbI,KAAKH,UAAYA,EACjBG,KAAKF,SAAWA,EAChBE,KAAKD,QAAUA,EAfnB,wCAiBE,WACEX,EAAGC,IAAIY,IAAID,QAlBf,yBAoBE,WACE,OAAOA,KAAKF,aArBhB,KAiCaI,EAAa,WACxB,OAAOd,EAAGC,IAAIc,SCnCHC,EAAb,WAIE,WAAYC,EAAYC,EAAchB,GAAuB,yBAH7DO,eAG4D,OAF5DS,UAE4D,OAD5DhB,aAC4D,EAC1DU,KAAKH,UAAYQ,EACjBL,KAAKM,KAAOA,EACZN,KAAKV,QAAUA,EAPnB,wCASE,WACEF,EAAGE,QAAQW,IAAID,UAVnB,KAaaO,EAAa,SAACF,GACzB,OAAOjB,EAAGE,QAAQkB,IAAIH,ICaXI,EAAgB,uCAAG,WAC9Bb,GAD8B,iBAAAc,EAAA,sEFFTL,EEKIT,EFJlBR,EAAGC,IAAImB,IAAIH,GECY,UAGxBhB,EAHwB,gDAIb,MAJa,uBAKRkB,EAAWlB,EAAIQ,WALP,UAKxBP,EALwB,iDAMT,MANS,iCAOvB,CACLM,MAAOP,EAAIO,MACXC,UAAWP,EAAQO,UACnBc,YAAarB,EAAQgB,KACrBM,YAAatB,EAAQA,QACrBS,QAASV,EAAIU,QACbD,SAAUT,EAAIS,WAbc,kCFFV,IAACO,IEES,OAAH,sDAgBhBQ,EAAiB,SAC5BjB,EACAG,EACAD,GACI,IACIR,EAAgCS,EAAhCT,QAAYwB,EADjB,YACqCf,EADrC,aAEH,MAAO,CACLH,QACAC,UAAWP,EAAQyB,IACnBJ,YAAarB,EAAQ0B,aACrBJ,YAAa,CACXK,KAAM3B,EAAQ2B,KACdC,IAAK5B,EAAQ4B,KAEfnB,QAASe,EACThB,SAAUqB,EAAerB,KAGvBqB,EAAiB,SAACrB,GACtB,OAAOA,EAASsB,KAAI,SAACC,GAAD,MAAW,CAC7BC,QAASD,EAAKE,uBACdlG,QAASgG,EAAKhG,QAAQmG,KACtBC,UAAWJ,EAAKI,UAAUT,kBAGjBU,EAAW,SACtB9B,EACAG,EACAD,GAEA,IAAM6B,EAAY,IAAIvB,EACpBL,EAAQT,QAAQyB,IAChBhB,EAAQT,QAAQ0B,aAChB,CACEC,KAAMlB,EAAQT,QAAQ2B,KACtBC,IAAKnB,EAAQT,QAAQ4B,MAGzBS,EAAUC,OAC8B7B,EAAhCT,QAVL,IAUiBwB,EAVjB,YAUqCf,EAVrC,aAWS,IAAIJ,EACdC,EACA+B,EAAU9B,UACVsB,EAAerB,GACfgB,GAEEc,QAEOC,EAAY,SAACjC,GACxB,OFhEwBS,EEgELT,EF/DZR,EAAGC,IAAIyC,MAAM,SAASC,OAAO1B,GAAI2B,SADjB,IAAC3B,GEsEbH,EAAa,WACxB,OAAO+B,KAEIC,EAAU,uCAAG,sBAAAxB,EAAA,kEACjByB,QADiB,SF/DjB/C,EAAGC,IAAI+C,UE+DU,0BAEChB,KAAI,SAACiB,GAC1B,OAAO5B,EAAiB4B,EAAIzC,UAHR,uBACT0C,IADS,4DAAH,qD,4BCxFjBhH,GAAYC,aAAW,SAACC,GAAD,aAC3B+G,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAanH,EAAMa,QAAQ,IAE7BuG,OAAK,GACHC,WAAY,gBACZC,MAAO,SAFJ,cAGFtH,EAAMuH,YAAYC,GAAG,MAAQ,CAC5BpH,QAAS,UAJR,4BAMUJ,EAAMa,QAAQ,IANxB,GAQLZ,KAAM,CACJgH,SAAU,EACVQ,gBAAiB,eAEnBC,OAAQ,CACN9G,UAAWZ,EAAMa,QAAQ,GACzBC,aAAcd,EAAMa,QAAQ,GAC5BR,MAAO,QAETsH,OAAQ,YACN,OADoC,EAA3BC,YAEA,CACLrH,WAAY,eAGT,SASE,SAASsH,GAAT,GAIF,IAHXD,EAGU,EAHVA,YACAE,EAEU,EAFVA,cACAC,EACU,EADVA,YAEMzG,EAAUC,cACVC,EAAU1B,GAAU,CAAE8H,gBAFlB,EAW0BnG,IAAMC,SAASqG,GAXzC,mBAWHC,EAXG,KAWgBC,EAXhB,KAmBV,OAPAxG,IAAMQ,WAAU,WACd,sBAAC,sBAAAiD,EAAA,yDACM6C,EADN,4BACmBE,EADnB,SACgCvD,IADhC,wDAEMuD,EAAOF,GAFb,0CAAD,KAIC,CAACA,IAGF,qBAAKhF,UAAWvB,EAAQvB,KAAxB,SACE,cAACiI,EAAA,EAAD,CAAQC,SAAS,SAASpF,UAAWvB,EAAQmG,OAAQlI,UAAW,EAAhE,SACE,eAAC2I,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYtF,UAAWvB,EAAQ4F,MAAO1H,QAAQ,KAA9C,SACE,cAAC4I,EAAA,EAAD,CAAMC,KAAK,IAAIjB,MAAM,UAAU5H,QAAQ,UAAvC,8BAIAoI,GACA,qBAAK/E,UAAWvB,EAAQkG,OAAxB,SACE,cAAC,EAAD,MAGJ,qBAAK3E,UAAWvB,EAAQwF,OACxB,cAACwB,EAAA,EAAD,CAASpB,MAAM,iBAAiBqB,aAAW,iBAA3C,SACE,cAAChF,EAAA,EAAD,CACEgF,aAAW,kBACXnB,MAAM,UACN5D,QA/Ba,WACvBpC,EAAQuB,KAAR,aACAvB,EAAQwB,GAAG,IA0BH,SAKE,cAAC,KAAD,QAGJ,cAAC0F,EAAA,EAAD,CAASpB,MAAM,aAAaqB,aAAW,aAAvC,SACE,cAAChF,EAAA,EAAD,CACEgF,aAAW,2BACXnB,MAAM,UACN5D,QA5CU,WACpBpC,EAAQuB,KAAR,cACAvB,EAAQwB,GAAG,IAuCH,SAKE,cAAC4F,EAAA,EAAD,CACEC,aAAcX,GAAwC,KACtDV,MAAM,YAFR,SAIE,cAAC,IAAD,iBC3GhB,IAAMxH,GAAYC,aAAW,SAACC,GAAD,YAAmB,CAC9C4I,IAAK,CACHC,UAAU,mBACVV,SAAU,QACVW,IAAK,EACLC,KAAM,EACN9B,SAAU,EACV5G,MAAO,OACPE,WAAY,eAEd6G,OAAK,GACHC,WAAY,yBACZC,MAAO,SAFJ,cAGFtH,EAAMuH,YAAYC,GAAG,MAAQ,CAC5BpH,QAAS,UAJR,4BAMUJ,EAAMa,QAAQ,IANxB,GAQLZ,KAAM,CACJG,QAAS,OACT4I,cAAe,SACfC,UAAW,IACXC,OAAQ,QACRC,eAAgB,SAChBC,SAAU,SACVC,OAAQ,EACRC,QAAS,EACTjJ,MAAO,SAETqH,OAAQ,CACNrH,MAAO,OACP8I,eAAgB,SAChB/I,QAAS,OACT4I,cAAe,MACfH,UAAU,kBAEZ,oBAAqB,CACnB,KAAM,CACJU,QAAS,EACTC,UAAW,oBAEb,OAAQ,CACND,QAAS,EACTC,UAAW,kBAGf,sBAAuB,CACrB,KAAM,CACJD,QAAS,EACTC,UAAW,qBAEb,OAAQ,CACND,QAAS,EACTC,UAAW,kBAGf,sBAAuB,CACrB,KAAM,CACJC,mBAAoB,UAEtB,MAAO,CACLA,mBAAoB,WAEtB,OAAQ,CACNA,mBAAoB,WAGxBlJ,WAAY,CACV4H,SAAU,QACV9H,MAAO,OACP6I,OAAQ,OACR3I,WACE,gMACFuI,IAAK,QACLC,KAAM,QACNW,QAAS,EACTF,UAAW,kBACXC,mBAAoB,MACpBE,eAAgB,YAChBd,UAAW,8BACXO,SAAU,UAEZpC,KAAM,CACJC,SAAU,OAoBC2C,GAjBF,WACX,IAAMpI,EAAU1B,KAChB,OACE,qCACE,qBAAKiD,UAAWvB,EAAQoH,IAAxB,SACE,cAACf,GAAD,CAAQD,aAAW,EAACE,eAAa,MAEnC,eAAC+B,EAAA,EAAD,CAAWvJ,UAAU,EAAOyC,UAAWvB,EAAQvB,KAA/C,UACE,qBAAK8C,UAAWvB,EAAQjB,aACxB,qBAAKwC,UAAWvB,EAAQkG,OAAxB,SACE,cAAC,EAAD,a,iDClGJoC,GAAS,CAAEC,QAAS,CAAE,YAAa,mCAmBnCC,GAAgB,uCAAG,WACvBC,GADuB,iCAAA/E,EAAA,6DAEvBgF,EAFuB,+BAER,EAETxE,EAJiB,0CAIwBuE,EAJxB,4CAImEC,GAJnE,kBAOEC,KAAMnF,IAAIU,EAAKoE,IAPjB,uBAObM,EAPa,EAObA,KAPa,kBAQdA,GARc,2DAUd,CAAE9F,SAAU,KAVE,0DAAH,sDAchB+F,GAAO,uCAAG,WACdJ,EACAK,GAFc,iBAAApF,EAAA,6DAIRQ,EAJQ,0CAIiCuE,EAJjC,4BAI4DK,GAJ5D,kBAMcH,KAAMnF,IAAIU,EAAKoE,IAN7B,cAMNM,EANM,OAMsCA,KANtC,kBAOLA,GAPK,yDASL,CAAE9F,SAAU,KATP,yDAAH,wDAYAiG,GAAW,uCAAG,WACzBN,GADyB,2CAAA/E,EAAA,yDAEzBsF,EAFyB,+BAEO,KAChCC,EAHyB,+BAGjB,EACRC,EAJyB,+BAInB,IAEAC,EAAID,EAAMD,IACZA,EAAQ,GAAKC,EAAM,GAAKA,EAAMD,GAPT,yCAQhB,IARgB,YASdE,EAAI,KATU,kCAUNX,GAAiBC,EAASQ,GAVpB,QAUnBL,EAVmB,OAWjB9F,EAAsB8F,EAAK9F,SAC9BsG,QACC,gBAAG7E,EAAH,EAAGA,uBAAH,OACE0E,GAAS1E,GAA0BA,EAAyB2E,KAE/D9E,KAAI,YAA0D,IAAvDG,EAAsD,EAAtDA,uBAAwBR,EAA8B,EAA9BA,IAAK1F,EAAyB,EAAzBA,QAASoG,EAAgB,EAAhBA,UAE5C,OADIuE,GAAYA,EAAWK,eAAe,GACnC,CACL9E,yBACAR,MACA1F,QAAS,CAAEmG,KAAMnG,EAAQmG,MACzBC,UAAW,CACTT,aAAcS,EAAUT,kBAvBT,YA4BhB4E,EAAK9F,SAASwG,SAAUV,EAAKW,MA5Bb,sBA6BjBX,EAAK9F,SAAS8F,EAAK9F,SAASwG,OAAS,GAAG/E,uBAAyB2E,GA7BhD,sEA+BRL,GAAQJ,EAASG,EAAKW,OA/Bd,QA+BrBX,EA/BqB,OAgCrB9F,EAASzB,KAAT,MAAAyB,EAAQ,aACH8F,EAAK9F,SACLsG,QACC,gBAAG7E,EAAH,EAAGA,uBAAH,OACE0E,GAAS1E,GAA0BA,EAAyB2E,KAE/D9E,KAAI,YAA0D,IAAvDG,EAAsD,EAAtDA,uBAAwBR,EAA8B,EAA9BA,IAAK1F,EAAyB,EAAzBA,QAASoG,EAAgB,EAAhBA,UAE5C,OADIuE,GAAYA,EAAWK,eAAe,GACnC,CACL9E,yBACAR,MACA1F,QAAS,CAAEmG,KAAMnG,EAAQmG,MACzBC,UAAW,CACTT,aAAcS,EAAUT,oBA7Cb,iDAmDhBlB,GAnDgB,QAuDvB,IAFI0G,EAAoC,GAClCC,EAAY,GACTC,EAAI,EAAGA,GAAKD,EAAWC,IAC9BF,EAAYnI,KACV0H,GACEN,EACAO,EACAC,GAAUS,EAAI,GAAKP,EAAKM,EACxBR,EAASS,EAAIP,EAAKM,IA7DD,yBAiEhBtE,QAAQG,IAAIkE,GAAaG,MAAK,SAAC7G,GACpC,OAAOA,EAAS8G,QAAO,SAACC,EAAKC,GAE3B,OADAD,EAAIxI,KAAJ,MAAAwI,EAAG,aAASC,IACLD,SApEY,4CAAH,sDC9BTE,G,WAZb,WAAYC,GAA4B,yBAHhCC,cAG+B,OAF/BD,cAE+B,EACrChH,KAAKiH,SAAW,EAChBjH,KAAKgH,SAAWA,E,kDAElB,SAAeE,GACblH,KAAKiH,UAAYE,KAAKC,IAAIF,GACtBlH,KAAKgH,UAAUhH,KAAKgH,SAAShH,KAAKiH,UAAU,K,oBAElD,WACMjH,KAAKgH,UAAUhH,KAAKgH,SAAShH,KAAKiH,UAAU,O,KCb9C3B,GAAS,CAAEC,QAAS,CAAE,YAAa,mCAkE1B8B,GAvCC,uCAAG,WAAOhH,GAAP,uBAAAK,EAAA,6DACXQ,EADW,0CAC8Bb,GACzCiH,EAAkB,CACtB1E,MAAO,GACP2E,MAAO,EACPrG,IAAK,GACLsG,SAAU,GACVC,WAAY,GACZC,aAAc,GACdC,YAAa,GACbC,KAAM,GACNtB,OAAQ,EACRuB,QAAS,CACPC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAET1I,QAAS,CACP0B,aAAc,GACdC,KAAM,GACNC,IAAK,GACLH,IAAK,KArBQ,SAwBG4E,KAAMnF,IAAIU,EAAKoE,IAxBlB,OAyBjB,IAAWvG,KADL6G,EAxBW,OAwB2BA,KAC1B0B,EAChB,GAA4C,kBAAjCA,EAAOvI,GAEhB,IAAWkJ,KAAQX,EAAOvI,GAExBuI,EAAOvI,GAAKkJ,GAAQrC,EAAK7G,GAAKkJ,QAIhCX,EAAOvI,GAAO6G,EAAK7G,GAlCN,yBAqCVuI,GArCU,2CAAH,sDCbHY,GAAe,uCAAG,WAC7B7H,EACA2G,GAF6B,mBAAAtG,EAAA,6DAIvByH,EAAS,IAAIpB,GAAWC,GAJD,SAKXK,GAAWhH,GALA,cAKvBhB,EALuB,gBAMN0G,GAAY1F,EAAI8H,EAAQ,EAAG9I,EAAIiH,QANzB,cAMvBxG,EANuB,OAO7BqI,EAAOC,SAPsB,kBAQtBtI,GARsB,2CAAH,wDAWfuI,GAAY,SACvBvI,GAGW,IAFXsG,EAEU,uDAFS,GACnBkC,EACU,uDADE,EAERC,EAAgC,GAIpC,IAHAnC,EAASA,EACNA,QAAO,SAAC/E,GAAD,OAAUA,EAAKiF,OAAS,KAC/BlF,KAAI,SAACC,GAAD,OAAUA,EAAKmH,kBACXlC,OAAQ,CACjB,IAAMmC,EAAY,IAAIC,IAAItC,GAC1BtG,EAAS6I,SAAQ,SAACC,GAChB,IADyB,EAKnBC,EAJUD,EAAKvN,QAClBmN,cAEAM,QAAQ,sBAAuB,IACZD,MAAM,KALH,eAMNA,GANM,IAMzB,2BAA0B,CAAC,IAAhBxH,EAAe,QACxB,GAAIoH,EAAUM,IAAI1H,GAAO,CACvBkH,EAAiBlK,KAAKuK,GACtB,QATqB,uCAc3BL,EAAmBzI,EAErB,GAAgC,IAA5ByI,EAAiBjC,OAAc,MAAO,CAAEgC,YAAWU,OAAQ,IAC/D,IAAMC,EAAaV,EAAiBA,EAAiBjC,OAAS,GAAGhF,QAC3D0H,EAAmBE,MAAmC,KAA1BD,EAAaX,IAAgBa,KAAK,GAKpE,OAJAZ,EAAiBI,SAAQ,SAACS,GACxB,IAAMC,EAAOD,EAAQ9H,QACrB0H,KAAUK,EAAOf,KAAe,EAAIA,KAE/B,CAAEA,YAAWU,WAETM,GAAgB,SAACC,EAAcC,GAM1C,IALA,IAAMC,EAA0BF,EAAMP,OAAO5H,KAC3C,SAACC,GAAD,OAAUA,EAAOmI,KAEbE,EAAsB,GACxBhD,EAAI,EACDA,EAAI+C,EAAcnD,QAAQ,CAE/B,IADA,IAAIpI,EAAM,EACDyL,EAAI,EAAGA,EAAIH,GACd9C,IAAM+C,EAAcnD,OADSqD,IAEjCzL,GAAOuL,EAAc/C,GACrBA,IAEFgD,EAAUrL,KAAKH,GAEjB,MAAO,CAAEoK,UAAWiB,EAAMjB,UAAYkB,EAAeR,OAAQU,IC3EzDpO,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLoH,MAAO,CACLtG,aAAcd,EAAMa,QAAQ,GAC5BwG,WAAY,wBAEd+G,SAAU,CAAE/G,WAAY,wBACxBgH,KAAM,CACJhF,OAAQrJ,EAAMa,QAAQ,QA8BbyN,GA1BM,WACnB,IAAM9M,EAAU1B,KAChB,OACE,mCACE,sBAAKiD,UAAWvB,EAAQ6M,KAAxB,UACE,cAAChG,EAAA,EAAD,CACE3I,QAAQ,KACR6O,UAAU,KACVxL,UAAWvB,EAAQ4F,MACnBoH,MAAM,SAJR,SAME,2CAEF,cAACnG,EAAA,EAAD,CACE3I,QAAQ,KACR6O,UAAU,KACVxL,UAAWvB,EAAQ4M,SACnBI,MAAM,SAJR,4G,gFCJF1O,GAAYC,YAAW,CAC3B0O,MAAO,CACLvF,OAAQ,EACRwF,WAAY,UAEdzO,KAAM,CACJiJ,OAAQ,UA4DGyF,GAzDK,SAAC,GAKI,IAJvBpK,EAIsB,EAJtBA,QACA9E,EAGsB,EAHtBA,UACAmP,EAEsB,EAFtBA,iBACAC,EACsB,EADtBA,QAEMrN,EAAU1B,KAChB,OACE,eAACgP,GAAA,EAAD,CAAMrP,UAAWA,EAAWsD,UAAWvB,EAAQvB,KAA/C,UACE,cAAC8O,GAAA,EAAD,CACEC,OACE,cAACvL,EAAA,EAAD,CACEC,QAAS,WACPuL,OAAO5P,KAAKkF,EAAQa,YAAYM,MAFpC,SAKE,cAACwJ,GAAA,EAAD,CAAQzG,aAAW,eAAe0G,IAAK5K,EAAQa,YAAYK,SAG/D2B,MACE,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,YAApB,SAAiC6E,EAAQA,QAAQ6C,QAEnDgI,UACE,eAAC/G,EAAA,EAAD,CAAY3I,QAAQ,YAApB,eACK,IACH,cAAC4I,EAAA,EAAD,CACEC,KAAMhE,EAAQa,YAAYM,IAC1BtC,OAAO,SACPiM,IAAI,aAHN,SAKG9K,EAAQY,mBAKjB,cAACmK,GAAA,EAAD,CACE5L,QAAS,WACPuL,OAAO5P,KAAKkF,EAAQA,QAAQmB,MAFhC,SAKE,cAAC6J,GAAA,EAAD,CACEC,MAAOjL,EAAQA,QAAQ8H,QAAQG,MAC/BpF,MAAM,YACNrE,UAAWvB,EAAQiN,UAGvB,eAACgB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQC,KAAK,QAAQrI,MAAM,UAAU5D,QAASkL,EAA9C,2BAGA,cAACc,GAAA,EAAD,CAAQC,KAAK,QAAQrI,MAAM,UAAU5D,QAASmL,EAA9C,kC,gFChFFe,GAAe,WACnB,MAAO,CACLvP,MAAO4O,OAAOY,WACd3G,OAAQ+F,OAAOa,cAIbC,GAAsB,WAAO,IAAD,EACJrO,mBAASkO,MADL,mBACzBI,EADyB,KACjBC,EADiB,KAOhC,OALAhO,qBAAU,WACR,IAAMiO,EAAe,kBAAMD,EAAUL,OAErC,OADAX,OAAOkB,iBAAiB,SAAUD,GAC3B,kBAAMjB,OAAOmB,oBAAoB,SAAUF,MACjD,IACIF,GCcHK,GAAQ,SAACpR,GACb,IAAMqR,EAA8BC,aAGlC,OAAQ,WAJyB,EAKG9O,IAAMC,SAE1C,CAAC,EAAG,MAP6B,mBAK5B8O,EAL4B,KAKfC,EALe,OAQKhP,IAAMC,WARX,mBAQ5BgP,EAR4B,KAQdC,EARc,KAWnClP,IAAMQ,WAAU,WACVhD,EAAMmL,KAAKoD,OAAO1C,QACpB6F,EAAgB,CACdC,EAAG,CAAC,EAAG3R,EAAMmL,KAAKoD,OAAO1C,OAAS7L,EAAMmL,KAAK0C,WAC7C+D,EAAG,CAAC,EAAGlF,KAAKmF,IAAL,MAAAnF,KAAI,aAAQ1M,EAAMmL,KAAKoD,SAAU,QAG3C,CAACvO,EAAMmL,OACV,IJ8BkC2D,EI9B5BgD,ED9BChB,KAAsB1P,MCWM,EAoBToB,IAAMC,SAAS,GApBN,mBAoB5BrB,EApB4B,KAoBrB2Q,EApBqB,KAqB7BC,EAAWxP,IAAMyP,aACrB,SAACC,GACc,OAATA,GACFH,EAASG,EAAKC,wBAAwB/Q,SAI1C,CAAC0Q,IAGH,OACE,qBACEM,MAAO,CAAEhR,MAAO,OAAQ6I,OAAQ,QAChCoI,IAAKL,EAFP,SAKE,eAAC,KAAD,CACE/H,OAAQ,IACR7I,MAAOA,EACPiJ,QAAS,CAAER,IAAK,GAAIC,KAAM,GAAIwI,MAAO,GAAIC,OAAQ,IACjDC,OAAQf,EACRgB,mBACE,cAACpB,EAAD,CACEqB,cAAc,IACdC,YAAY,EACZC,mBAAoB,SAACJ,GACnBhB,EAAegB,EAAOb,MAV9B,UAeE,cAAC,KAAD,CACEkB,eAAa,EACbC,MAAM,WACNC,mBAAoB,cAAC,KAAD,CAAcC,IAAK,OAEzC,cAAC,KAAD,CAAaF,MAAM,WAAWG,WAAY,SAACtB,GAAD,OAhEzB,SAACuB,GACxB,IAAMC,KAAcD,EAAM,MACpBE,MAAcF,EAAiB,KAAXC,GAAmB,IACvCE,EAAUH,EAAiB,KAAXC,EAA4B,GAAVC,EACxC,MAAM,GAAN,OAAUD,EAAV,aAAuBC,EAAvB,aAAmCC,EAAnC,KA4DuDC,CAAiB3B,MAClE,cAAC,KAAD,CACExG,MJV0B2D,EIWxBD,GAAc7O,EAAMmL,KAAMnL,EAAMuT,SJVnCzE,EAAMP,OAAO5H,KAAI,SAAC6M,EAAGvH,GAAJ,MAAW,CAAE2C,KAAM3C,EAAI6C,EAAMjB,UAAWiB,MAAO0E,OIW7D7H,QAAO,SAACD,GAAD,OAAOA,EAAEkD,MAAQ2C,EAAY,IAAM7F,EAAEkD,MAAQ2C,EAAY,MAClEkC,cAAc,UACd9B,EAAE,OACFC,EAAE,cA7BD5R,EAAMmL,KAAKoD,OAAO1C,SAoCdrJ,OAAMkR,KAAKtC,IAAO,SAACuC,EAAWC,GAC3C,OACED,EAAUJ,UAAYK,EAAUL,SAChCI,EAAUxI,KAAKoD,OAAO1C,SAAW+H,EAAUzI,KAAKoD,OAAO1C,UClFrDhL,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C8S,OAAQ,CACNC,YAAa/S,EAAMa,QAAQ,IAC3BmS,aAAchT,EAAMa,QAAQ,GAC5BR,MAAO,IACPgJ,OAAQ,EACRqF,WAAY1O,EAAMa,QAAQ,KAE5BoS,OAAQ,CACNC,cAAe,GAEjBC,MAAO,CACLvS,WAAY,GACZsS,cAAe,GAEjBE,OAAQ,CACN/J,OAAQ,EACRC,QAAS,EACTxI,aAAcd,EAAMa,QAAQ,IAE9BwS,KAAM,CACJjT,QAAS,OACTU,aAAcd,EAAMa,QAAQ,GAC5BmS,aAAchT,EAAMa,QAAQ,GAC5ByS,WAAY,cAEd1I,OAAQ,CACNmI,YAAa/S,EAAMa,QAAQ,GAC3BmS,aAAchT,EAAMa,QAAQ,GAC5BR,MAAO,QAETkT,aAAc,CACZjK,QAAStJ,EAAMa,QAAQ,QA8EZ2S,GA3ES,SAAC,GAAkD,IAAhDjP,EAA+C,EAA/CA,QAAS9E,EAAsC,EAAtCA,UAC5B+B,EAAU1B,KADwD,EAE1C2B,IAAMC,SAAS,GAF2B,mBAEjE8Q,EAFiE,KAExDiB,EAFwD,OAGhDhS,IAAMC,SAAgBmL,GAAUtI,EAAQD,WAHQ,mBAGjE8F,EAHiE,KAG3DsJ,EAH2D,KAWxE,OACE,eAAC5E,GAAA,EAAD,CAAMrP,UAAWA,EAAjB,UACE,cAACsP,GAAA,EAAD,CACE3H,MAAO,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,YAApB,4BACP0P,UACE,cAAC/G,EAAA,EAAD,CAAY3I,QAAQ,YAApB,qDAIFqD,UAAWvB,EAAQyR,SAErB,cAACU,GAAA,EAAD,CAAa5Q,UAAWvB,EAAQ2R,MAAhC,SACE,cAACS,GAAD,CAAaxJ,KAAMA,EAAMoI,QAASA,MAEpC,cAAC/C,GAAA,EAAD,CAAa1M,UAAWvB,EAAQ4R,OAAhC,SACE,eAACS,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlR,UAAWvB,EAAQsR,OAApD,SACE,cAACoB,GAAA,EAAD,CACEpP,KAAK,SACLzB,MAAOmP,EACP2B,MAAO,CACL,CAAE9Q,MAAO,EAAG0O,MAAO,iBACnB,CAAE1O,MAAO,GAAI0O,MAAO,mBAEtBqC,IAAK,EACLtD,IAAK,GACLuD,aAAc7B,EACdtP,SAAU,SAACoR,EAAGC,GACZd,EAAWc,IAEbC,kBAAgB,mBAGpB,cAACX,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAIC,IAAE,EAACC,GAAI,EAA1B,SACE,uBACElR,UAAWvB,EAAQ6R,KACnBoB,YAAU,EACVC,aAAa,MACbC,SA5CK,SAACxR,GAChBA,EAAEyR,iBACF,IACMhK,EADSzH,EAAE0R,cACKC,SAAP,OAA0BzR,MACzCqQ,EAAQ7G,GAAUtI,EAAQD,SAAUsG,EAAOyC,MAAM,SAoCzC,UAME,qBAAKtK,UAAWvB,EAAQoJ,OAAxB,SACE,cAACmK,GAAA,EAAD,CACErV,QAAQ,SACRqS,MAAM,sDACNjN,KAAK,SACLkQ,WAAS,EACTC,WAAS,MAGb,cAACvF,GAAA,EAAD,CACEzM,KAAK,SACLvD,QAAQ,YACR4H,MAAM,UACNvE,UAAWvB,EAAQ+R,aAJrB,kC,UCzFClD,GAnBD,SAAC,GAAkD,IAAhDjG,EAA+C,EAA/CA,KAAM8K,EAAyC,EAAzCA,eAAyC,EACxBzT,IAAMC,SAAyB,MADP,mBACvDyT,EADuD,KAC1CC,EAD0C,KAE9D,OACE,8BACE,cAAC,YAAD,CACEhL,KAAMA,EACNiL,YAAa,SAACf,EAAG9R,GACf0S,EAAe9K,EAAK5H,KAEtBkB,QAAS,SAAC4Q,EAAG9R,GACX4S,EAAehL,EAAK5H,KAEtB8S,WAAY,WACVJ,EAAeC,SCVZI,GAAW,uCAAG,WAAOhR,GAAP,iCAAAW,EAAA,+EAEDiF,KAAMnF,IAAN,sBAAyBT,EAAQF,YAFhC,OAuDvB,IAAWd,KArDLiS,EAFiB,OAGpBpL,KAOGqL,EAAqB,GAC3BD,EAAOrI,SAAQ,SAACtH,GACd4P,EAAS5P,EAAK6P,UAAU1I,eAAiB,CACvCtH,IAAKG,EAAK8P,YACV7Q,KAAMe,EAAK6P,cAGTE,EAAgB,GAClBC,EAAQ,EACZtR,EAAQD,SACLsB,KAAI,SAACC,GAAD,OACHA,EAAKhG,QACFiW,OACA9I,cAEAM,QAAQ,sBAAuB,OAEnC1C,QAAO,SAACmL,GAAD,OAASA,EAAIjL,OAAS,KAC7BqC,SAAQ,SAACtH,GAGR,IAFA,IAAMwH,EAAQxH,EAAKwH,MAAM,KACnB2I,EAAU,IAAI9I,IACXhC,EAAI,EAAGA,EAAImC,EAAMvC,OAAQI,IAAK,CACrC,IAAM+K,EAAUpQ,EAAKiQ,OACrB,GAAIG,KAAWR,IAAaO,EAAQzI,IAAI0I,GAAU,CAChDD,EAAQE,IAAIT,EAASQ,GAASnR,MACxBmR,KAAWL,IAAgBA,EAAcK,GAAW,GAC1DL,EAAcK,KACdJ,IACA,WAIF/J,EAAoB,GACpBqK,EAAU,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEgBP,EAChB9J,EAAOjJ,KAAK,CACVuE,MAAOqO,EAASlS,GAAKuB,KACrBzB,MAAQ,IAAMuS,EAAcrS,GAAQsS,EACpCvO,MAAO,UACP5B,IAAK+P,EAASlS,GAAKmC,MASvB,IANAoG,EAAOsK,MAAK,SAAClR,EAAGmR,GACd,OAAInR,EAAE7B,OAASgT,EAAEhT,OAAe,EACzB,KAEHiT,EAAuB,GACzBC,EAAe,EACVrL,EAAI,EAAGA,EAAIY,EAAOhB,OAAQI,IAC7BY,EAAOZ,GAAG7H,OAAS,GACrBiT,EAAUzT,KAAV,2BACKiJ,EAAOZ,IADZ,IAEE5D,MAAO6O,EAAQjL,EAAIiL,EAAQrL,WAG7ByL,GAAgBzK,EAAOZ,GAAG7H,MA5EP,OA+EnBkT,EAAe,GACjBD,EAAUzT,KAAK,CACbuE,MAAO,QACP/D,MAAOkT,EACPjP,MAAO,UACP5B,IAAK,KApFc,kBAuFhB4Q,GAvFgB,2DAyFhB,CACL,CACElP,MAAO,QACP/D,MAAO,IACPiE,MAAO,UACP5B,IAAK,MA9Fc,0DAAH,sDCMlB5F,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C8S,OAAQ,CACNC,YAAa/S,EAAMa,QAAQ,IAC3BmS,aAAchT,EAAMa,QAAQ,GAC5BR,MAAO,IACPgJ,OAAQ,GAEV4J,OAAQ,CACNC,cAAe,GAEjBE,OAAQ,CACN/J,OAAQ,EACRC,QAAS,EACTxI,aAAcd,EAAMa,QAAQ,IAE9B2V,IAAK,CACHlW,SAAU,QAEZmW,QAAS,CAAErW,QAAS,QACpBiO,KAAM,CACJqI,UAAW,SACX/V,WAAYX,EAAMa,QAAQ,IAE5BZ,KAAM,CACJiJ,OAAQ,YA+CGyN,GA5CM,SAAC,GAAgD,IAA9CpS,EAA6C,EAA7CA,QAAS9E,EAAoC,EAApCA,UAAoC,EAC3BgC,IAAMC,SAAyB,MADJ,mBAC5DkV,EAD4D,KAC9CC,EAD8C,OAE3CpV,IAAMC,SAAoB,IAFiB,mBAE5D0I,EAF4D,KAEtDsJ,EAFsD,KAGnEjS,IAAMQ,WAAU,WACd,sBAAC,sBAAAiD,EAAA,kEACCwO,EADD,SACe6B,GAAYhR,GAD3B,4EAAD,KAGC,CAACA,IACJ,IAAM/C,EAAU1B,KAChB,OACE,eAACgP,GAAA,EAAD,CAAMrP,UAAWA,EAAWsD,UAAWvB,EAAQvB,KAA/C,UACE,cAAC8O,GAAA,EAAD,CACE3H,MACE,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,YAApB,kCAEF0P,UACE,cAAC/G,EAAA,EAAD,CAAY3I,QAAQ,YAApB,0CAIFqD,UAAWvB,EAAQyR,SAErB,eAACU,GAAA,EAAD,CAAa5Q,UAAWvB,EAAQiV,QAAhC,UACE,qBAAK1T,UAAWvB,EAAQgV,IAAxB,SACE,cAACM,GAAD,CAAe1M,KAAMA,EAAM8K,eAAgB2B,MAE7C,qBAAK9T,UAAWvB,EAAQ6M,KAAxB,SACGuI,GACC,gCACE,eAACvO,EAAA,EAAD,CAAYkG,UAAU,KAAK7O,QAAQ,KAAnC,UACGkX,EAAaxP,MADhB,KACyBuE,KAAKoL,MAA2B,GAArBH,EAAavT,OAAc,GAD/D,QAICuT,EAAalR,KACZ,qBAAKyJ,IAAKyH,EAAalR,IAAKsR,IAAG,UAAKJ,EAAaxP,iBAM3D,cAACqI,GAAA,EAAD,CAAa1M,UAAWvB,EAAQ4R,a,kDCrEhCtT,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CiX,KAAM,CACJ/W,OAAQ,GAEV4T,UAAW,CACT5K,OAAQ,YAONgO,GAAc,SAAC/E,GACnB,OAAOA,EAAIgF,WAAW7J,QAAQ,wBAAyB,MAEnDiF,GAAmB,SAACJ,GACxB,IAAMC,KAAcD,EAAM,MACpBE,MAAcF,EAAiB,KAAXC,GAAmB,IACvCE,EAAUH,EAAiB,KAAXC,EAA4B,GAAVC,EACxC,MAAM,GAAN,OAAUD,EAAV,aAAuBC,EAAvB,aAAmCC,EAAnC,MAiDa8E,GA/CS,SAAC,GAAkD,IAAhD7S,EAA+C,EAA/CA,QAAS9E,EAAsC,EAAtCA,UAC5B+B,EAAU1B,KACVsK,EAAoB,CACxB,CACEwG,EAAG,sBACHC,EAAGqG,GAAY3S,EAAQD,SAASwG,SAElC,CACE8F,EAAG,mBACHC,EAAGqG,GACD,IAAIhK,IAAI3I,EAAQD,SAASsB,KAAI,SAACC,GAAD,OAAUA,EAAKI,cAAY0J,OAG5D,CACEiB,EAAG,cACHC,EAAGqG,GAAY3S,EAAQA,QAAQwH,QAEjC,CACE6E,EAAG,aACHC,EAAG0B,GAAiBhO,EAAQA,QAAQuG,SAEtC,CACE8F,EAAG,gBACHC,EAAE,GAAD,OAAK,IAAIwG,KAAK9S,EAAQA,QAAQ4H,aAAamL,iBAGhD,OACE,cAACC,GAAA,EAAD,CAAO9X,UAAWA,EAAWsD,UAAWvB,EAAQsS,UAAhD,SACE,cAAC0D,GAAA,EAAD,CAAO/O,aAAW,iBAAlB,SACE,cAACgP,GAAA,EAAD,UACGrN,EAAKxE,KAAI,YAAe,IAAZgL,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACd,OACE,eAAC6G,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWpJ,UAAU,KAAKqJ,MAAM,MAAM7U,UAAWvB,EAAQyV,KAAzD,SACGrG,IAEH,cAAC+G,GAAA,EAAD,CAAWnJ,MAAM,QAAQzL,UAAWvB,EAAQyV,KAA5C,SACGpG,MALUD,aC3CvB9Q,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C6X,WAAY,CACVxO,OAAQrJ,EAAMa,QAAQ,GACtBwG,WAAY,mCAwIDyQ,GArII,WACjB,IAAMtW,EAAU1B,KACRsE,EAAU2T,cAAV3T,MAFe,EAIO3C,IAAMC,SAAgC,MAJ7C,mBAIhB6C,EAJgB,KAIPyT,EAJO,OAKSvW,IAAMC,SAAoB,IALnC,mBAKhB4C,EALgB,KAKN2T,EALM,OAMmBxW,IAAMC,SAC9C,MAPqB,mBAMhBwW,EANgB,KAMDC,EANC,OAUG1W,IAAMC,UAAS,GAVlB,mBAUhBC,EAVgB,KAUTC,EAVS,OAaqBH,IAAMC,UAAkB,GAb7C,mBAahB0W,EAbgB,KAaAC,EAbA,OAeO5W,IAAMC,UAAS,GAftB,mBAehB4W,EAfgB,KAePC,EAfO,OAgBO9W,IAAMC,SAAS,IAhBtB,mBAgBhB8W,EAhBgB,KAgBPC,EAhBO,OAiBehX,IAAMC,SAAiB,GAjBtC,mBAiBhBqG,EAjBgB,KAiBH2Q,EAjBG,KAkBjBC,EAAY,uCAAG,4BAAAzT,EAAA,+EAEMwH,GAAgBtI,GAAO,SAACwU,EAAMC,GACpCR,EAAXQ,GAA8B,EACXD,MAJR,cAEXtU,EAFW,OAMjB2T,EAAY3T,GANK,kBAOVA,GAPU,uCASjB1C,GAAS,GATQ,kBAUV,IAVU,yDAAH,qDAalBH,IAAMQ,WAAU,WACd,sBAAC,gCAAAiD,EAAA,sEAC2BD,EAAiBb,GAD5C,cACO0U,EADP,OAECd,EAAWc,GAFZ,KAGCJ,EAHD,SAGsBhU,IAHtB,sCAIKoU,EAJL,iBAKGT,GAAmB,GALtB,yCAO0BM,IAP1B,eAOSrU,EAPT,iBAQ+BuH,GAAWzH,GAR1C,QAQS8T,EART,OASGC,EAAiBD,GACjBF,EAAW3S,EAAejB,EAAO8T,EAAe5T,IAVnD,2CAAD,KAcC,CAACF,IACJ,IAAMyK,EAAO,uCAAG,sBAAA3J,EAAA,sEACUD,EAAiBb,GAD3B,yCAGZmU,GAAW,GACXE,EAAW,iBAJC,0BAQd,GADAC,EAAe3Q,EAAc,GACzBmQ,EACF,IACEhS,EAAS9B,EAAO8T,EAAe5T,GAC/B,MAAOyU,GACPR,GAAW,GACXE,EAAW,sBAbD,2CAAH,qDAiBP7J,EAAgB,uCAAG,gCAAA1J,EAAA,sDACnBX,IACIkS,EADK,iBACelS,EAAQH,MADvB,aACiCG,EAAQD,SACjDsB,KAAI,SAACC,GAAD,gBAAaA,EAAKI,UAAlB,YAA+BJ,EAAKC,QAApC,eAAkDD,EAAKhG,YAC3DmZ,KAAK,OACFC,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAAC5C,GAAU,CAC/BxT,KAAM,6BAERgW,EAAQ1Q,KAAO+Q,IAAIC,gBAAgBH,GACnCH,EAAQO,SAAW,eACnBN,SAASlT,KAAKyT,YAAYR,GAC1BA,EAAQS,QACRR,SAASlT,KAAK2T,YAAYV,IAbL,2CAAH,qDAgBtB,OACE,qCACE,cAACpR,GAAD,CAAQE,YAAaA,IAErB,eAAC8B,EAAA,EAAD,CAAWvJ,SAAS,KAApB,UACE,uBAECqB,EACC,cAAC,GAAD,IAEA,qCACE,cAACkS,GAAA,EAAD,CAAMC,WAAS,EAACjT,QAAS,EAAzB,UACuB,IAApBuX,GAAyB7T,GACxB,qCACE,cAACsP,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAIC,GAAI,EAAG4F,GAAI,EAAG3F,GAAI,EAArC,SACE,cAAC,GAAD,CACE1P,QAASA,EACT9E,UAAW,EACXmP,iBAAkBA,EAClBC,QAASA,EACT8J,aAAcA,MAGlB,cAAC9E,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAIC,GAAI,EAAG4F,GAAI,EAAG3F,GAAI,EAArC,SACE,cAAC,GAAD,CAAiBxU,UAAW,EAAG8E,QAASA,MAE1C,cAACsP,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAIE,GAAI,EAAvB,SACE,cAAC,GAAD,CAAcxU,UAAW,EAAG8E,QAASA,MAEvC,cAACsP,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAf,SACE,cAAC,GAAD,CAAiBtU,UAAW,EAAG8E,QAASA,WAK/C6T,GAAkB,GACjB,eAAC/P,EAAA,EAAD,CACEkG,UAAU,KACV7O,QAAQ,KACR8O,MAAM,SACNzL,UAAWvB,EAAQqW,WAJrB,oBAMUO,EANV,qBAWN,cAAC,EAAD,CAAcvY,QAAS2Y,EAASrZ,QAASoZ,EAAYlZ,KAAMiZ,W,oBCtI7DxY,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CyO,MAAO,CACLvF,OAAQ,EACRwF,WAAY,UAEdmL,QAAS,CACPnL,WAAY1O,EAAMa,QAAQ,GAC1BwG,WAAY,4BAoIDyS,GAjIE,WAAO,IAAD,EACSrY,IAAMC,SAAkC,MADjD,mBACdqY,EADc,KACLC,EADK,KAEfxY,EAAU1B,KAFK,EAGiB2B,IAAMC,SAAiB,GAHxC,mBAGdqG,EAHc,KAGD2Q,EAHC,KAKrBjX,IAAMQ,WAAU,WACd,sBAAC,4BAAAiD,EAAA,sEACoBwB,IADpB,cACOuT,EADP,OAECD,EAAWC,GAFZ,KAGCvB,EAHD,SAGsBhU,IAHtB,4EAAD,KAKC,IACH,IAQMwV,EAAW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAClB,OACE,cAACtG,GAAA,EAAD,CAAMhO,MAAI,EAACkO,GAAI,GAAIqG,GAAI,GAAIpG,GAAI,EAAG4F,GAAI,EAAtC,SACE,cAAC9K,GAAA,EAAD,CAAMrP,UAJM,EAIZ,SAA6B0a,OAI7B7Y,EAAUC,cAChB,OACE,qCACE,cAACsG,GAAD,CAAQE,YAAaA,IACrB,eAAC8B,EAAA,EAAD,CAAWvJ,SAAU,KAArB,UACE,uBACCyZ,GACC,cAAClG,GAAA,EAAD,CAAMC,WAAS,EAACjT,QAAS,EAAzB,SACGkZ,EAAQnU,KAAI,SAAC/B,EAAKqH,GACjB,OACE,cAACgP,EAAD,CAEEC,UACE,qCACE,cAACpL,GAAA,EAAD,CACEC,OACE,cAACvL,EAAA,EAAD,CACEC,QAAS,WACPuL,OAAO5P,KAAK0a,EAAQ7O,GAAG9F,YAAYM,MAFvC,SAKE,cAACwJ,GAAA,EAAD,CACEzG,aAAW,eACX0G,IAAK4K,EAAQ7O,GAAG9F,YAAYK,SAIlC2B,MACE,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,YAApB,SACGqa,EAAQ7O,GAAG3G,QAAQ6C,QAGxBgI,UACE,eAAC/G,EAAA,EAAD,CAAY3I,QAAQ,YAApB,eACK,IACH,cAAC4I,EAAA,EAAD,CACEC,KAAMwR,EAAQ7O,GAAG9F,YAAYM,IAC7BtC,OAAO,SACPiM,IAAI,aAHN,SAKG0K,EAAQ7O,GAAG/F,cACN,IARV,KASK,IACF,IAAIkS,KACH0C,EAAQ7O,GAAG3G,QAAQ4H,aACnBkO,oBAIR,cAAC/K,GAAA,EAAD,CACE5L,QAAS,WACPuL,OAAO5P,KAAK0a,EAAQ7O,GAAG3G,QAAQmB,MAFnC,SAKE,cAAC6J,GAAA,EAAD,CACEC,MAAOuK,EAAQ7O,GAAG3G,QAAQ8H,QAAQG,MAClCpF,MAAM,YACNrE,UAAWvB,EAAQiN,UAGvB,eAACgB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,KAAK,QACLrI,MAAM,UACN5D,QAAS,WACPpC,EAAQuB,KAAR,kBAAwBgB,EAAIO,QAC5B9C,EAAQwB,GAAG,IALf,uBAUA,cAAC4M,GAAA,EAAD,CACEC,KAAK,QACLrI,MAAM,UACN5D,SAzFLU,EAyFwBP,EAAIO,MAzFb5B,EAyFoB0I,EAzFF,WAC9C6O,IACFC,EAAWD,EAAQnP,QAAO,SAAC0J,EAAGpJ,GAAJ,OAAUA,IAAM1I,MAC1C8X,EAAqBlW,GACrBsU,EAAe3Q,EAAc,MAkFX,+BA5DDlE,EAAIO,OA1BP,IAACA,EAAe5B,OAqG3BuX,GAA8B,IAAnBA,EAAQjP,QAClB,mCACE,cAACzC,EAAA,EAAD,CACEmG,MAAM,SACND,UAAU,KACV7O,QAAQ,KACRqD,UAAWvB,EAAQqY,QAJrB,oCChJN/Z,GAAYC,aAAW,SAACC,GAC5B,MAAO,CACLwZ,SAAU,CACRjZ,WAAYP,EAAMQ,QAAQ+Z,QAAQC,KAClCnR,OAAQ,EACRqF,WAAY1O,EAAMa,QAAQ,GAC1BqS,cAAelT,EAAMa,QAAQ,KAE/BuG,MAAO,CACLE,MAAO,QACPxG,aAAcd,EAAMa,QAAQ,IAE9B4Z,aAAc,CACZla,WAAY,QACZ+G,MAAOtH,EAAMQ,QAAQ+Z,QAAQC,KAC7B,UAAW,CACTja,WAAY,WAEdJ,aAAc,GACdiB,SAAU,QACVsZ,cAAe,OACf5Z,aAAcd,EAAMa,QAAQ,IAC5BsG,YAAanH,EAAMa,QAAQ,IAE7B8Z,KAAM,CACJxT,YAAanH,EAAMa,QAAQ,QA8DlB+Z,GA1DE,WACf,IAAMpZ,EAAU1B,KAKhB,OACE,qCACE,cAAC+H,GAAD,IACA,qBAAK9E,UAAWvB,EAAQgY,SAAxB,SACE,eAAC3P,EAAA,EAAD,CAAWvJ,SAAS,KAApB,UACE,cAAC+H,EAAA,EAAD,CAAY3I,QAAQ,KAAK6O,UAAU,KAAKxL,UAAWvB,EAAQ4F,MAA3D,2CAIA,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,KAAK6O,UAAU,KAAKxL,UAAWvB,EAAQ4F,MAA3D,8DAIA,eAACsI,GAAA,EAAD,CACEhQ,QAAQ,WACRqD,UAAWvB,EAAQiZ,aACnB/W,QAAS,kBAAMuL,OAAO5P,KAnB9B,4FAgBM,UAKE,cAAC,KAAD,CAAY0D,UAAWvB,EAAQmZ,OALjC,0BAQA,eAACjL,GAAA,EAAD,CACEhQ,QAAQ,WACRqD,UAAWvB,EAAQiZ,aACnB/W,QAAS,kBAAMuL,OAAO5P,KAzB9B,4FAsBM,UAKE,cAAC,KAAD,CAAY0D,UAAWvB,EAAQmZ,OALjC,sBAQA,cAACtS,EAAA,EAAD,CAAY3I,QAAQ,KAAK6O,UAAU,KAAKxL,UAAWvB,EAAQ4F,MAA3D,2BAGA,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,KAAK6O,UAAU,KAAKxL,UAAWvB,EAAQ4F,MAA3D,sMAKA,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,KAAK6O,UAAU,KAAKxL,UAAWvB,EAAQ4F,MAA3D,sLAKA,cAACiB,EAAA,EAAD,CAAY3I,QAAQ,KAAK6O,UAAU,KAAKxL,UAAWvB,EAAQ4F,MAA3D,sMCnDKyT,GAxBH,WACV,OACE,qCACE,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,eCVGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjQ,MAAK,YAAkD,IAA/CkQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCGCnb,GAXD0b,aAAe,CAC3Blb,QAAS,CACP+Z,QAAS,CACPC,KAAM,WAERmB,UAAW,CACTnB,KAAM,WAERja,WAAY,CAAEqb,QAAS,QAASnb,MAAO,YCH3Cob,IAASC,OACP,cAACC,GAAA,EAAD,CAAe/b,MAAOA,GAAtB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJkZ,SAAS8C,eAAe,SAM1Bd,O","file":"static/js/main.425478f4.chunk.js","sourcesContent":["import { Snackbar, SnackbarProps } from \"@material-ui/core\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\ninterface NotificationProps {\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  message: string;\r\n  alertProps?: AlertProps;\r\n  snackbarProps?: SnackbarProps;\r\n}\r\nconst Notification = (props: NotificationProps) => {\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={props.open}\r\n        autoHideDuration={5000}\r\n        onClose={handleClose}\r\n        {...props.snackbarProps}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n          {...props.alertProps}\r\n          onClose={handleClose}\r\n        >\r\n          {props.message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { Theme, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Notification from \"../util/Notification\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"1px solid #696969\",\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    maxWidth: 800,\r\n    background: theme.palette.background.paper,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  input: {\r\n    border: 0,\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    outlineStyle: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\",\r\n    \"input::-ms-clear\": {\r\n      display: \"none\",\r\n    },\r\n    fontSize: \"calc(0.75em + 1vmin)\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst BigSearchBar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  const [vodVal, setVodVal] = React.useState(\"\");\r\n  const [dotAnimation, setDot] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (dotAnimation === \"...\") setDot(\"\");\r\n      else {\r\n        setDot(dotAnimation + \".\");\r\n      }\r\n    }, 500);\r\n    return () => clearInterval(interval);\r\n  }, [dotAnimation]);\r\n  const handleSubmit = () => {\r\n    let filtered: number = parseInt(vodVal);\r\n    if (!filtered) {\r\n      const index = vodVal.indexOf(\"videos/\");\r\n      if (index >= 0) {\r\n        const tmp = vodVal.slice(index + 7);\r\n        const secondSlash = tmp.indexOf(\"/\");\r\n        if (secondSlash >= 0) {\r\n          filtered = parseInt(tmp.slice(0, secondSlash));\r\n        } else filtered = parseInt(tmp);\r\n      }\r\n    }\r\n    if (filtered) {\r\n      history.push(`/search/${filtered}`);\r\n      history.go(0);\r\n    } else setIsErr(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        autoFocus\r\n        className={classes.input}\r\n        type=\"text\"\r\n        onChange={(e) => setVodVal(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSubmit();\r\n        }}\r\n        placeholder={`Analyze Vod: Enter twitch vod URL${dotAnimation}`}\r\n      />\r\n      <IconButton onClick={handleSubmit} className={classes.button}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Notification\r\n        message={`Vod id cannot be determined from the input`}\r\n        open={isErr}\r\n        setOpen={setIsErr}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default BigSearchBar;\r\n","import React from \"react\";\r\nimport { Theme, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Notification from \"./Notification\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"1px solid lightgrey\",\r\n    borderRadius: 25,\r\n    maxWidth: 600,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  input: {\r\n    border: 0,\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    outlineStyle: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\",\r\n    \"input::-ms-clear\": {\r\n      display: \"none\",\r\n    },\r\n    fontSize: 16,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst SearchBar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  const [vodVal, setVodVal] = React.useState(\"\");\r\n  const handleSubmit = () => {\r\n    let filtered: number = parseInt(vodVal);\r\n    if (!filtered) {\r\n      const index = vodVal.indexOf(\"videos/\");\r\n      if (index >= 0) {\r\n        const tmp = vodVal.slice(index + 7);\r\n        const secondSlash = tmp.indexOf(\"/\");\r\n        if (secondSlash >= 0) {\r\n          filtered = parseInt(tmp.slice(0, secondSlash));\r\n        } else filtered = parseInt(tmp);\r\n      }\r\n    }\r\n    if (filtered) {\r\n      history.push(`/search/${filtered}`);\r\n      history.go(0);\r\n    } else setIsErr(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setVodVal(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSubmit();\r\n        }}\r\n        placeholder=\"Enter twitch vod URL\"\r\n        className={classes.input}\r\n      />\r\n      <IconButton onClick={handleSubmit} className={classes.button}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Notification\r\n        message={`Failed to find the VOD`}\r\n        open={isErr}\r\n        setOpen={setIsErr}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import Dexie from \"dexie\";\r\nexport type ImageURL = string;\r\nexport type DateString = string;\r\nexport interface VodInfo {\r\n  title: string;\r\n  views: number;\r\n  url: string;\r\n  language: string;\r\n  created_at: DateString;\r\n  published_at: DateString;\r\n  recorded_at: DateString;\r\n  game: string;\r\n  length: number;\r\n  preview: {\r\n    small: ImageURL;\r\n    medium: ImageURL;\r\n    large: ImageURL;\r\n  };\r\n}\r\nexport interface Comment {\r\n  seconds: number;\r\n  message: string;\r\n  commenter: string;\r\n}\r\nexport interface IVod {\r\n  vodID: string;\r\n  channelID: string;\r\n  vodInfo: VodInfo;\r\n  comments: Comment[];\r\n}\r\nexport interface ChannelInfo {\r\n  logo: ImageURL;\r\n  url: string;\r\n}\r\nexport interface IChannel {\r\n  channelID: string;\r\n  name: string;\r\n  channel: ChannelInfo;\r\n}\r\nclass Database extends Dexie {\r\n  vod: Dexie.Table<IVod, string>;\r\n  channel: Dexie.Table<IChannel, string>;\r\n\r\n  constructor() {\r\n    super(\"Database\");\r\n    this.version(1).stores({\r\n      vod: \"vodID\",\r\n      channel: \"channelID, name\",\r\n    });\r\n    this.vod = this.table(\"vod\");\r\n    this.channel = this.table(\"channel\");\r\n  }\r\n}\r\n\r\nexport const db = new Database();\r\n","import { db, VodInfo, IVod, Comment } from \"./db\";\r\n\r\nexport class Vod implements IVod {\r\n  vodID: string;\r\n  channelID: string;\r\n  comments: Comment[];\r\n  vodInfo: VodInfo;\r\n\r\n  constructor(\r\n    vodID: string,\r\n    channelID: string,\r\n    comments: Comment[],\r\n    vodInfo: VodInfo\r\n  ) {\r\n    this.vodID = vodID;\r\n    this.channelID = channelID;\r\n    this.comments = comments;\r\n    this.vodInfo = vodInfo;\r\n  }\r\n  save() {\r\n    db.vod.put(this);\r\n  }\r\n  getComments() {\r\n    return this.comments;\r\n  }\r\n}\r\nexport const getVod = (id: string) => {\r\n  return db.vod.get(id);\r\n};\r\nexport const removeVod = (id: string) => {\r\n  return db.vod.where(\"vodID\").equals(id).delete();\r\n};\r\nexport const clear = () => {\r\n  return db.vod.clear();\r\n};\r\nexport const getNumVods = () => {\r\n  return db.vod.count();\r\n};\r\nexport const getAllVods = () => {\r\n  return db.vod.toArray();\r\n}","import { db, IChannel, ChannelInfo } from \"./db\";\r\nexport class Channel implements IChannel {\r\n  channelID: string;\r\n  name: string;\r\n  channel: ChannelInfo;\r\n  constructor(id: string, name: string, channel: ChannelInfo) {\r\n    this.channelID = id;\r\n    this.name = name;\r\n    this.channel = channel;\r\n  }\r\n  save() {\r\n    db.channel.put(this);\r\n  }\r\n}\r\nexport const getChannel = (id: string) => {\r\n  return db.channel.get(id);\r\n};\r\nexport const removeChannel = (id: string) => {\r\n  return db.vod.where(\"channelID\").equals(id).delete();\r\n};\r\nexport const clear = () => {\r\n  return db.channel.clear();\r\n};\r\n","import { removeVod as removeVodDB, clear as clearVod } from \"./../local_db/vod\";\r\nimport { Comment } from \"./../twitch_api/getComments\";\r\nimport {\r\n  getChannel,\r\n  Channel,\r\n  clear as clearChannel,\r\n} from \"./../local_db/channel\";\r\nimport { VodInfo } from \"./../twitch_api/getVodInfo\";\r\nimport {\r\n  ChannelInfo,\r\n  VodInfo as VodInfoDb,\r\n  Comment as CommentDB,\r\n} from \"../local_db/db\";\r\nimport {\r\n  getVod,\r\n  Vod,\r\n  getNumVods as getNumVodsDB,\r\n  getAllVods as getAllVodsDB,\r\n} from \"../local_db/vod\";\r\n\r\nexport interface VodWithAllInfo {\r\n  vodID: string;\r\n  channelID: string;\r\n  channelName: string;\r\n  channelInfo: ChannelInfo;\r\n  vodInfo: VodInfoDb;\r\n  comments: CommentDB[];\r\n}\r\nexport const getVodFullInfoDB = async (\r\n  vodID: string\r\n): Promise<VodWithAllInfo | null> => {\r\n  const vod = await getVod(vodID);\r\n  if (!vod) return null;\r\n  const channel = await getChannel(vod.channelID);\r\n  if (!channel) return null;\r\n  return {\r\n    vodID: vod.vodID,\r\n    channelID: channel.channelID,\r\n    channelName: channel.name,\r\n    channelInfo: channel.channel,\r\n    vodInfo: vod.vodInfo,\r\n    comments: vod.comments,\r\n  };\r\n};\r\nexport const getVodFullInfo = (\r\n  vodID: string,\r\n  vodInfo: VodInfo,\r\n  comments: Comment[]\r\n) => {\r\n  const { channel, ...filteredVodInfo } = vodInfo;\r\n  return {\r\n    vodID,\r\n    channelID: channel._id,\r\n    channelName: channel.display_name,\r\n    channelInfo: {\r\n      logo: channel.logo,\r\n      url: channel.url,\r\n    },\r\n    vodInfo: filteredVodInfo,\r\n    comments: changeComments(comments),\r\n  };\r\n};\r\nconst changeComments = (comments: Comment[]): CommentDB[] => {\r\n  return comments.map((item) => ({\r\n    seconds: item.content_offset_seconds,\r\n    message: item.message.body,\r\n    commenter: item.commenter.display_name,\r\n  }));\r\n};\r\nexport const saveVods = (\r\n  vodID: string,\r\n  vodInfo: VodInfo,\r\n  comments: Comment[]\r\n) => {\r\n  const channelDB = new Channel(\r\n    vodInfo.channel._id,\r\n    vodInfo.channel.display_name,\r\n    {\r\n      logo: vodInfo.channel.logo,\r\n      url: vodInfo.channel.url,\r\n    }\r\n  );\r\n  channelDB.save();\r\n  const { channel, ...filteredVodInfo } = vodInfo;\r\n  const vod = new Vod(\r\n    vodID,\r\n    channelDB.channelID,\r\n    changeComments(comments),\r\n    filteredVodInfo\r\n  );\r\n  vod.save();\r\n};\r\nexport const removeVod = (vodID: string) => {\r\n  return removeVodDB(vodID);\r\n};\r\nexport const clear = () => {\r\n  clearChannel();\r\n  clearVod();\r\n};\r\nexport const getNumVods = () => {\r\n  return getNumVodsDB();\r\n};\r\nexport const getAllVods = async () => {\r\n  return Promise.all(\r\n    (await getAllVodsDB()).map((res) => {\r\n      return getVodFullInfoDB(res.vodID) as Promise<VodWithAllInfo>;\r\n    })\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumVods } from \"../../services/storage\";\r\nimport React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      fontFamily: \"Alfa Slab One\",\r\n      color: \"white\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    search: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n    appbar: ({ transparent }: NavProp) => {\r\n      if (transparent) {\r\n        return {\r\n          background: \"transparent\",\r\n        };\r\n      }\r\n      return {};\r\n    },\r\n  })\r\n);\r\ninterface NavProp {\r\n  transparent?: boolean;\r\n  disableSearch?: boolean;\r\n  bookmarkNum?: number | null;\r\n}\r\nexport default function Navbar({\r\n  transparent,\r\n  disableSearch,\r\n  bookmarkNum,\r\n}: NavProp) {\r\n  const history = useHistory();\r\n  const classes = useStyles({ transparent });\r\n  const clickBookmark = () => {\r\n    history.push(`/bookmarks`);\r\n    history.go(0);\r\n  };\r\n  const clickDownloadApp = () => {\r\n    history.push(`/releases`);\r\n    history.go(0);\r\n  };\r\n  const [actualBookmarkNum, setNum] = React.useState(bookmarkNum);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (!bookmarkNum) setNum(await getNumVods());\r\n      else setNum(bookmarkNum);\r\n    })();\r\n  }, [bookmarkNum]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            <Link href=\"/\" color=\"inherit\" variant=\"inherit\">\r\n              Streamalytics\r\n            </Link>\r\n          </Typography>\r\n          {!disableSearch && (\r\n            <div className={classes.search}>\r\n              <SearchBar />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow} />\r\n          <Tooltip title=\"Download Clips\" aria-label=\"download clips\">\r\n            <IconButton\r\n              aria-label=\"get desktop app\"\r\n              color=\"inherit\"\r\n              onClick={clickDownloadApp}\r\n            >\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Saved vods\" aria-label=\"saved vods\">\r\n            <IconButton\r\n              aria-label=\"show saved vod analytics\"\r\n              color=\"inherit\"\r\n              onClick={clickBookmark}\r\n            >\r\n              <Badge\r\n                badgeContent={actualBookmarkNum ? actualBookmarkNum : null}\r\n                color=\"secondary\"\r\n              >\r\n                <BookmarksIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { Container, makeStyles, Theme } from \"@material-ui/core\";\r\nimport BigSearchBar from \"./BigSearchBar\";\r\nimport Navbar from \"../util/Navbar\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  bar: {\r\n    animation: `$comeDown 2000ms`,\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    background: \"transparent\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Alfa Slab One, cursive\",\r\n    color: \"white\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: 200,\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"100vw\",\r\n  },\r\n  search: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    animation: `$comeUp 2000ms`,\r\n  },\r\n  \"@keyframes comeUp\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(200%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  \"@keyframes comeDown\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(-200%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  \"@keyframes gradient\": {\r\n    \"0%\": {\r\n      backgroundPosition: \"0% 50%\",\r\n    },\r\n    \"50%\": {\r\n      backgroundPosition: \"25% 50%\",\r\n    },\r\n    \"100%\": {\r\n      backgroundPosition: \"0% 50%\",\r\n    },\r\n  },\r\n  background: {\r\n    position: \"fixed\",\r\n    width: \"400%\",\r\n    height: \"200%\",\r\n    background:\r\n      \"radial-gradient(circle, rgba(57,226,182,1) 8%, rgba(20,176,103,1) 24%, rgba(67,145,207,1) 40%, rgba(81,40,184,1) 54%, rgba(139,79,205,1) 68%, rgba(186,60,162,1) 80%, rgba(204,139,68,1) 93%)\",\r\n    top: \"-150%\",\r\n    left: \"-200%\",\r\n    zIndex: -8,\r\n    transform: \"rotateZ(-10deg)\",\r\n    backgroundPosition: \"80%\",\r\n    backgroundSize: \"400% 400%\",\r\n    animation: \"$gradient 15s ease infinite\",\r\n    overflow: \"hidden\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.bar}>\r\n        <Navbar transparent disableSearch />\r\n      </div>\r\n      <Container maxWidth={false} className={classes.root}>\r\n        <div className={classes.background} />\r\n        <div className={classes.search}>\r\n          <BigSearchBar />\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport Observable from \"../util/Observable\";\r\nconst config = { headers: { \"Client-ID\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\" } };\r\n\r\ninterface Chat {\r\n  comments: Comment[];\r\n  _next?: string;\r\n  _prev?: string;\r\n}\r\nexport interface Comment {\r\n  content_offset_seconds: number;\r\n  _id: string;\r\n  message: {\r\n    body: string;\r\n  };\r\n  commenter: {\r\n    display_name: string;\r\n  };\r\n}\r\n\r\n// This is used to get the first few comments based on time\r\nconst getFirstComments = async (\r\n  videoId: string | number,\r\n  startSeconds = 0\r\n): Promise<Chat> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${videoId}/comments?content_offset_seconds=${startSeconds}`;\r\n\r\n  try {\r\n    const { data } = await axios.get(url, config);\r\n    return data;\r\n  } catch (err) {\r\n    return { comments: [] };\r\n  }\r\n};\r\n// This is used to get the next comments based on the link from the previous comment\r\nconst getNext = async (\r\n  videoId: string | number,\r\n  cursor: string | number\r\n): Promise<Chat> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${videoId}/comments?cursor=${cursor}`;\r\n  try {\r\n    const data: Chat = (await axios.get(url, config)).data;\r\n    return data;\r\n  } catch (err) {\r\n    return { comments: [] };\r\n  }\r\n};\r\nexport const getComments = async (\r\n  videoId: string | number,\r\n  observable: Observable | null = null,\r\n  start = 0,\r\n  end = 200000\r\n): Promise<Comment[]> => {\r\n  const d = end - start;\r\n  if (start < 0 || end < 0 || end < start) {\r\n    return [];\r\n  } else if (d < 5000) {\r\n    let data = await getFirstComments(videoId, start);\r\n    const comments: Comment[] = data.comments\r\n      .filter(\r\n        ({ content_offset_seconds }) =>\r\n          start <= content_offset_seconds && content_offset_seconds < end\r\n      )\r\n      .map(({ content_offset_seconds, _id, message, commenter }) => {\r\n        if (observable) observable.updateProgress(1);\r\n        return {\r\n          content_offset_seconds,\r\n          _id,\r\n          message: { body: message.body },\r\n          commenter: {\r\n            display_name: commenter.display_name,\r\n          },\r\n        };\r\n      });\r\n\r\n    while (data.comments.length && data._next) {\r\n      if (data.comments[data.comments.length - 1].content_offset_seconds > end)\r\n        break;\r\n      data = await getNext(videoId, data._next);\r\n      comments.push(\r\n        ...data.comments\r\n          .filter(\r\n            ({ content_offset_seconds }) =>\r\n              start <= content_offset_seconds && content_offset_seconds < end\r\n          )\r\n          .map(({ content_offset_seconds, _id, message, commenter }) => {\r\n            if (observable) observable.updateProgress(1);\r\n            return {\r\n              content_offset_seconds,\r\n              _id,\r\n              message: { body: message.body },\r\n              commenter: {\r\n                display_name: commenter.display_name,\r\n              },\r\n            };\r\n          })\r\n      );\r\n    }\r\n    return comments;\r\n  } else {\r\n    let allComments: Promise<Comment[]>[] = [];\r\n    const DIVISIONS = 50;\r\n    for (let i = 1; i <= DIVISIONS; i++) {\r\n      allComments.push(\r\n        getComments(\r\n          videoId,\r\n          observable,\r\n          start + ((i - 1) * d) / DIVISIONS,\r\n          start + (i * d) / DIVISIONS\r\n        )\r\n      );\r\n    }\r\n    return Promise.all(allComments).then((comments) => {\r\n      return comments.reduce((acc, curr) => {\r\n        acc.push(...curr);\r\n        return acc;\r\n      });\r\n    });\r\n  }\r\n};\r\n","export type OnUpdate = (progress: number, completed: boolean) => void;\r\nclass Observable {\r\n  private progress: number;\r\n  private onUpdate: OnUpdate | null;\r\n\r\n  constructor(onUpdate: OnUpdate | null) {\r\n    this.progress = 0;\r\n    this.onUpdate = onUpdate;\r\n  }\r\n  updateProgress(decrementAmount: number) {\r\n    this.progress += Math.abs(decrementAmount);\r\n    if (this.onUpdate) this.onUpdate(this.progress, false);\r\n  }\r\n  finish() {\r\n    if (this.onUpdate) this.onUpdate(this.progress, true);\r\n  }\r\n}\r\nexport default Observable;\r\n","import axios from \"axios\";\r\nconst config = { headers: { \"Client-ID\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\" } };\r\n\r\nexport type ImageURL = string;\r\nexport type DateString = string;\r\nexport interface VodInfo {\r\n  title: string;\r\n  views: number;\r\n  url: string;\r\n  language: string;\r\n  created_at: DateString;\r\n  published_at: DateString;\r\n  recorded_at: DateString;\r\n  game: string;\r\n  length: number;\r\n  preview: {\r\n    small: ImageURL;\r\n    medium: ImageURL;\r\n    large: ImageURL;\r\n  };\r\n  channel: {\r\n    display_name: string;\r\n    logo: ImageURL;\r\n    url: string;\r\n    _id: string;\r\n  };\r\n}\r\n\r\nconst getVodInfo = async (id: number | string): Promise<VodInfo> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${id}`;\r\n  const output: VodInfo = {\r\n    title: \"\",\r\n    views: 0,\r\n    url: \"\",\r\n    language: \"\",\r\n    created_at: \"\",\r\n    published_at: \"\",\r\n    recorded_at: \"\",\r\n    game: \"\",\r\n    length: 0,\r\n    preview: {\r\n      small: \"\",\r\n      medium: \"\",\r\n      large: \"\",\r\n    },\r\n    channel: {\r\n      display_name: \"\",\r\n      logo: \"\",\r\n      url: \"\",\r\n      _id: \"\",\r\n    },\r\n  };\r\n  const data = (await axios.get(url, config)).data as VodInfo;\r\n  for (const key in output) {\r\n    if (typeof output[key as keyof VodInfo] === \"object\") {\r\n      // @ts-ignore\r\n      for (const key2 in output[key]) {\r\n        // @ts-ignore\r\n        output[key][key2] = data[key][key2];\r\n      }\r\n    } else {\r\n      // @ts-ignore\r\n      output[key] = data[key];\r\n    }\r\n  }\r\n  return output;\r\n};\r\nexport default getVodInfo;\r\n","import { OnUpdate } from \"./../util/Observable\";\r\nimport { getComments, Comment } from \"../twitch_api/getComments\";\r\nimport { Comment as CommentDB } from \"../local_db/db\";\r\n\r\nimport Observable from \"../util/Observable\";\r\nimport getVodInfo from \"../twitch_api/getVodInfo\";\r\n\r\nexport interface Speed {\r\n  increment: number;\r\n  speeds: number[];\r\n}\r\nexport interface SpeedPoint {\r\n  time: number;\r\n  speed: number;\r\n}\r\nexport const getCommentsData = async (\r\n  id: string,\r\n  onUpdate: OnUpdate | null\r\n): Promise<Comment[]> => {\r\n  const observ = new Observable(onUpdate);\r\n  const vod = await getVodInfo(id);\r\n  const comments = await getComments(id, observ, 0, vod.length);\r\n  observ.finish();\r\n  return comments;\r\n};\r\n\r\nexport const getSpeeds = (\r\n  comments: CommentDB[],\r\n  filter: string[] = [],\r\n  increment = 4\r\n): Speed => {\r\n  let filteredComments: CommentDB[] = [];\r\n  filter = filter\r\n    .filter((item) => item.length > 0)\r\n    .map((item) => item.toLowerCase());\r\n  if (filter.length) {\r\n    const filterSet = new Set(filter);\r\n    comments.forEach((line) => {\r\n      const comment = line.message\r\n        .toLowerCase()\r\n        // eslint-disable-next-line\r\n        .replace(/[,\\/#!$%\\^\\*{}?`~]/g, \"\");\r\n      const split = comment.split(\" \");\r\n      for (const item of split) {\r\n        if (filterSet.has(item)) {\r\n          filteredComments.push(line);\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    filteredComments = comments;\r\n  }\r\n  if (filteredComments.length === 0) return { increment, speeds: [] };\r\n  const lastSecond = filteredComments[filteredComments.length - 1].seconds;\r\n  const speeds: number[] = Array(~~(lastSecond / increment) + 2).fill(0);\r\n  filteredComments.forEach((comment) => {\r\n    const time = comment.seconds;\r\n    speeds[~~(time / increment)] += 1 / increment;\r\n  });\r\n  return { increment, speeds };\r\n};\r\nexport const flattenSpeeds = (speed: Speed, flattenFactor: number): Speed => {\r\n  const dividedSpeeds: number[] = speed.speeds.map(\r\n    (item) => item / flattenFactor\r\n  );\r\n  const newSpeeds: number[] = [];\r\n  let i = 0;\r\n  while (i < dividedSpeeds.length) {\r\n    let tmp = 0;\r\n    for (let j = 0; j < flattenFactor; j++) {\r\n      if (i === dividedSpeeds.length) break;\r\n      tmp += dividedSpeeds[i];\r\n      i++;\r\n    }\r\n    newSpeeds.push(tmp);\r\n  }\r\n  return { increment: speed.increment * flattenFactor, speeds: newSpeeds };\r\n};\r\nexport const convertToSpeedPoint = (speed: Speed): SpeedPoint[] => {\r\n  return speed.speeds.map((s, i) => ({ time: i * speed.increment, speed: s }));\r\n};\r\n","import { makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  return {\r\n    title: {\r\n      marginBottom: theme.spacing(2),\r\n      fontFamily: \"'New Tegomin', serif\",\r\n    },\r\n    subtitle: { fontFamily: \"'New Tegomin', serif\" },\r\n    info: {\r\n      margin: theme.spacing(5),\r\n    },\r\n  };\r\n});\r\nconst ErrorVodPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.info}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          component=\"h1\"\r\n          className={classes.title}\r\n          align=\"center\"\r\n        >\r\n          <b> Uh Oh! </b>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h2\"\r\n          className={classes.subtitle}\r\n          align=\"center\"\r\n        >\r\n          The VOD you are looking for doesn't seem to exist! Are you sure this\r\n          VOD hasn't expired?\r\n        </Typography>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ErrorVodPage;\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  CardHeader,\r\n  IconButton,\r\n  Avatar,\r\n  Link,\r\n  CardMedia,\r\n  CardActionArea,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\nimport { Comment } from \"../../../twitch_api/getComments\";\r\ninterface VodInfoCardProps {\r\n  elevation: number;\r\n  downloadComments: () => void;\r\n  saveVod: () => void;\r\n  loadComments: () => Promise<Comment[]>;\r\n  vodInfo: VodWithAllInfo;\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n});\r\nconst VodInfoCard = ({\r\n  vodInfo,\r\n  elevation,\r\n  downloadComments,\r\n  saveVod,\r\n}: VodInfoCardProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card elevation={elevation} className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <IconButton\r\n            onClick={() => {\r\n              window.open(vodInfo.channelInfo.url);\r\n            }}\r\n          >\r\n            <Avatar aria-label=\"avatar image\" src={vodInfo.channelInfo.logo} />\r\n          </IconButton>\r\n        }\r\n        title={\r\n          <Typography variant=\"subtitle1\">{vodInfo.vodInfo.title}</Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            By{\" \"}\r\n            <Link\r\n              href={vodInfo.channelInfo.url}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {vodInfo.channelName}\r\n            </Link>\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardActionArea\r\n        onClick={() => {\r\n          window.open(vodInfo.vodInfo.url);\r\n        }}\r\n      >\r\n        <CardMedia\r\n          image={vodInfo.vodInfo.preview.large}\r\n          title=\"Go to vod\"\r\n          className={classes.media}\r\n        />\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={downloadComments}>\r\n          download chat\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={saveVod}>\r\n          save this vod\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default VodInfoCard;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getInnerDims = () => {\r\n  return {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  };\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n  const [winDim, setWinDim] = useState(getInnerDims());\r\n  useEffect(() => {\r\n    const handleResize = () => setWinDim(getInnerDims());\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return winDim;\r\n};\r\nexport const useWidth = () => {\r\n  return useWindowDimensions().width;\r\n};\r\nexport const useHeight = () => {\r\n  return useWindowDimensions().height;\r\n};\r\n","import {\r\n  VictoryLine,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  createContainer,\r\n  VictoryZoomContainerProps,\r\n  VictoryVoronoiContainerProps,\r\n  VictoryLabel,\r\n} from \"victory\";\r\nimport { DomainPropType } from \"victory-core\";\r\nimport React from \"react\";\r\nimport {\r\n  convertToSpeedPoint,\r\n  flattenSpeeds,\r\n  Speed,\r\n} from \"../../../services/speeds\";\r\nimport { useWidth } from \"../../../util/util\";\r\n\r\ninterface ChartProps {\r\n  data: Speed;\r\n  flatten: number;\r\n}\r\n\r\nconst convertToSeconds = (num: number) => {\r\n  const numHours = ~~(num / 3600);\r\n  const numMins = ~~((num - numHours * 3600) / 60);\r\n  const numSecs = num - numHours * 3600 - numMins * 60;\r\n  return `${numHours}h ${numMins}m ${numSecs}s`;\r\n};\r\n\r\nconst Chart = (props: ChartProps) => {\r\n  const VictoryZoomVoronoiContainer = createContainer<\r\n    VictoryZoomContainerProps,\r\n    VictoryVoronoiContainerProps\r\n  >(\"zoom\", \"voronoi\");\r\n  const [zoomXDomain, setZoomXDomain] = React.useState<\r\n    [number, number] | [Date, Date]\r\n  >([0, 1000000]);\r\n  const [entireDomain, setEntireDomain] = React.useState<\r\n    DomainPropType | undefined\r\n  >();\r\n  React.useEffect(() => {\r\n    if (props.data.speeds.length) {\r\n      setEntireDomain({\r\n        x: [0, props.data.speeds.length * props.data.increment],\r\n        y: [0, Math.max(...props.data.speeds) + 0.5],\r\n      });\r\n    }\r\n  }, [props.data]);\r\n  const windowWidth = useWidth();\r\n  const [width, setWidth] = React.useState(0);\r\n  const graphRef = React.useCallback(\r\n    (node) => {\r\n      if (node !== null) {\r\n        setWidth(node.getBoundingClientRect().width);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [windowWidth]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      ref={graphRef}\r\n      key={props.data.speeds.length}\r\n    >\r\n      <VictoryChart\r\n        height={300}\r\n        width={width}\r\n        padding={{ top: 50, left: 80, right: 50, bottom: 50 }}\r\n        domain={entireDomain}\r\n        containerComponent={\r\n          <VictoryZoomVoronoiContainer\r\n            zoomDimension=\"x\"\r\n            responsive={false}\r\n            onZoomDomainChange={(domain) => {\r\n              setZoomXDomain(domain.x);\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <VictoryAxis\r\n          dependentAxis\r\n          label=\"Messages\"\r\n          axisLabelComponent={<VictoryLabel dy={-20} />}\r\n        />\r\n        <VictoryAxis label=\"Time (s)\" tickFormat={(x) => convertToSeconds(x)} />\r\n        <VictoryLine\r\n          data={convertToSpeedPoint(\r\n            flattenSpeeds(props.data, props.flatten)\r\n          ).filter((d) => d.time >= zoomXDomain[0] && d.time <= zoomXDomain[1])}\r\n          interpolation=\"natural\"\r\n          x=\"time\"\r\n          y=\"speed\"\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Chart, (prevProps, nextProps) => {\r\n  return (\r\n    prevProps.flatten === nextProps.flatten &&\r\n    prevProps.data.speeds.length === nextProps.data.speeds.length\r\n  );\r\n});\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  makeStyles,\r\n  Slider,\r\n  CardContent,\r\n  Theme,\r\n  CardActions,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SpeedsChart from \"../Charts/SpeedsChart\";\r\n\r\nimport React, { BaseSyntheticEvent } from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\nimport { getSpeeds, Speed } from \"../../../services/speeds\";\r\ninterface SpeedsChartCardProps {\r\n  vodInfo: VodWithAllInfo;\r\n  elevation: number;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  slider: {\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(8),\r\n    width: 250,\r\n    margin: 0,\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n  header: {\r\n    paddingBottom: 0,\r\n  },\r\n  chart: {\r\n    marginTop: -40,\r\n    paddingBottom: 0,\r\n  },\r\n  action: {\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    marginBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    alignItems: \"flex-start\",\r\n  },\r\n  filter: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(3),\r\n    width: \"100%\",\r\n  },\r\n  updateButton: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst SpeedsChartCard = ({ vodInfo, elevation }: SpeedsChartCardProps) => {\r\n  const classes = useStyles();\r\n  const [flatten, setFlatten] = React.useState(1);\r\n  const [data, setData] = React.useState<Speed>(getSpeeds(vodInfo.comments));\r\n\r\n  const onUpdate = (e: BaseSyntheticEvent) => {\r\n    e.preventDefault();\r\n    const target = e.currentTarget;\r\n    const filter = target.elements[\"filter\"].value as string;\r\n    setData(getSpeeds(vodInfo.comments, filter.split(\"\\n\")));\r\n  };\r\n  return (\r\n    <Card elevation={elevation}>\r\n      <CardHeader\r\n        title={<Typography variant=\"subtitle1\">Chat Intensity</Typography>}\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            Zoom in and drag to check out the graph\r\n          </Typography>\r\n        }\r\n        className={classes.header}\r\n      />\r\n      <CardContent className={classes.chart}>\r\n        <SpeedsChart data={data} flatten={flatten} />\r\n      </CardContent>\r\n      <CardActions className={classes.action}>\r\n        <Grid container>\r\n          <Grid item xs={12} md={4} xl={3} className={classes.slider}>\r\n            <Slider\r\n              name=\"slider\"\r\n              value={flatten}\r\n              marks={[\r\n                { value: 1, label: \"Most detailed\" },\r\n                { value: 10, label: \"Least detailed\" },\r\n              ]}\r\n              min={1}\r\n              max={10}\r\n              defaultValue={flatten}\r\n              onChange={(_, newVal: number | number[]) => {\r\n                setFlatten(newVal as number);\r\n              }}\r\n              aria-labelledby=\"flatten size\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md xl={6}>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={onUpdate}\r\n            >\r\n              <div className={classes.filter}>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  label=\"Filter by keywords (Put each keyword on a new line)\"\r\n                  name=\"filter\"\r\n                  multiline\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.updateButton}\r\n              >\r\n                Update\r\n              </Button>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default SpeedsChartCard;\r\n","import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Keyword } from \"../../../services/keywords\";\r\n\r\ninterface KeywordsChartProps {\r\n  data: Keyword[];\r\n  setHoveredData: (item: Keyword | null) => void;\r\n}\r\n\r\nconst Chart = ({ data, setHoveredData }: KeywordsChartProps) => {\r\n  const [clickedData, setClickedData] = React.useState<Keyword | null>(null);\r\n  return (\r\n    <div>\r\n      <PieChart\r\n        data={data}\r\n        onMouseOver={(_, index) => {\r\n          setHoveredData(data[index]);\r\n        }}\r\n        onClick={(_, index) => {\r\n          setClickedData(data[index]);\r\n        }}\r\n        onMouseOut={() => {\r\n          setHoveredData(clickedData);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import axios from \"axios\";\r\nimport { VodWithAllInfo } from \"./storage\";\r\nexport interface Keyword {\r\n  color: string;\r\n  value: number;\r\n  title: string | number;\r\n  url: string;\r\n}\r\nexport interface Emote {\r\n  emoteName: string;\r\n  emoteImgURL: string;\r\n}\r\nexport const getKeywords = async (vodInfo: VodWithAllInfo) => {\r\n  try {\r\n    const emotes = (await axios.get(`/api/emotes/${vodInfo.channelID}`))\r\n      .data as Emote[];\r\n    interface EmoteMap {\r\n      [nameLower: string]: {\r\n        url: string;\r\n        name: string;\r\n      };\r\n    }\r\n    const emoteMap: EmoteMap = {};\r\n    emotes.forEach((item) => {\r\n      emoteMap[item.emoteName.toLowerCase()] = {\r\n        url: item.emoteImgURL,\r\n        name: item.emoteName,\r\n      };\r\n    });\r\n    const emoteNumTimes = {};\r\n    let total = 0;\r\n    vodInfo.comments\r\n      .map((item) =>\r\n        item.message\r\n          .trim()\r\n          .toLowerCase()\r\n          // eslint-disable-next-line\r\n          .replace(/[,\\/#!$%\\^\\*{}?`~]/g, \"\")\r\n      )\r\n      .filter((msg) => msg.length > 0)\r\n      .forEach((item) => {\r\n        const split = item.split(\" \");\r\n        const hasUsed = new Set();\r\n        for (let i = 0; i < split.length; i++) {\r\n          const trimmed = item.trim();\r\n          if (trimmed in emoteMap && !hasUsed.has(trimmed)) {\r\n            hasUsed.add(emoteMap[trimmed].name);\r\n            if (!(trimmed in emoteNumTimes)) emoteNumTimes[trimmed] = 0;\r\n            emoteNumTimes[trimmed]++;\r\n            total++;\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    const output: Keyword[] = [];\r\n    const colours = [\r\n      \"#2d080a\",\r\n      \"#c2f970\",\r\n      \"#7c3626\",\r\n      \"#a499b3\",\r\n      \"#f5853f\",\r\n      \"#89d2dc\",\r\n      \"#093824\",\r\n      \"#98a6d4\",\r\n      \"#ffcdbc\",\r\n      \"#6564db\",\r\n    ];\r\n    for (const key in emoteNumTimes) {\r\n      output.push({\r\n        title: emoteMap[key].name,\r\n        value: (100 * emoteNumTimes[key]) / total,\r\n        color: \"#E38627\",\r\n        url: emoteMap[key].url,\r\n      });\r\n    }\r\n    output.sort((a, b) => {\r\n      if (a.value >= b.value) return -1;\r\n      return 0;\r\n    });\r\n    const newOutput: Keyword[] = [];\r\n    let otherPercent = 0;\r\n    for (let i = 0; i < output.length; i++) {\r\n      if (output[i].value >= 0.5) {\r\n        newOutput.push({\r\n          ...output[i],\r\n          color: colours[i % colours.length],\r\n        });\r\n      } else {\r\n        otherPercent += output[i].value;\r\n      }\r\n    }\r\n    if (otherPercent > 0) {\r\n      newOutput.push({\r\n        title: \"Other\",\r\n        value: otherPercent,\r\n        color: \"#E38627\",\r\n        url: \"\",\r\n      });\r\n    }\r\n    return newOutput;\r\n  } catch (err) {\r\n    return [\r\n      {\r\n        title: \"Error\",\r\n        value: 100,\r\n        color: \"#E38627\",\r\n        url: \"\",\r\n      },\r\n    ];\r\n  }\r\n};\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  makeStyles,\r\n  CardContent,\r\n  Theme,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport KeywordsChart from \"../Charts/KeywordsChart\";\r\n\r\nimport React from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\nimport { getKeywords, Keyword } from \"../../../services/keywords\";\r\ninterface KeywordsChartProps {\r\n  vodInfo: VodWithAllInfo;\r\n  elevation: number;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  slider: {\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(5),\r\n    width: 250,\r\n    margin: 0,\r\n  },\r\n  header: {\r\n    paddingBottom: 0,\r\n  },\r\n  action: {\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  pie: {\r\n    maxWidth: \"23vw\",\r\n  },\r\n  content: { display: \"flex\" },\r\n  info: {\r\n    alignSelf: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\nconst KeywordsCard = ({ vodInfo, elevation }: KeywordsChartProps) => {\r\n  const [selectedData, setSelectedData] = React.useState<null | Keyword>(null);\r\n  const [data, setData] = React.useState<Keyword[]>([]);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      setData(await getKeywords(vodInfo));\r\n    })();\r\n  }, [vodInfo]);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card elevation={elevation} className={classes.root}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"subtitle1\">Most Frequent Emotes</Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            Hover over or click for info\r\n          </Typography>\r\n        }\r\n        className={classes.header}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <div className={classes.pie}>\r\n          <KeywordsChart data={data} setHoveredData={setSelectedData} />\r\n        </div>\r\n        <div className={classes.info}>\r\n          {selectedData && (\r\n            <div>\r\n              <Typography component=\"h4\" variant=\"h6\">\r\n                {selectedData.title} ({Math.round(selectedData.value * 10) / 10}\r\n                %)\r\n              </Typography>\r\n              {selectedData.url && (\r\n                <img src={selectedData.url} alt={`${selectedData.title}`} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n      <CardActions className={classes.action}></CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default KeywordsCard;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\ninterface MoreVodInfoCardProps {\r\n  vodInfo: VodWithAllInfo;\r\n  elevation: number;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  cell: {\r\n    border: 0,\r\n  },\r\n  container: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\ninterface TableData {\r\n  x: string;\r\n  y: string | number;\r\n}\r\nconst displayNice = (num: number) => {\r\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\nconst convertToSeconds = (num: number) => {\r\n  const numHours = ~~(num / 3600);\r\n  const numMins = ~~((num - numHours * 3600) / 60);\r\n  const numSecs = num - numHours * 3600 - numMins * 60;\r\n  return `${numHours}h ${numMins}m ${numSecs}s`;\r\n};\r\nconst MoreVodInfoCard = ({ vodInfo, elevation }: MoreVodInfoCardProps) => {\r\n  const classes = useStyles();\r\n  const data: TableData[] = [\r\n    {\r\n      x: \"Total Chat Messages\",\r\n      y: displayNice(vodInfo.comments.length),\r\n    },\r\n    {\r\n      x: \"Total Commenters\",\r\n      y: displayNice(\r\n        new Set(vodInfo.comments.map((item) => item.commenter)).size\r\n      ),\r\n    },\r\n    {\r\n      x: \"Total Views\",\r\n      y: displayNice(vodInfo.vodInfo.views),\r\n    },\r\n    {\r\n      x: \"Vod Length\",\r\n      y: convertToSeconds(vodInfo.vodInfo.length),\r\n    },\r\n    {\r\n      x: \"Recorded Time\",\r\n      y: `${new Date(vodInfo.vodInfo.recorded_at).toUTCString()}`,\r\n    },\r\n  ];\r\n  return (\r\n    <Paper elevation={elevation} className={classes.container}>\r\n      <Table aria-label=\"extra vod info\">\r\n        <TableBody>\r\n          {data.map(({ x, y }) => {\r\n            return (\r\n              <TableRow key={x}>\r\n                <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                  {x}\r\n                </TableCell>\r\n                <TableCell align=\"right\" className={classes.cell}>\r\n                  {y}\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\nexport default MoreVodInfoCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../util/Navbar\";\r\nimport { getCommentsData } from \"../../services/speeds\";\r\nimport ErrorVodPage from \"./ErrorVodPage\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../util/Notification\";\r\nimport { Comment } from \"../../twitch_api/getComments\";\r\nimport VodInfoCard from \"./Cards/VodInfoCard\";\r\nimport SpeedsChartCard from \"./Cards/SpeedsChartCard\";\r\nimport KeywordsCard from \"./Cards/KeywordsCard\";\r\nimport {\r\n  getVodFullInfo,\r\n  getVodFullInfoDB,\r\n  saveVods,\r\n  VodWithAllInfo,\r\n} from \"../../services/storage\";\r\nimport { getNumVods } from \"../../local_db/vod\";\r\nimport getVodInfo, { VodInfo } from \"../../twitch_api/getVodInfo\";\r\nimport MoreVodInfoCard from \"./Cards/MoreVodInfoCard\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadedText: {\r\n    margin: theme.spacing(5),\r\n    fontFamily: \"'Delta Gothic One', cursive\",\r\n  },\r\n}));\r\nconst AnalyzeVod = () => {\r\n  const classes = useStyles();\r\n  const { vodID } = useParams() as { vodID: string };\r\n\r\n  const [vodInfo, setVodInfo] = React.useState<VodWithAllInfo | null>(null);\r\n  const [comments, setComments] = React.useState<Comment[]>([]);\r\n  const [twitchVodInfo, setTwitchVodInfo] = React.useState<VodInfo | null>(\r\n    null\r\n  );\r\n\r\n  const [isErr, setIsErr] = React.useState(false);\r\n\r\n  // -1 (done loading) >= 0 (number of comments that have been loaded)\r\n  const [commentsLoaded, setCommentsLoaded] = React.useState<number>(-2);\r\n\r\n  const [saveErr, setSaveErr] = React.useState(false);\r\n  const [saveMsg, setSaveMsg] = React.useState(\"\");\r\n  const [bookmarkNum, setBookmarkNum] = React.useState<number>(0);\r\n  const loadComments = async () => {\r\n    try {\r\n      const comments = await getCommentsData(vodID, (prog, completed) => {\r\n        if (completed) setCommentsLoaded(-1);\r\n        else setCommentsLoaded(prog);\r\n      });\r\n      setComments(comments);\r\n      return comments;\r\n    } catch (e) {\r\n      setIsErr(true);\r\n      return [];\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const vodFullInfo = await getVodFullInfoDB(vodID);\r\n      setVodInfo(vodFullInfo);\r\n      setBookmarkNum(await getNumVods());\r\n      if (vodFullInfo) {\r\n        setCommentsLoaded(-1);\r\n      } else {\r\n        const comments = await loadComments();\r\n        const twitchVodInfo = await getVodInfo(vodID);\r\n        setTwitchVodInfo(twitchVodInfo);\r\n        setVodInfo(getVodFullInfo(vodID, twitchVodInfo, comments));\r\n      }\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [vodID]);\r\n  const saveVod = async () => {\r\n    const savedInfo = await getVodFullInfoDB(vodID);\r\n    if (savedInfo) {\r\n      setSaveErr(true);\r\n      setSaveMsg(\"Already saved\");\r\n      return;\r\n    }\r\n    setBookmarkNum(bookmarkNum + 1);\r\n    if (twitchVodInfo) {\r\n      try {\r\n        saveVods(vodID, twitchVodInfo, comments);\r\n      } catch (err) {\r\n        setSaveErr(true);\r\n        setSaveMsg(\"Failed to save vod\");\r\n      }\r\n    }\r\n  };\r\n  const downloadComments = async () => {\r\n    if (vodInfo) {\r\n      const content = `VodID: ${vodInfo.vodID}\\n${vodInfo.comments\r\n        .map((item) => `${item.commenter}[${item.seconds}s]: ${item.message}`)\r\n        .join(\"\\n\")}`;\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([content], {\r\n        type: \"text/plain;charset=utf-8\",\r\n      });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"comments.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n      document.body.removeChild(element);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bookmarkNum={bookmarkNum} />\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <br />\r\n\r\n        {isErr ? (\r\n          <ErrorVodPage />\r\n        ) : (\r\n          <>\r\n            <Grid container spacing={3}>\r\n              {commentsLoaded === -1 && vodInfo && (\r\n                <>\r\n                  <Grid item xs={12} md={6} lg={4} xl={3}>\r\n                    <VodInfoCard\r\n                      vodInfo={vodInfo}\r\n                      elevation={5}\r\n                      downloadComments={downloadComments}\r\n                      saveVod={saveVod}\r\n                      loadComments={loadComments}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6} lg={8} xl={4}>\r\n                    <MoreVodInfoCard elevation={5} vodInfo={vodInfo} />\r\n                  </Grid>\r\n                  <Grid item xs={12} xl={5}>\r\n                    <KeywordsCard elevation={5} vodInfo={vodInfo} />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <SpeedsChartCard elevation={5} vodInfo={vodInfo} />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            {commentsLoaded >= 0 && (\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                className={classes.loadedText}\r\n              >\r\n                Loaded {commentsLoaded} comments...\r\n              </Typography>\r\n            )}\r\n          </>\r\n        )}\r\n        <Notification message={saveMsg} setOpen={setSaveErr} open={saveErr} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzeVod;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardHeader,\r\n  CardMedia,\r\n  Container,\r\n  IconButton,\r\n  Typography,\r\n  Link,\r\n  Theme,\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  getAllVods,\r\n  getNumVods,\r\n  removeVod as removeVodFromStorage,\r\n  VodWithAllInfo,\r\n} from \"../../services/storage\";\r\nimport Navbar from \"../util/Navbar\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  noSaved: {\r\n    paddingTop: theme.spacing(4),\r\n    fontFamily: \"'New Tegomin', serif\",\r\n  },\r\n}));\r\nconst Bookmark = () => {\r\n  const [allVods, setAllVods] = React.useState<VodWithAllInfo[] | null>(null);\r\n  const classes = useStyles();\r\n  const [bookmarkNum, setBookmarkNum] = React.useState<number>(0);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const vods = await getAllVods();\r\n      setAllVods(vods);\r\n      setBookmarkNum(await getNumVods());\r\n    })();\r\n  }, []);\r\n  const removeVod = (vodID: string, index: number) => () => {\r\n    if (allVods) {\r\n      setAllVods(allVods.filter((_, i) => i !== index));\r\n      removeVodFromStorage(vodID);\r\n      setBookmarkNum(bookmarkNum - 1);\r\n    }\r\n  };\r\n  const elevation = 5;\r\n  const GridItem = ({ cardInner }: { cardInner: React.ReactNode }) => {\r\n    return (\r\n      <Grid item xs={12} sm={12} md={6} lg={4}>\r\n        <Card elevation={elevation}>{cardInner}</Card>\r\n      </Grid>\r\n    );\r\n  };\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Navbar bookmarkNum={bookmarkNum} />\r\n      <Container maxWidth={\"xl\"}>\r\n        <br />\r\n        {allVods && (\r\n          <Grid container spacing={3}>\r\n            {allVods.map((vod, i) => {\r\n              return (\r\n                <GridItem\r\n                  key={vod.vodID}\r\n                  cardInner={\r\n                    <>\r\n                      <CardHeader\r\n                        avatar={\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              window.open(allVods[i].channelInfo.url);\r\n                            }}\r\n                          >\r\n                            <Avatar\r\n                              aria-label=\"avatar image\"\r\n                              src={allVods[i].channelInfo.logo}\r\n                            />\r\n                          </IconButton>\r\n                        }\r\n                        title={\r\n                          <Typography variant=\"subtitle1\">\r\n                            {allVods[i].vodInfo.title}\r\n                          </Typography>\r\n                        }\r\n                        subheader={\r\n                          <Typography variant=\"subtitle2\">\r\n                            By{\" \"}\r\n                            <Link\r\n                              href={allVods[i].channelInfo.url}\r\n                              target=\"_blank\"\r\n                              rel=\"noreferrer\"\r\n                            >\r\n                              {allVods[i].channelName}\r\n                            </Link>{\" \"}\r\n                            at{\" \"}\r\n                            {new Date(\r\n                              allVods[i].vodInfo.recorded_at\r\n                            ).toDateString()}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          window.open(allVods[i].vodInfo.url);\r\n                        }}\r\n                      >\r\n                        <CardMedia\r\n                          image={allVods[i].vodInfo.preview.large}\r\n                          title=\"Go to vod\"\r\n                          className={classes.media}\r\n                        />\r\n                      </CardActionArea>\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            history.push(`/search/${vod.vodID}`);\r\n                            history.go(0);\r\n                          }}\r\n                        >\r\n                          Analytics\r\n                        </Button>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={removeVod(vod.vodID, i)}\r\n                        >\r\n                          Remove vod\r\n                        </Button>\r\n                      </CardActions>\r\n                    </>\r\n                  }\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n        {allVods && allVods.length === 0 && (\r\n          <>\r\n            <Typography\r\n              align=\"center\"\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              className={classes.noSaved}\r\n            >\r\n              No Saved Vods\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Bookmark;\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport Navbar from \"./util/Navbar\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  return {\r\n    download: {\r\n      background: theme.palette.primary.main,\r\n      margin: 0,\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(10),\r\n    },\r\n    title: {\r\n      color: \"white\",\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    mainDownload: {\r\n      background: \"white\",\r\n      color: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        background: \"#C4ACE6\",\r\n      },\r\n      borderRadius: 20,\r\n      fontSize: \"1.5em\",\r\n      textTransform: \"none\",\r\n      marginBottom: theme.spacing(15),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  };\r\n});\r\nconst Releases = () => {\r\n  const classes = useStyles();\r\n  const windowsLink =\r\n    \"https://github.com/JamesYL/TwitchClips/releases/download/v1.0.1/Streamalytics-1.0.1.exe\";\r\n  const macLink =\r\n    \"https://github.com/JamesYL/TwitchClips/releases/download/v1.0.1/Streamalytics-1.0.1.dmg\";\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={classes.download}>\r\n        <Container maxWidth=\"md\">\r\n          <Typography variant=\"h2\" component=\"h1\" className={classes.title}>\r\n            Get Streamalytics for Desktop\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\r\n            Download clips of a VOD quickly and efficiently.\r\n          </Typography>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.mainDownload}\r\n            onClick={() => window.open(windowsLink)}\r\n          >\r\n            <GetAppIcon className={classes.icon} />\r\n            Download for Windows\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.mainDownload}\r\n            onClick={() => window.open(macLink)}\r\n          >\r\n            <GetAppIcon className={classes.icon} />\r\n            Download for Mac\r\n          </Button>\r\n          <Typography variant=\"h2\" component=\"h2\" className={classes.title}>\r\n            Why Download?\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\r\n            There are plenty of alternatives for downloading Twitch VODs such as\r\n            using online VOD downloaders, ffmpeg, or youtube-dl. While these are\r\n            perfectly valid options, they are much slower.\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\r\n            This app downloads video packets directly from Twitch using all\r\n            available internet bandwidth, and then combines that into a single\r\n            video file through your own computer.\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\r\n            There are online VOD downloaders that do this exact process, but\r\n            then downloading a video file that is potentially hundreds of\r\n            megabytes or gigabytes big will be a bottleneck.\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Releases;\r\n","import Home from \"./components/home/Home\";\r\nimport \"fontsource-roboto\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AnalyzeVod from \"./components/analysis/AnalyzeVod\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Bookmark from \"./components/bookmarks/Bookmark\";\r\nimport Releases from \"./components/releases\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <StylesProvider injectFirst>\r\n        <Switch>\r\n          <Route path=\"/releases\">\r\n            <Releases />\r\n          </Route>\r\n          <Route path=\"/search/:vodID\">\r\n            <AnalyzeVod />\r\n          </Route>\r\n          <Route path=\"/bookmarks\">\r\n            <Bookmark />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </StylesProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#7015c2\",\r\n    },\r\n    secondary: {\r\n      main: \"#25e220\",\r\n    },\r\n    background: { default: \"azure\", paper: \"azure\" },\r\n  },\r\n});\r\nexport default theme;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport theme from \"./theme\";\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}