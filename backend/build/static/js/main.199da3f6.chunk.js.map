{"version":3,"sources":["components/util/Notification.tsx","components/home/BigSearchBar.tsx","components/util/SearchBar.tsx","services/storage.ts","components/util/Navbar.tsx","components/home/Home.tsx","twitch_api/getComments.ts","util/Observable.ts","twitch_api/getVodInfo.ts","services/speeds.ts","components/analysis/ErrorVodPage.tsx","components/analysis/VodInfoCard.tsx","util/getDimensions.ts","components/analysis/SpeedsChart.tsx","components/analysis/SpeedsChartCard.tsx","components/analysis/AnalyzeVod.tsx","components/bookmarks/Bookmark.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["Notification","props","handleClose","setOpen","Snackbar","open","autoHideDuration","onClose","snackbarProps","elevation","variant","severity","alertProps","message","useStyles","makeStyles","theme","root","border","borderRadius","display","width","maxWidth","background","palette","paper","button","marginLeft","marginTop","spacing","marginBottom","input","flex","outlineStyle","boxShadow","borderColor","fontSize","BigSearchBar","history","useHistory","classes","React","useState","isErr","setIsErr","vodVal","setVodVal","handleSubmit","filtered","parseInt","index","indexOf","tmp","slice","secondSlash","push","go","className","type","onChange","e","target","value","onKeyDown","key","placeholder","IconButton","onClick","SearchBar","STORAGE_KEY","getVodsObject","jsonStr","window","localStorage","getItem","setItem","JSON","stringify","parse","saveVods","vod","console","log","name","addOrUpdateVod","vodInfo","vodObj","vodID","getSingleVodInfo","getNumVods","Object","keys","length","createStyles","grow","flexGrow","menuButton","marginRight","title","fontFamily","color","breakpoints","up","backgroundColor","search","appbar","transparent","Navbar","AppBar","position","Toolbar","Typography","Link","href","disableSearch","Tooltip","aria-label","Badge","badgeContent","bookmarkNum","bar","animation","top","left","flexDirection","minHeight","height","justifyContent","overflow","margin","padding","opacity","transform","backgroundPosition","zIndex","backgroundSize","Home","Container","config","headers","getFirstComments","videoId","a","startSeconds","url","axios","get","data","comments","getNext","cursor","getComments","observable","start","end","d","filter","content_offset_seconds","map","_id","commenter","updateProgress","body","display_name","_next","allComments","DIVISIONS","i","Promise","all","then","reduce","acc","curr","Observable","onUpdate","progress","this","decrementAmount","Math","abs","getVodInfo","id","output","views","language","created_at","published_at","recorded_at","game","preview","small","medium","large","channel","logo","key2","getCommentsData","observ","finish","getSpeeds","increment","speeds","lastSecond","Array","fill","forEach","comment","time","flattenSpeeds","speed","flattenFactor","dividedSpeeds","item","newSpeeds","j","subtitle","info","ErrorVodPage","component","align","media","paddingTop","VodInfoCard","downloadComments","saveVod","setVodInfo","useEffect","Card","CardHeader","avatar","Avatar","src","subheader","rel","Date","toDateString","CardActionArea","CardMedia","image","CardActions","Button","size","getInnerDims","innerWidth","innerHeight","useWindowDimensions","winDim","setWinDim","handleResize","addEventListener","removeEventListener","Chart","VictoryZoomVoronoiContainer","createContainer","zoomXDomain","setZoomXDomain","windowWidth","setWidth","graphRef","useCallback","node","getBoundingClientRect","style","ref","right","bottom","domain","x","y","max","getEntireDomain","containerComponent","zoomDimension","responsive","onZoomDomainChange","dependentAxis","label","tickFormat","axisLabelComponent","dy","flatten","s","interpolation","slider","paddingLeft","paddingRight","header","paddingBottom","chart","action","SpeedsChartCard","setFlatten","CardContent","SpeedsChart","Slider","marks","min","defaultValue","_","newVal","aria-labelledby","loadedText","AnalyzeVod","commentsLoaded","setCommentsLoaded","saveErr","setSaveErr","saveMsg","setSaveMsg","setComments","setBookmarkNum","useParams","loadComments","prog","completed","res","loadedComments","content","join","element","document","createElement","file","Blob","URL","createObjectURL","download","appendChild","click","removeChild","Grid","container","xs","md","xl","Bookmark","vods","getAllVods","allVods","setAllVods","removeVod","vodsObj","removeVodFromStorage","GridItem","cardInner","sm","lg","process","App","CssBaseline","StylesProvider","injectFirst","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","primary","main","secondary","default","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.199da3f6.chunk.js","sourcesContent":["import { Snackbar, SnackbarProps } from \"@material-ui/core\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\ninterface NotificationProps {\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  message: string;\r\n  alertProps?: AlertProps;\r\n  snackbarProps?: SnackbarProps;\r\n}\r\nconst Notification = (props: NotificationProps) => {\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={props.open}\r\n        autoHideDuration={5000}\r\n        onClose={handleClose}\r\n        {...props.snackbarProps}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n          {...props.alertProps}\r\n          onClose={handleClose}\r\n        >\r\n          {props.message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { Theme, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Notification from \"../util/Notification\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"1px solid #696969\",\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    maxWidth: 800,\r\n    background: theme.palette.background.paper,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  input: {\r\n    border: 0,\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    outlineStyle: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\",\r\n    \"input::-ms-clear\": {\r\n      display: \"none\",\r\n    },\r\n    fontSize: \"calc(0.75em + 1vmin)\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst BigSearchBar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  const [vodVal, setVodVal] = React.useState(\"\");\r\n  const handleSubmit = () => {\r\n    let filtered: number = parseInt(vodVal);\r\n    if (!filtered) {\r\n      const index = vodVal.indexOf(\"videos/\");\r\n      if (index >= 0) {\r\n        const tmp = vodVal.slice(index + 7);\r\n        const secondSlash = tmp.indexOf(\"/\");\r\n        if (secondSlash >= 0) {\r\n          filtered = parseInt(tmp.slice(0, secondSlash));\r\n        } else filtered = parseInt(tmp);\r\n      }\r\n    }\r\n    if (filtered) {\r\n      history.push(`/search/${filtered}`);\r\n      history.go(0);\r\n    } else setIsErr(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        onChange={(e) => setVodVal(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSubmit();\r\n        }}\r\n        placeholder=\"Analyze Vod: Enter twitch vod URL\"\r\n      />\r\n      <IconButton onClick={handleSubmit} className={classes.button}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Notification\r\n        message={`Vod id cannot be determined from the input`}\r\n        open={isErr}\r\n        setOpen={setIsErr}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default BigSearchBar;\r\n","import React from \"react\";\r\nimport { Theme, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Notification from \"./Notification\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"1px solid lightgrey\",\r\n    borderRadius: 25,\r\n    maxWidth: 600,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  input: {\r\n    border: 0,\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    outlineStyle: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\",\r\n    \"input::-ms-clear\": {\r\n      display: \"none\",\r\n    },\r\n    fontSize: 16,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst SearchBar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  const [vodVal, setVodVal] = React.useState(\"\");\r\n  const handleSubmit = () => {\r\n    let filtered: number = parseInt(vodVal);\r\n    if (!filtered) {\r\n      const index = vodVal.indexOf(\"videos/\");\r\n      if (index >= 0) {\r\n        const tmp = vodVal.slice(index + 7);\r\n        const secondSlash = tmp.indexOf(\"/\");\r\n        if (secondSlash >= 0) {\r\n          filtered = parseInt(tmp.slice(0, secondSlash));\r\n        } else filtered = parseInt(tmp);\r\n      }\r\n    }\r\n    if (filtered) {\r\n      history.push(`/search/${filtered}`);\r\n      history.go(0);\r\n    } else setIsErr(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setVodVal(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSubmit();\r\n        }}\r\n        placeholder=\"Enter twitch vod URL\"\r\n        className={classes.input}\r\n      />\r\n      <IconButton onClick={handleSubmit} className={classes.button}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Notification\r\n        message={`Vod id cannot be determined from the input`}\r\n        open={isErr}\r\n        setOpen={setIsErr}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import { Speed } from \"./speeds\";\r\nconst STORAGE_KEY = \"vods\";\r\n\r\nexport interface SingleVodInfo {\r\n  vodID: string | number;\r\n  speeds: Speed;\r\n}\r\nexport const getGenericSingleVodInfo = (): SingleVodInfo => {\r\n  return {\r\n    vodID: -1,\r\n    speeds: {\r\n      increment: 1,\r\n      speeds: [],\r\n    },\r\n  };\r\n};\r\ninterface StoredVodsInfo {\r\n  [vodID: string]: SingleVodInfo;\r\n}\r\nconst getVodsObject = (): StoredVodsInfo => {\r\n  const jsonStr = window.localStorage.getItem(STORAGE_KEY);\r\n  if (!jsonStr) {\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify({}));\r\n    return {};\r\n  }\r\n  try {\r\n    return JSON.parse(jsonStr);\r\n  } catch (e) {\r\n    return {};\r\n  }\r\n};\r\nconst saveVods = (vod: StoredVodsInfo): string => {\r\n  try {\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(vod));\r\n    return \"\";\r\n  } catch (e) {\r\n    console.log(\"test\");\r\n    return e.name;\r\n  }\r\n};\r\nexport const removeVod = (vodID: string | number) => {\r\n  const vodsObj = getVodsObject();\r\n  if (vodID in vodsObj) {\r\n    delete vodsObj[vodID];\r\n  }\r\n  saveVods(vodsObj);\r\n};\r\n/**\r\n * @returns DOMException name, or empty string for success\r\n */\r\nexport const addOrUpdateVod = (vodInfo: SingleVodInfo) => {\r\n  const vodObj = getVodsObject();\r\n  vodObj[vodInfo.vodID] = vodInfo;\r\n  return saveVods(vodObj);\r\n};\r\nexport const clearVods = () => {\r\n  window.localStorage.removeItem(STORAGE_KEY);\r\n};\r\nexport const getSingleVodInfo = (\r\n  vodID: string | number\r\n): SingleVodInfo | undefined => {\r\n  const vodObj = getVodsObject();\r\n  if (vodID in vodObj) return vodObj[vodID];\r\n};\r\nexport const getAllVods = (): SingleVodInfo[] => {\r\n  const vods: SingleVodInfo[] = [];\r\n  const vodObj = getVodsObject();\r\n  for (const key in vodObj) {\r\n    vods.push(vodObj[key]);\r\n  }\r\n  return vods;\r\n};\r\nexport const getNumVods = () => {\r\n  return Object.keys(getVodsObject()).length;\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumVods } from \"../../services/storage\";\r\nimport React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      fontFamily: \"Alfa Slab One, cursive\",\r\n      color: \"white\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    search: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n    appbar: (props: NavProp) => {\r\n      if (props.transparent) {\r\n        return {\r\n          background: \"transparent\",\r\n        };\r\n      }\r\n      return {};\r\n    },\r\n  })\r\n);\r\ninterface NavProp {\r\n  transparent?: boolean;\r\n  disableSearch?: boolean;\r\n  bookmarkNum?: number;\r\n}\r\nexport default function Navbar(props: NavProp) {\r\n  const history = useHistory();\r\n  const classes = useStyles(props);\r\n  const clickBookmark = () => {\r\n    history.push(`/bookmarks`);\r\n    history.go(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            <Link href=\"/\" color=\"inherit\" variant=\"inherit\">\r\n              Streamalytics\r\n            </Link>\r\n          </Typography>\r\n          {!props.disableSearch && (\r\n            <div className={classes.search}>\r\n              <SearchBar />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow} />\r\n          <Tooltip title=\"Saved vods\" aria-label=\"saved vods\">\r\n            <IconButton\r\n              aria-label=\"show saved vod analytics\"\r\n              color=\"inherit\"\r\n              onClick={clickBookmark}\r\n            >\r\n              <Badge\r\n                badgeContent={\r\n                  props.bookmarkNum ? props.bookmarkNum : getNumVods()\r\n                }\r\n                color=\"secondary\"\r\n              >\r\n                <BookmarksIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { Container, makeStyles, Theme } from \"@material-ui/core\";\r\nimport BigSearchBar from \"./BigSearchBar\";\r\nimport Navbar from \"../util/Navbar\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  bar: {\r\n    animation: `$comeDown 2000ms`,\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    background: \"transparent\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Alfa Slab One, cursive\",\r\n    color: \"white\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: 200,\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"100vw\",\r\n  },\r\n  search: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    animation: `$comeUp 2000ms`,\r\n  },\r\n  \"@keyframes comeUp\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(200%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  \"@keyframes comeDown\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(-200%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  \"@keyframes gradient\": {\r\n    \"0%\": {\r\n      backgroundPosition: \"0% 50%\",\r\n    },\r\n    \"50%\": {\r\n      backgroundPosition: \"25% 50%\",\r\n    },\r\n    \"100%\": {\r\n      backgroundPosition: \"0% 50%\",\r\n    },\r\n  },\r\n  background: {\r\n    position: \"fixed\",\r\n    width: \"400%\",\r\n    height: \"200%\",\r\n    background:\r\n      \"radial-gradient(circle, rgba(57,226,182,1) 8%, rgba(20,176,103,1) 24%, rgba(67,145,207,1) 40%, rgba(81,40,184,1) 54%, rgba(139,79,205,1) 68%, rgba(186,60,162,1) 80%, rgba(204,139,68,1) 93%)\",\r\n    top: \"-150%\",\r\n    left: \"-200%\",\r\n    zIndex: -8,\r\n    transform: \"rotateZ(-10deg)\",\r\n    backgroundPosition: \"80%\",\r\n    backgroundSize: \"400% 400%\",\r\n    animation: \"$gradient 30s ease infinite\",\r\n    overflow: \"hidden\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.bar}>\r\n        <Navbar transparent disableSearch />\r\n      </div>\r\n      <Container maxWidth={false} className={classes.root}>\r\n        <div className={classes.background} />\r\n        <div className={classes.search}>\r\n          <BigSearchBar />\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport Observable from \"../util/Observable\";\r\nconst config = { headers: { \"Client-ID\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\" } };\r\n\r\ninterface Chat {\r\n  comments: Comment[];\r\n  _next?: string;\r\n  _prev?: string;\r\n}\r\nexport interface Comment {\r\n  content_offset_seconds: number;\r\n  _id: string;\r\n  message: {\r\n    body: string;\r\n  };\r\n  commenter: {\r\n    display_name: string;\r\n  };\r\n}\r\n\r\n// This is used to get the first few comments based on time\r\nconst getFirstComments = async (\r\n  videoId: string | number,\r\n  startSeconds = 0\r\n): Promise<Chat> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${videoId}/comments?content_offset_seconds=${startSeconds}`;\r\n\r\n  try {\r\n    const { data } = await axios.get(url, config);\r\n    return data;\r\n  } catch (err) {\r\n    return { comments: [] };\r\n  }\r\n};\r\n// This is used to get the next comments based on the link from the previous comment\r\nconst getNext = async (\r\n  videoId: string | number,\r\n  cursor: string | number\r\n): Promise<Chat> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${videoId}/comments?cursor=${cursor}`;\r\n  try {\r\n    const data: Chat = (await axios.get(url, config)).data;\r\n    return data;\r\n  } catch (err) {\r\n    return { comments: [] };\r\n  }\r\n};\r\nexport const getComments = async (\r\n  videoId: string | number,\r\n  observable: Observable | null = null,\r\n  start = 0,\r\n  end = 200000\r\n): Promise<Comment[]> => {\r\n  const d = end - start;\r\n  if (start < 0 || end < 0 || end < start) {\r\n    return [];\r\n  } else if (d < 5000) {\r\n    let data = await getFirstComments(videoId, start);\r\n    const comments: Comment[] = data.comments\r\n      .filter(\r\n        ({ content_offset_seconds }) =>\r\n          start <= content_offset_seconds && content_offset_seconds < end\r\n      )\r\n      .map(({ content_offset_seconds, _id, message, commenter }) => {\r\n        if (observable) observable.updateProgress(1);\r\n        return {\r\n          content_offset_seconds,\r\n          _id,\r\n          message: { body: message.body },\r\n          commenter: {\r\n            display_name: commenter.display_name,\r\n          },\r\n        };\r\n      });\r\n\r\n    while (data.comments.length && data._next) {\r\n      if (data.comments[data.comments.length - 1].content_offset_seconds > end)\r\n        break;\r\n      data = await getNext(videoId, data._next);\r\n      comments.push(\r\n        ...data.comments\r\n          .filter(\r\n            ({ content_offset_seconds }) =>\r\n              start <= content_offset_seconds && content_offset_seconds < end\r\n          )\r\n          .map(({ content_offset_seconds, _id, message, commenter }) => {\r\n            if (observable) observable.updateProgress(1);\r\n            return {\r\n              content_offset_seconds,\r\n              _id,\r\n              message: { body: message.body },\r\n              commenter: {\r\n                display_name: commenter.display_name,\r\n              },\r\n            };\r\n          })\r\n      );\r\n    }\r\n    return comments;\r\n  } else {\r\n    let allComments: Promise<Comment[]>[] = [];\r\n    const DIVISIONS = 50;\r\n    for (let i = 1; i <= DIVISIONS; i++) {\r\n      allComments.push(\r\n        getComments(\r\n          videoId,\r\n          observable,\r\n          start + ((i - 1) * d) / DIVISIONS,\r\n          start + (i * d) / DIVISIONS\r\n        )\r\n      );\r\n    }\r\n    return Promise.all(allComments).then((comments) => {\r\n      return comments.reduce((acc, curr) => {\r\n        acc.push(...curr);\r\n        return acc;\r\n      });\r\n    });\r\n  }\r\n};\r\n","export type OnUpdate = (progress: number, completed: boolean) => void;\r\nclass Observable {\r\n  private progress: number;\r\n  private onUpdate: OnUpdate | null;\r\n\r\n  constructor(onUpdate: OnUpdate | null) {\r\n    this.progress = 0;\r\n    this.onUpdate = onUpdate;\r\n  }\r\n  updateProgress(decrementAmount: number) {\r\n    this.progress += Math.abs(decrementAmount);\r\n    if (this.onUpdate) this.onUpdate(this.progress, false);\r\n  }\r\n  finish() {\r\n    if (this.onUpdate) this.onUpdate(this.progress, true);\r\n  }\r\n}\r\nexport default Observable;\r\n","import axios from \"axios\";\r\nconst config = { headers: { \"Client-ID\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\" } };\r\n\r\ntype ImageURL = string;\r\ntype DateString = string;\r\nexport interface VodInfo {\r\n  title: string;\r\n  views: number;\r\n  url: string;\r\n  language: string;\r\n  created_at: DateString;\r\n  published_at: DateString;\r\n  recorded_at: DateString;\r\n  game: string;\r\n  length: number;\r\n  preview: {\r\n    small: ImageURL;\r\n    medium: ImageURL;\r\n    large: ImageURL;\r\n  };\r\n  channel: {\r\n    display_name: string;\r\n    logo: ImageURL;\r\n    url: string;\r\n  };\r\n}\r\n\r\nconst getVodInfo = async (id: number | string): Promise<VodInfo | null> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${id}`;\r\n  try {\r\n    const output: VodInfo = {\r\n      title: \"\",\r\n      views: 0,\r\n      url: \"\",\r\n      language: \"\",\r\n      created_at: \"\",\r\n      published_at: \"\",\r\n      recorded_at: \"\",\r\n      game: \"\",\r\n      length: 0,\r\n      preview: {\r\n        small: \"\",\r\n        medium: \"\",\r\n        large: \"\",\r\n      },\r\n      channel: {\r\n        display_name: \"\",\r\n        logo: \"\",\r\n        url: \"\",\r\n      },\r\n    };\r\n    const data = (await axios.get(url, config)).data as VodInfo;\r\n    for (const key in output) {\r\n      if (typeof output[key as keyof VodInfo] === \"object\") {\r\n        // @ts-ignore\r\n        for (const key2 in output[key]) {\r\n          // @ts-ignore\r\n          output[key][key2] = data[key][key2];\r\n        }\r\n      } else {\r\n        // @ts-ignore\r\n        output[key] = data[key];\r\n      }\r\n    }\r\n    return output;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\nexport default getVodInfo;\r\n","import { OnUpdate } from \"./../util/Observable\";\r\nimport { getComments, Comment } from \"../twitch_api/getComments\";\r\nimport Observable from \"../util/Observable\";\r\nimport getVodInfo from \"../twitch_api/getVodInfo\";\r\n// import axios from \"axios\";\r\n// const baseUrl =\r\n//   process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:8000\";\r\n\r\nexport interface Speed {\r\n  increment: number;\r\n  speeds: number[];\r\n}\r\nexport interface SpeedPoint {\r\n  time: number;\r\n  speed: number;\r\n}\r\nexport const getCommentsData = async (\r\n  id: string,\r\n  onUpdate: OnUpdate | null\r\n): Promise<Comment[] | null> => {\r\n  const observ = new Observable(onUpdate);\r\n  const vod = await getVodInfo(id);\r\n  if (!vod) return null;\r\n  const comments = await getComments(id, observ, 0, vod.length);\r\n  observ.finish();\r\n  return comments;\r\n};\r\n\r\nexport const getSpeeds = (comments: Comment[], increment = 4): Speed => {\r\n  if (comments.length === 0) return { increment, speeds: [] };\r\n  const lastSecond = comments[comments.length - 1].content_offset_seconds;\r\n  const speeds: number[] = Array(~~(lastSecond / increment) + 2).fill(0);\r\n  comments.forEach((comment) => {\r\n    const time = comment.content_offset_seconds;\r\n    speeds[~~(time / increment)] += 1 / increment;\r\n  });\r\n  return { increment, speeds };\r\n};\r\nexport const flattenSpeeds = (speed: Speed, flattenFactor: number): Speed => {\r\n  const dividedSpeeds: number[] = speed.speeds.map(\r\n    (item) => item / flattenFactor\r\n  );\r\n  const newSpeeds: number[] = [];\r\n  let i = 0;\r\n  while (i < dividedSpeeds.length) {\r\n    let tmp = 0;\r\n    for (let j = 0; j < flattenFactor; j++) {\r\n      if (i === dividedSpeeds.length) break;\r\n      tmp += dividedSpeeds[i];\r\n      i++;\r\n    }\r\n    newSpeeds.push(tmp);\r\n  }\r\n  return { increment: speed.increment * flattenFactor, speeds: newSpeeds };\r\n};\r\nexport const convertToSpeedPoint = (speed: Speed): SpeedPoint[] => {\r\n  return speed.speeds.map((s, i) => ({ time: i * speed.increment, speed: s }));\r\n};\r\n","import { makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  return {\r\n    title: {\r\n      marginBottom: theme.spacing(2),\r\n      fontFamily: \"'New Tegomin', serif\",\r\n    },\r\n    subtitle: { fontFamily: \"'New Tegomin', serif\" },\r\n    info: {\r\n      margin: theme.spacing(5),\r\n    },\r\n  };\r\n});\r\nconst ErrorVodPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.info}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          component=\"h1\"\r\n          className={classes.title}\r\n          align=\"center\"\r\n        >\r\n          <b> Uh Oh! </b>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h2\"\r\n          className={classes.subtitle}\r\n          align=\"center\"\r\n        >\r\n          The VOD you are looking for doesn't seem to exist!\r\n        </Typography>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ErrorVodPage;\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  CardHeader,\r\n  IconButton,\r\n  Avatar,\r\n  Link,\r\n  CardMedia,\r\n  CardActionArea,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport getVodInfo, { VodInfo } from \"../../twitch_api/getVodInfo\";\r\ninterface VodInfoCardProps {\r\n  vodID: string | number;\r\n  elevation: number;\r\n  downloadComments: () => void;\r\n  saveVod: () => void;\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n});\r\nconst VodInfoCard = ({\r\n  vodID,\r\n  elevation,\r\n  downloadComments,\r\n  saveVod,\r\n}: VodInfoCardProps) => {\r\n  const classes = useStyles();\r\n  const [vodInfo, setVodInfo] = React.useState<VodInfo | null>(null);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      setVodInfo(await getVodInfo(vodID));\r\n    })();\r\n  }, [vodID]);\r\n  if (!vodInfo) {\r\n    return (\r\n      <Card elevation={elevation}>\r\n        <CardHeader\r\n          title={<Typography variant=\"subtitle1\">Loading...</Typography>}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  return (\r\n    <Card elevation={elevation}>\r\n      <CardHeader\r\n        avatar={\r\n          <IconButton\r\n            onClick={() => {\r\n              window.open((vodInfo as VodInfo).channel.url);\r\n            }}\r\n          >\r\n            <Avatar\r\n              aria-label=\"avatar image\"\r\n              src={(vodInfo as VodInfo).channel.logo}\r\n            />\r\n          </IconButton>\r\n        }\r\n        title={\r\n          <Typography variant=\"subtitle1\">\r\n            {(vodInfo as VodInfo).title}\r\n          </Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            By{\" \"}\r\n            <Link\r\n              href={(vodInfo as VodInfo).channel.url}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {(vodInfo as VodInfo).channel.display_name}\r\n            </Link>{\" \"}\r\n            at {new Date((vodInfo as VodInfo).recorded_at).toDateString()}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardActionArea\r\n        onClick={() => {\r\n          window.open((vodInfo as VodInfo).url);\r\n        }}\r\n      >\r\n        <CardMedia\r\n          image={(vodInfo as VodInfo).preview.large}\r\n          title=\"Go to vod\"\r\n          className={classes.media}\r\n        />\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={downloadComments}>\r\n          download comments\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={saveVod}>\r\n          save analytics\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default VodInfoCard;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getInnerDims = () => {\r\n  return {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  };\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n  const [winDim, setWinDim] = useState(getInnerDims());\r\n  useEffect(() => {\r\n    const handleResize = () => setWinDim(getInnerDims());\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return winDim;\r\n};\r\nexport const useWidth = () => {\r\n  return useWindowDimensions().width;\r\n};\r\nexport const useHeight = () => {\r\n  return useWindowDimensions().height;\r\n};\r\n","import {\r\n  VictoryLine,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  createContainer,\r\n  VictoryZoomContainerProps,\r\n  VictoryVoronoiContainerProps,\r\n  VictoryLabel,\r\n} from \"victory\";\r\nimport { DomainPropType } from \"victory-core\";\r\nimport React from \"react\";\r\nimport {\r\n  convertToSpeedPoint,\r\n  flattenSpeeds,\r\n  Speed,\r\n} from \"../../services/speeds\";\r\nimport { useWidth } from \"../../util/getDimensions\";\r\n\r\ninterface ChartProps {\r\n  data: Speed;\r\n  vodID: string | number;\r\n  flatten: number;\r\n}\r\nconst Chart = (props: ChartProps) => {\r\n  const VictoryZoomVoronoiContainer = createContainer<\r\n    VictoryZoomContainerProps,\r\n    VictoryVoronoiContainerProps\r\n  >(\"zoom\", \"voronoi\");\r\n  const [zoomXDomain, setZoomXDomain] = React.useState<\r\n    [number, number] | [Date, Date]\r\n  >([0, 1000000]);\r\n  const getEntireDomain = (): DomainPropType | undefined => {\r\n    if (props.data.speeds.length)\r\n      return {\r\n        x: [0, props.data.speeds.length * props.data.increment],\r\n        y: [0, Math.max(...props.data.speeds) + 0.5],\r\n      };\r\n  };\r\n  const windowWidth = useWidth();\r\n  const [width, setWidth] = React.useState(0);\r\n  const graphRef = React.useCallback(\r\n    (node) => {\r\n      if (node !== null) {\r\n        setWidth(node.getBoundingClientRect().width);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [windowWidth]\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }} ref={graphRef}>\r\n      <VictoryChart\r\n        height={300}\r\n        width={width}\r\n        padding={{ top: 50, left: 80, right: 50, bottom: 50 }}\r\n        domain={getEntireDomain()}\r\n        containerComponent={\r\n          <VictoryZoomVoronoiContainer\r\n            zoomDimension=\"x\"\r\n            responsive={false}\r\n            onZoomDomainChange={(domain) => {\r\n              setZoomXDomain(domain.x);\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <VictoryAxis\r\n          dependentAxis\r\n          label=\"Messages\"\r\n          tickFormat={(x) => x}\r\n          axisLabelComponent={<VictoryLabel dy={-20} />}\r\n        />\r\n        <VictoryAxis label=\"Time (s)\" />\r\n        <VictoryLine\r\n          data={convertToSpeedPoint(\r\n            flattenSpeeds(props.data, props.flatten)\r\n          ).filter((d) => d.time >= zoomXDomain[0] && d.time <= zoomXDomain[1])}\r\n          interpolation=\"natural\"\r\n          x=\"time\"\r\n          y=\"speed\"\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  makeStyles,\r\n  Slider,\r\n  CardContent,\r\n  Theme,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport SpeedsChart from \"./SpeedsChart\";\r\n\r\nimport React from \"react\";\r\nimport { SingleVodInfo } from \"../../services/storage\";\r\ninterface SpeedsChartCardProps {\r\n  vodInfo: SingleVodInfo;\r\n  elevation: number;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  slider: {\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(5),\r\n    width: 250,\r\n    margin: 0,\r\n  },\r\n  header: {\r\n    paddingBottom: 0,\r\n  },\r\n  chart: {\r\n    marginTop: -40,\r\n    paddingBottom: 0,\r\n  },\r\n  action: {\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\nconst SpeedsChartCard = ({ vodInfo, elevation }: SpeedsChartCardProps) => {\r\n  const classes = useStyles();\r\n  const [flatten, setFlatten] = React.useState(1);\r\n  return (\r\n    <Card elevation={elevation}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"subtitle1\">Number of Chat Messages</Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            Zoom in and drag to check out the graph\r\n          </Typography>\r\n        }\r\n        className={classes.header}\r\n      />\r\n      <CardContent className={classes.chart}>\r\n        <SpeedsChart\r\n          data={vodInfo.speeds}\r\n          flatten={flatten}\r\n          vodID={vodInfo.vodID}\r\n        />\r\n      </CardContent>\r\n      <CardActions className={classes.action}>\r\n        <div className={classes.slider}>\r\n          <Slider\r\n            value={flatten}\r\n            marks={[\r\n              { value: 1, label: \"Most detailed\" },\r\n              { value: 10, label: \"Least detailed\" },\r\n            ]}\r\n            min={1}\r\n            max={10}\r\n            defaultValue={flatten}\r\n            onChange={(_, newVal: number | number[]) => {\r\n              setFlatten(newVal as number);\r\n            }}\r\n            aria-labelledby=\"flatten size\"\r\n          />\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default SpeedsChartCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../util/Navbar\";\r\nimport { getCommentsData, getSpeeds } from \"../../services/speeds\";\r\nimport ErrorVodPage from \"./ErrorVodPage\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  addOrUpdateVod,\r\n  getGenericSingleVodInfo,\r\n  getNumVods,\r\n  getSingleVodInfo,\r\n  SingleVodInfo,\r\n} from \"../../services/storage\";\r\nimport Notification from \"../util/Notification\";\r\nimport { Comment } from \"../../twitch_api/getComments\";\r\nimport VodInfoCard from \"./VodInfoCard\";\r\nimport SpeedsChartCard from \"./SpeedsChartCard\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadedText: {\r\n    margin: theme.spacing(5),\r\n    fontFamily: \"'Delta Gothic One', cursive\",\r\n  },\r\n}));\r\nconst AnalyzeVod = () => {\r\n  const classes = useStyles();\r\n  const [vodInfo, setVodInfo] = React.useState<SingleVodInfo>(\r\n    getGenericSingleVodInfo()\r\n  );\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  // -1 (done loading) >= 0 (number of comments that have been loaded)\r\n  const [commentsLoaded, setCommentsLoaded] = React.useState<number>(-2);\r\n  const [saveErr, setSaveErr] = React.useState(false);\r\n  const [saveMsg, setSaveMsg] = React.useState(\"\");\r\n  const [comments, setComments] = React.useState<Comment[] | null>(null);\r\n  const [bookmarkNum, setBookmarkNum] = React.useState(getNumVods());\r\n  const { vodID } = useParams() as { vodID: string };\r\n  const loadComments = async () => {\r\n    const comments = await getCommentsData(vodID, (prog, completed) => {\r\n      if (completed) setCommentsLoaded(-1);\r\n      else setCommentsLoaded(prog);\r\n    });\r\n    if (comments === null) {\r\n      setIsErr(true);\r\n      return [];\r\n    }\r\n    setComments(comments as Comment[]);\r\n    const vodObj = {\r\n      vodID,\r\n      speeds: getSpeeds(comments as Comment[]),\r\n    };\r\n    setVodInfo(vodObj);\r\n\r\n    return comments;\r\n  };\r\n  React.useEffect(() => {\r\n    const vodObj = getSingleVodInfo(vodID);\r\n    if (vodObj) {\r\n      setCommentsLoaded(-1);\r\n      setVodInfo(vodObj);\r\n    } else {\r\n      loadComments();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [vodID]);\r\n  const saveVod = async () => {\r\n    if (getSingleVodInfo(vodID)) return; // Already exists\r\n    const res = addOrUpdateVod(vodInfo);\r\n    if (res === \"\") {\r\n      setBookmarkNum(bookmarkNum + 1);\r\n      return;\r\n    } else if (res === \"QuotaExceededError\") {\r\n      setSaveErr(true);\r\n      setSaveMsg(\r\n        \"Not enough memory to save the vod, remove some vods in bookmarks\"\r\n      );\r\n    } else {\r\n      setSaveErr(true);\r\n      setSaveMsg(`ERROR: Could not save vod due to ${res}`);\r\n    }\r\n  };\r\n  const downloadComments = async () => {\r\n    let loadedComments = comments;\r\n    if (!loadedComments) loadedComments = await getCommentsData(vodID, null);\r\n    if (loadedComments !== null) {\r\n      const content = `VodID: ${vodID}\\n${(loadedComments as Comment[])\r\n        .map(\r\n          (item) =>\r\n            `${item.commenter.display_name}[${item.content_offset_seconds}s]: ${item.message.body}`\r\n        )\r\n        .join(\"\\n\")}`;\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([content], {\r\n        type: \"text/plain;charset=utf-8\",\r\n      });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"comments.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n      document.body.removeChild(element);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bookmarkNum={bookmarkNum} />\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <br />\r\n\r\n        {isErr ? (\r\n          <ErrorVodPage />\r\n        ) : (\r\n          <>\r\n            <Grid container spacing={3}>\r\n              {commentsLoaded === -1 && (\r\n                <>\r\n                  <Grid item xs={5} md={5} xl={5}>\r\n                    <VodInfoCard\r\n                      vodID={vodID}\r\n                      elevation={5}\r\n                      downloadComments={downloadComments}\r\n                      saveVod={saveVod}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} xl={6}>\r\n                    <SpeedsChartCard elevation={5} vodInfo={vodInfo} />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            {commentsLoaded >= 0 && (\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                className={classes.loadedText}\r\n              >\r\n                Loaded {commentsLoaded} comments...\r\n              </Typography>\r\n            )}\r\n          </>\r\n        )}\r\n        <Notification message={saveMsg} setOpen={setSaveErr} open={saveErr} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzeVod;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardHeader,\r\n  CardMedia,\r\n  Container,\r\n  IconButton,\r\n  Typography,\r\n  Link,\r\n  Grid,\r\n  makeStyles,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  getAllVods,\r\n  removeVod as removeVodFromStorage,\r\n} from \"../../services/storage\";\r\nimport getVodInfo, { VodInfo } from \"../../twitch_api/getVodInfo\";\r\nimport Navbar from \"../util/Navbar\";\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n});\r\nconst Bookmark = () => {\r\n  const [allVods, setAllVods] = React.useState(getAllVods());\r\n  const [vodInfo, setVodInfo] = React.useState<(VodInfo | null | number)[]>(\r\n    Array(allVods.length).fill(-1)\r\n  );\r\n  const classes = useStyles();\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const info = allVods.map((item) => getVodInfo(item.vodID));\r\n      setVodInfo(await Promise.all(info));\r\n    })();\r\n  }, [allVods]);\r\n  const removeVod = (vodID: string | number, index: number) => () => {\r\n    setVodInfo(vodInfo.filter((_, i) => i !== index));\r\n    setAllVods(allVods.filter((_, i) => i !== index));\r\n    removeVodFromStorage(vodID);\r\n  };\r\n  const elevation = 5;\r\n  const GridItem = ({ cardInner }: { cardInner: React.ReactNode }) => {\r\n    return (\r\n      <Grid item xs={12} sm={12} md={6} lg={4}>\r\n        <Card elevation={elevation}>{cardInner}</Card>\r\n      </Grid>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container maxWidth={\"xl\"}>\r\n        <br />\r\n        <Grid container spacing={3}>\r\n          {allVods.map((vod, i) => {\r\n            if (vodInfo[i] === null) {\r\n              return (\r\n                <GridItem\r\n                  key={vod.vodID}\r\n                  cardInner={\r\n                    <>\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle1\">\r\n                          Could not find vod with vod id {vod.vodID} (Vod might\r\n                          have expired)\r\n                        </Typography>\r\n                      </CardContent>\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={removeVod(vod.vodID, i)}\r\n                        >\r\n                          Remove vod\r\n                        </Button>\r\n                      </CardActions>{\" \"}\r\n                    </>\r\n                  }\r\n                />\r\n              );\r\n            } else if (vodInfo[i] === -1)\r\n              return (\r\n                <GridItem\r\n                  key={vod.vodID}\r\n                  cardInner={\r\n                    <CardContent>\r\n                      <Typography variant=\"subtitle1\">\r\n                        Loading {vod.vodID}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  }\r\n                />\r\n              );\r\n            return (\r\n              <GridItem\r\n                key={vod.vodID}\r\n                cardInner={\r\n                  <>\r\n                    <CardHeader\r\n                      avatar={\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            window.open((vodInfo[i] as VodInfo).channel.url);\r\n                          }}\r\n                        >\r\n                          <Avatar\r\n                            aria-label=\"avatar image\"\r\n                            src={(vodInfo[i] as VodInfo).channel.logo}\r\n                          />\r\n                        </IconButton>\r\n                      }\r\n                      title={\r\n                        <Typography variant=\"subtitle1\">\r\n                          {(vodInfo[i] as VodInfo).title}\r\n                        </Typography>\r\n                      }\r\n                      subheader={\r\n                        <Typography variant=\"subtitle2\">\r\n                          By{\" \"}\r\n                          <Link\r\n                            href={(vodInfo[i] as VodInfo).channel.url}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                          >\r\n                            {(vodInfo[i] as VodInfo).channel.display_name}\r\n                          </Link>{\" \"}\r\n                          at{\" \"}\r\n                          {new Date(\r\n                            (vodInfo[i] as VodInfo).recorded_at\r\n                          ).toDateString()}\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                    <CardActionArea\r\n                      onClick={() => {\r\n                        window.open((vodInfo[i] as VodInfo).url);\r\n                      }}\r\n                    >\r\n                      <CardMedia\r\n                        image={(vodInfo[i] as VodInfo).preview.large}\r\n                        title=\"Go to vod\"\r\n                        className={classes.media}\r\n                      />\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          window.open(\r\n                            `${process.env.PUBLIC_URL}/search/${vod.vodID}`\r\n                          );\r\n                        }}\r\n                      >\r\n                        Analytics\r\n                      </Button>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={removeVod(vod.vodID, i)}\r\n                      >\r\n                        Remove vod\r\n                      </Button>\r\n                    </CardActions>\r\n                  </>\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Bookmark;\r\n","import Home from \"./components/home/Home\";\r\nimport \"fontsource-roboto\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AnalyzeVod from \"./components/analysis/AnalyzeVod\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Bookmark from \"./components/bookmarks/Bookmark\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <StylesProvider injectFirst>\r\n        <Switch>\r\n          <Route path=\"/search/:vodID\">\r\n            <AnalyzeVod />\r\n          </Route>\r\n          <Route path=\"/bookmarks\">\r\n            <Bookmark />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </StylesProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#7015c2\",\r\n    },\r\n    secondary: {\r\n      main: \"#25e220\",\r\n    },\r\n    background: { default: \"azure\", paper: \"azure\" },\r\n  },\r\n});\r\nexport default theme;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport theme from \"./theme\";\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}