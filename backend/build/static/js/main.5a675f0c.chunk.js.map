{"version":3,"sources":["components/util/Notification.tsx","components/home/BigSearchBar.tsx","components/util/SearchBar.tsx","local_db/db.ts","local_db/vod.ts","local_db/channel.ts","services/storage.ts","components/util/Navbar.tsx","components/home/Home.tsx","twitch_api/getComments.ts","util/Observable.ts","twitch_api/getVodInfo.ts","services/speeds.ts","components/analysis/ErrorVodPage.tsx","components/analysis/Cards/VodInfoCard.tsx","util/getDimensions.ts","components/analysis/Charts/SpeedsChart.tsx","components/analysis/Cards/SpeedsChartCard.tsx","components/analysis/Charts/KeywordsChart.tsx","services/keywords.ts","components/analysis/Cards/KeywordsCard.tsx","components/analysis/AnalyzeVod.tsx","components/bookmarks/Bookmark.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["Notification","props","handleClose","setOpen","Snackbar","open","autoHideDuration","onClose","snackbarProps","elevation","variant","severity","alertProps","message","useStyles","makeStyles","theme","root","border","borderRadius","display","width","maxWidth","background","palette","paper","button","marginLeft","marginTop","spacing","marginBottom","input","flex","outlineStyle","boxShadow","borderColor","fontSize","BigSearchBar","history","useHistory","classes","React","useState","isErr","setIsErr","vodVal","setVodVal","handleSubmit","filtered","parseInt","index","indexOf","tmp","slice","secondSlash","push","go","className","type","onChange","e","target","value","onKeyDown","key","placeholder","IconButton","onClick","SearchBar","db","vod","channel","version","stores","table","Dexie","Vod","vodID","channelID","comments","vodInfo","this","put","getNumVods","count","Channel","id","name","getChannel","get","getVodFullInfoDB","a","channelName","channelInfo","getVodFullInfo","filteredVodInfo","_id","display_name","logo","url","changeComments","map","item","seconds","content_offset_seconds","body","commenter","saveVods","channelDB","save","removeVod","where","equals","delete","getNumVodsDB","getAllVods","Promise","toArray","res","all","createStyles","grow","flexGrow","menuButton","marginRight","title","fontFamily","color","breakpoints","up","backgroundColor","search","appbar","transparent","Navbar","disableSearch","bookmarkNum","actualBookmarkNum","setNum","useEffect","AppBar","position","Toolbar","Typography","Link","href","Tooltip","aria-label","Badge","badgeContent","bar","animation","top","left","flexDirection","minHeight","height","justifyContent","overflow","margin","padding","opacity","transform","backgroundPosition","zIndex","backgroundSize","Home","Container","config","headers","getFirstComments","videoId","startSeconds","axios","data","getNext","cursor","getComments","observable","start","end","d","filter","updateProgress","length","_next","allComments","DIVISIONS","i","then","reduce","acc","curr","Observable","onUpdate","progress","decrementAmount","Math","abs","getVodInfo","output","views","language","created_at","published_at","recorded_at","game","preview","small","medium","large","key2","getCommentsData","observ","finish","getSpeeds","increment","speeds","lastSecond","Array","fill","forEach","comment","time","flattenSpeeds","speed","flattenFactor","dividedSpeeds","newSpeeds","j","subtitle","info","ErrorVodPage","component","align","media","paddingTop","VodInfoCard","downloadComments","saveVod","Card","CardHeader","avatar","window","Avatar","src","subheader","rel","Date","toDateString","CardActionArea","CardMedia","image","CardActions","Button","size","getInnerDims","innerWidth","innerHeight","useWindowDimensions","winDim","setWinDim","handleResize","addEventListener","removeEventListener","Chart","VictoryZoomVoronoiContainer","createContainer","zoomXDomain","setZoomXDomain","windowWidth","setWidth","graphRef","useCallback","node","getBoundingClientRect","style","ref","right","bottom","domain","x","y","max","getEntireDomain","containerComponent","zoomDimension","responsive","onZoomDomainChange","dependentAxis","label","tickFormat","axisLabelComponent","dy","flatten","s","interpolation","slider","paddingLeft","paddingRight","header","paddingBottom","chart","action","SpeedsChartCard","setFlatten","CardContent","SpeedsChart","Slider","marks","min","defaultValue","_","newVal","aria-labelledby","setHoveredData","onMouseOver","onMouseOut","getKeywords","emotes","emoteMap","emoteName","toLowerCase","emoteImgURL","emoteNumTimes","total","trim","msg","split","hasUsed","Set","trimmed","has","add","colours","sort","b","newOutput","otherPercent","pie","justifyItems","content","alignSelf","KeywordsCard","selectedData","setSelectedData","setData","KeywordsChart","round","alt","loadedText","AnalyzeVod","useParams","setVodInfo","setComments","twitchVodInfo","setTwitchVodInfo","commentsLoaded","setCommentsLoaded","saveErr","setSaveErr","saveMsg","setSaveMsg","setBookmarkNum","loadComments","prog","completed","vodFullInfo","err","join","element","document","createElement","file","Blob","URL","createObjectURL","download","appendChild","click","removeChild","Grid","container","xs","md","xl","Bookmark","allVods","setAllVods","vods","GridItem","cardInner","sm","lg","removeVodFromStorage","App","CssBaseline","StylesProvider","injectFirst","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","primary","main","secondary","default","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.5a675f0c.chunk.js","sourcesContent":["import { Snackbar, SnackbarProps } from \"@material-ui/core\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\ninterface NotificationProps {\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  message: string;\r\n  alertProps?: AlertProps;\r\n  snackbarProps?: SnackbarProps;\r\n}\r\nconst Notification = (props: NotificationProps) => {\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={props.open}\r\n        autoHideDuration={5000}\r\n        onClose={handleClose}\r\n        {...props.snackbarProps}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n          {...props.alertProps}\r\n          onClose={handleClose}\r\n        >\r\n          {props.message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { Theme, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Notification from \"../util/Notification\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"1px solid #696969\",\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    maxWidth: 800,\r\n    background: theme.palette.background.paper,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  input: {\r\n    border: 0,\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    outlineStyle: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\",\r\n    \"input::-ms-clear\": {\r\n      display: \"none\",\r\n    },\r\n    fontSize: \"calc(0.75em + 1vmin)\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst BigSearchBar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  const [vodVal, setVodVal] = React.useState(\"\");\r\n  const handleSubmit = () => {\r\n    let filtered: number = parseInt(vodVal);\r\n    if (!filtered) {\r\n      const index = vodVal.indexOf(\"videos/\");\r\n      if (index >= 0) {\r\n        const tmp = vodVal.slice(index + 7);\r\n        const secondSlash = tmp.indexOf(\"/\");\r\n        if (secondSlash >= 0) {\r\n          filtered = parseInt(tmp.slice(0, secondSlash));\r\n        } else filtered = parseInt(tmp);\r\n      }\r\n    }\r\n    if (filtered) {\r\n      history.push(`/search/${filtered}`);\r\n      history.go(0);\r\n    } else setIsErr(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        onChange={(e) => setVodVal(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSubmit();\r\n        }}\r\n        placeholder=\"Analyze Vod: Enter twitch vod URL\"\r\n      />\r\n      <IconButton onClick={handleSubmit} className={classes.button}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Notification\r\n        message={`Vod id cannot be determined from the input`}\r\n        open={isErr}\r\n        setOpen={setIsErr}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default BigSearchBar;\r\n","import React from \"react\";\r\nimport { Theme, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Notification from \"./Notification\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"1px solid lightgrey\",\r\n    borderRadius: 25,\r\n    maxWidth: 600,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  input: {\r\n    border: 0,\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    outlineStyle: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\",\r\n    \"input::-ms-clear\": {\r\n      display: \"none\",\r\n    },\r\n    fontSize: 16,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst SearchBar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isErr, setIsErr] = React.useState(false);\r\n  const [vodVal, setVodVal] = React.useState(\"\");\r\n  const handleSubmit = () => {\r\n    let filtered: number = parseInt(vodVal);\r\n    if (!filtered) {\r\n      const index = vodVal.indexOf(\"videos/\");\r\n      if (index >= 0) {\r\n        const tmp = vodVal.slice(index + 7);\r\n        const secondSlash = tmp.indexOf(\"/\");\r\n        if (secondSlash >= 0) {\r\n          filtered = parseInt(tmp.slice(0, secondSlash));\r\n        } else filtered = parseInt(tmp);\r\n      }\r\n    }\r\n    if (filtered) {\r\n      history.push(`/search/${filtered}`);\r\n      history.go(0);\r\n    } else setIsErr(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setVodVal(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSubmit();\r\n        }}\r\n        placeholder=\"Enter twitch vod URL\"\r\n        className={classes.input}\r\n      />\r\n      <IconButton onClick={handleSubmit} className={classes.button}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Notification\r\n        message={`Vod id cannot be determined from the input`}\r\n        open={isErr}\r\n        setOpen={setIsErr}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import Dexie from \"dexie\";\r\nexport type ImageURL = string;\r\nexport type DateString = string;\r\nexport interface VodInfo {\r\n  title: string;\r\n  views: number;\r\n  url: string;\r\n  language: string;\r\n  created_at: DateString;\r\n  published_at: DateString;\r\n  recorded_at: DateString;\r\n  game: string;\r\n  length: number;\r\n  preview: {\r\n    small: ImageURL;\r\n    medium: ImageURL;\r\n    large: ImageURL;\r\n  };\r\n}\r\nexport interface Comment {\r\n  seconds: number;\r\n  message: string;\r\n  commenter: string;\r\n}\r\nexport interface IVod {\r\n  vodID: string;\r\n  channelID: string;\r\n  vodInfo: VodInfo;\r\n  comments: Comment[];\r\n}\r\nexport interface ChannelInfo {\r\n  logo: ImageURL;\r\n  url: string;\r\n}\r\nexport interface IChannel {\r\n  channelID: string;\r\n  name: string;\r\n  channel: ChannelInfo;\r\n}\r\nclass Database extends Dexie {\r\n  vod: Dexie.Table<IVod, string>;\r\n  channel: Dexie.Table<IChannel, string>;\r\n\r\n  constructor() {\r\n    super(\"Database\");\r\n    this.version(1).stores({\r\n      vod: \"vodID\",\r\n      channel: \"channelID, name\",\r\n    });\r\n    this.vod = this.table(\"vod\");\r\n    this.channel = this.table(\"channel\");\r\n  }\r\n}\r\n\r\nexport const db = new Database();\r\n","import { db, VodInfo, IVod, Comment } from \"./db\";\r\n\r\nexport class Vod implements IVod {\r\n  vodID: string;\r\n  channelID: string;\r\n  comments: Comment[];\r\n  vodInfo: VodInfo;\r\n\r\n  constructor(\r\n    vodID: string,\r\n    channelID: string,\r\n    comments: Comment[],\r\n    vodInfo: VodInfo\r\n  ) {\r\n    this.vodID = vodID;\r\n    this.channelID = channelID;\r\n    this.comments = comments;\r\n    this.vodInfo = vodInfo;\r\n  }\r\n  save() {\r\n    db.vod.put(this);\r\n  }\r\n  getComments() {\r\n    return this.comments;\r\n  }\r\n}\r\nexport const getVod = (id: string) => {\r\n  return db.vod.get(id);\r\n};\r\nexport const removeVod = (id: string) => {\r\n  return db.vod.where(\"vodID\").equals(id).delete();\r\n};\r\nexport const clear = () => {\r\n  return db.vod.clear();\r\n};\r\nexport const getNumVods = () => {\r\n  return db.vod.count();\r\n};\r\nexport const getAllVods = () => {\r\n  return db.vod.toArray();\r\n}","import { db, IChannel, ChannelInfo } from \"./db\";\r\nexport class Channel implements IChannel {\r\n  channelID: string;\r\n  name: string;\r\n  channel: ChannelInfo;\r\n  constructor(id: string, name: string, channel: ChannelInfo) {\r\n    this.channelID = id;\r\n    this.name = name;\r\n    this.channel = channel;\r\n  }\r\n  save() {\r\n    db.channel.put(this);\r\n  }\r\n}\r\nexport const getChannel = (id: string) => {\r\n  return db.channel.get(id);\r\n};\r\nexport const removeChannel = (id: string) => {\r\n  return db.vod.where(\"channelID\").equals(id).delete();\r\n};\r\nexport const clear = () => {\r\n  return db.channel.clear();\r\n};\r\n","import { removeVod as removeVodDB, clear as clearVod } from \"./../local_db/vod\";\r\nimport { Comment } from \"./../twitch_api/getComments\";\r\nimport {\r\n  getChannel,\r\n  Channel,\r\n  clear as clearChannel,\r\n} from \"./../local_db/channel\";\r\nimport { VodInfo } from \"./../twitch_api/getVodInfo\";\r\nimport {\r\n  ChannelInfo,\r\n  VodInfo as VodInfoDb,\r\n  Comment as CommentDB,\r\n} from \"../local_db/db\";\r\nimport {\r\n  getVod,\r\n  Vod,\r\n  getNumVods as getNumVodsDB,\r\n  getAllVods as getAllVodsDB,\r\n} from \"../local_db/vod\";\r\n\r\nexport interface VodWithAllInfo {\r\n  vodID: string;\r\n  channelID: string;\r\n  channelName: string;\r\n  channelInfo: ChannelInfo;\r\n  vodInfo: VodInfoDb;\r\n  comments: CommentDB[];\r\n}\r\nexport const getVodFullInfoDB = async (\r\n  vodID: string\r\n): Promise<VodWithAllInfo | null> => {\r\n  const vod = await getVod(vodID);\r\n  if (!vod) return null;\r\n  const channel = await getChannel(vod.channelID);\r\n  if (!channel) return null;\r\n  return {\r\n    vodID: vod.vodID,\r\n    channelID: channel.channelID,\r\n    channelName: channel.name,\r\n    channelInfo: channel.channel,\r\n    vodInfo: vod.vodInfo,\r\n    comments: vod.comments,\r\n  };\r\n};\r\nexport const getVodFullInfo = (\r\n  vodID: string,\r\n  vodInfo: VodInfo,\r\n  comments: Comment[]\r\n) => {\r\n  const { channel, ...filteredVodInfo } = vodInfo;\r\n  return {\r\n    vodID,\r\n    channelID: channel._id,\r\n    channelName: channel.display_name,\r\n    channelInfo: {\r\n      logo: channel.logo,\r\n      url: channel.url,\r\n    },\r\n    vodInfo: filteredVodInfo,\r\n    comments: changeComments(comments),\r\n  };\r\n};\r\nconst changeComments = (comments: Comment[]): CommentDB[] => {\r\n  return comments.map((item) => ({\r\n    seconds: item.content_offset_seconds,\r\n    message: item.message.body,\r\n    commenter: item.commenter.display_name,\r\n  }));\r\n};\r\nexport const saveVods = (\r\n  vodID: string,\r\n  vodInfo: VodInfo,\r\n  comments: Comment[]\r\n) => {\r\n  const channelDB = new Channel(\r\n    vodInfo.channel._id,\r\n    vodInfo.channel.display_name,\r\n    {\r\n      logo: vodInfo.channel.logo,\r\n      url: vodInfo.channel.url,\r\n    }\r\n  );\r\n  channelDB.save();\r\n  const { channel, ...filteredVodInfo } = vodInfo;\r\n  const vod = new Vod(\r\n    vodID,\r\n    channelDB.channelID,\r\n    changeComments(comments),\r\n    filteredVodInfo\r\n  );\r\n  vod.save();\r\n};\r\nexport const removeVod = (vodID: string) => {\r\n  return removeVodDB(vodID);\r\n};\r\nexport const clear = () => {\r\n  clearChannel();\r\n  clearVod();\r\n};\r\nexport const getNumVods = () => {\r\n  return getNumVodsDB();\r\n};\r\nexport const getAllVods = async () => {\r\n  return Promise.all(\r\n    (await getAllVodsDB()).map((res) => {\r\n      return getVodFullInfoDB(res.vodID) as Promise<VodWithAllInfo>;\r\n    })\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumVods } from \"../../services/storage\";\r\nimport React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      fontFamily: \"Alfa Slab One, cursive\",\r\n      color: \"white\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    search: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n    appbar: ({ transparent }: NavProp) => {\r\n      if (transparent) {\r\n        return {\r\n          background: \"transparent\",\r\n        };\r\n      }\r\n      return {};\r\n    },\r\n  })\r\n);\r\ninterface NavProp {\r\n  transparent?: boolean;\r\n  disableSearch?: boolean;\r\n  bookmarkNum?: number | null;\r\n}\r\nexport default function Navbar({\r\n  transparent,\r\n  disableSearch,\r\n  bookmarkNum,\r\n}: NavProp) {\r\n  const history = useHistory();\r\n  const classes = useStyles({ transparent });\r\n  const clickBookmark = () => {\r\n    history.push(`/bookmarks`);\r\n    history.go(0);\r\n  };\r\n  const [actualBookmarkNum, setNum] = React.useState(bookmarkNum);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (!bookmarkNum) setNum(await getNumVods());\r\n      else setNum(bookmarkNum);\r\n    })();\r\n  }, [bookmarkNum]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            <Link href=\"/\" color=\"inherit\" variant=\"inherit\">\r\n              Streamalytics\r\n            </Link>\r\n          </Typography>\r\n          {!disableSearch && (\r\n            <div className={classes.search}>\r\n              <SearchBar />\r\n            </div>\r\n          )}\r\n          <div className={classes.grow} />\r\n          <Tooltip title=\"Saved vods\" aria-label=\"saved vods\">\r\n            <IconButton\r\n              aria-label=\"show saved vod analytics\"\r\n              color=\"inherit\"\r\n              onClick={clickBookmark}\r\n            >\r\n              <Badge\r\n                badgeContent={actualBookmarkNum ? actualBookmarkNum : null}\r\n                color=\"secondary\"\r\n              >\r\n                <BookmarksIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { Container, makeStyles, Theme } from \"@material-ui/core\";\r\nimport BigSearchBar from \"./BigSearchBar\";\r\nimport Navbar from \"../util/Navbar\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  bar: {\r\n    animation: `$comeDown 2000ms`,\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    background: \"transparent\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Alfa Slab One, cursive\",\r\n    color: \"white\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: 200,\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"100vw\",\r\n  },\r\n  search: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    animation: `$comeUp 2000ms`,\r\n  },\r\n  \"@keyframes comeUp\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(200%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  \"@keyframes comeDown\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(-200%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  \"@keyframes gradient\": {\r\n    \"0%\": {\r\n      backgroundPosition: \"0% 50%\",\r\n    },\r\n    \"50%\": {\r\n      backgroundPosition: \"25% 50%\",\r\n    },\r\n    \"100%\": {\r\n      backgroundPosition: \"0% 50%\",\r\n    },\r\n  },\r\n  background: {\r\n    position: \"fixed\",\r\n    width: \"400%\",\r\n    height: \"200%\",\r\n    background:\r\n      \"radial-gradient(circle, rgba(57,226,182,1) 8%, rgba(20,176,103,1) 24%, rgba(67,145,207,1) 40%, rgba(81,40,184,1) 54%, rgba(139,79,205,1) 68%, rgba(186,60,162,1) 80%, rgba(204,139,68,1) 93%)\",\r\n    top: \"-150%\",\r\n    left: \"-200%\",\r\n    zIndex: -8,\r\n    transform: \"rotateZ(-10deg)\",\r\n    backgroundPosition: \"80%\",\r\n    backgroundSize: \"400% 400%\",\r\n    animation: \"$gradient 30s ease infinite\",\r\n    overflow: \"hidden\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.bar}>\r\n        <Navbar transparent disableSearch />\r\n      </div>\r\n      <Container maxWidth={false} className={classes.root}>\r\n        <div className={classes.background} />\r\n        <div className={classes.search}>\r\n          <BigSearchBar />\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport Observable from \"../util/Observable\";\r\nconst config = { headers: { \"Client-ID\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\" } };\r\n\r\ninterface Chat {\r\n  comments: Comment[];\r\n  _next?: string;\r\n  _prev?: string;\r\n}\r\nexport interface Comment {\r\n  content_offset_seconds: number;\r\n  _id: string;\r\n  message: {\r\n    body: string;\r\n  };\r\n  commenter: {\r\n    display_name: string;\r\n  };\r\n}\r\n\r\n// This is used to get the first few comments based on time\r\nconst getFirstComments = async (\r\n  videoId: string | number,\r\n  startSeconds = 0\r\n): Promise<Chat> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${videoId}/comments?content_offset_seconds=${startSeconds}`;\r\n\r\n  try {\r\n    const { data } = await axios.get(url, config);\r\n    return data;\r\n  } catch (err) {\r\n    return { comments: [] };\r\n  }\r\n};\r\n// This is used to get the next comments based on the link from the previous comment\r\nconst getNext = async (\r\n  videoId: string | number,\r\n  cursor: string | number\r\n): Promise<Chat> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${videoId}/comments?cursor=${cursor}`;\r\n  try {\r\n    const data: Chat = (await axios.get(url, config)).data;\r\n    return data;\r\n  } catch (err) {\r\n    return { comments: [] };\r\n  }\r\n};\r\nexport const getComments = async (\r\n  videoId: string | number,\r\n  observable: Observable | null = null,\r\n  start = 0,\r\n  end = 200000\r\n): Promise<Comment[]> => {\r\n  const d = end - start;\r\n  if (start < 0 || end < 0 || end < start) {\r\n    return [];\r\n  } else if (d < 5000) {\r\n    let data = await getFirstComments(videoId, start);\r\n    const comments: Comment[] = data.comments\r\n      .filter(\r\n        ({ content_offset_seconds }) =>\r\n          start <= content_offset_seconds && content_offset_seconds < end\r\n      )\r\n      .map(({ content_offset_seconds, _id, message, commenter }) => {\r\n        if (observable) observable.updateProgress(1);\r\n        return {\r\n          content_offset_seconds,\r\n          _id,\r\n          message: { body: message.body },\r\n          commenter: {\r\n            display_name: commenter.display_name,\r\n          },\r\n        };\r\n      });\r\n\r\n    while (data.comments.length && data._next) {\r\n      if (data.comments[data.comments.length - 1].content_offset_seconds > end)\r\n        break;\r\n      data = await getNext(videoId, data._next);\r\n      comments.push(\r\n        ...data.comments\r\n          .filter(\r\n            ({ content_offset_seconds }) =>\r\n              start <= content_offset_seconds && content_offset_seconds < end\r\n          )\r\n          .map(({ content_offset_seconds, _id, message, commenter }) => {\r\n            if (observable) observable.updateProgress(1);\r\n            return {\r\n              content_offset_seconds,\r\n              _id,\r\n              message: { body: message.body },\r\n              commenter: {\r\n                display_name: commenter.display_name,\r\n              },\r\n            };\r\n          })\r\n      );\r\n    }\r\n    return comments;\r\n  } else {\r\n    let allComments: Promise<Comment[]>[] = [];\r\n    const DIVISIONS = 50;\r\n    for (let i = 1; i <= DIVISIONS; i++) {\r\n      allComments.push(\r\n        getComments(\r\n          videoId,\r\n          observable,\r\n          start + ((i - 1) * d) / DIVISIONS,\r\n          start + (i * d) / DIVISIONS\r\n        )\r\n      );\r\n    }\r\n    return Promise.all(allComments).then((comments) => {\r\n      return comments.reduce((acc, curr) => {\r\n        acc.push(...curr);\r\n        return acc;\r\n      });\r\n    });\r\n  }\r\n};\r\n","export type OnUpdate = (progress: number, completed: boolean) => void;\r\nclass Observable {\r\n  private progress: number;\r\n  private onUpdate: OnUpdate | null;\r\n\r\n  constructor(onUpdate: OnUpdate | null) {\r\n    this.progress = 0;\r\n    this.onUpdate = onUpdate;\r\n  }\r\n  updateProgress(decrementAmount: number) {\r\n    this.progress += Math.abs(decrementAmount);\r\n    if (this.onUpdate) this.onUpdate(this.progress, false);\r\n  }\r\n  finish() {\r\n    if (this.onUpdate) this.onUpdate(this.progress, true);\r\n  }\r\n}\r\nexport default Observable;\r\n","import axios from \"axios\";\r\nconst config = { headers: { \"Client-ID\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\" } };\r\n\r\nexport type ImageURL = string;\r\nexport type DateString = string;\r\nexport interface VodInfo {\r\n  title: string;\r\n  views: number;\r\n  url: string;\r\n  language: string;\r\n  created_at: DateString;\r\n  published_at: DateString;\r\n  recorded_at: DateString;\r\n  game: string;\r\n  length: number;\r\n  preview: {\r\n    small: ImageURL;\r\n    medium: ImageURL;\r\n    large: ImageURL;\r\n  };\r\n  channel: {\r\n    display_name: string;\r\n    logo: ImageURL;\r\n    url: string;\r\n    _id: string;\r\n  };\r\n}\r\n\r\nconst getVodInfo = async (id: number | string): Promise<VodInfo> => {\r\n  const url = `https://api.twitch.tv/v5/videos/${id}`;\r\n  const output: VodInfo = {\r\n    title: \"\",\r\n    views: 0,\r\n    url: \"\",\r\n    language: \"\",\r\n    created_at: \"\",\r\n    published_at: \"\",\r\n    recorded_at: \"\",\r\n    game: \"\",\r\n    length: 0,\r\n    preview: {\r\n      small: \"\",\r\n      medium: \"\",\r\n      large: \"\",\r\n    },\r\n    channel: {\r\n      display_name: \"\",\r\n      logo: \"\",\r\n      url: \"\",\r\n      _id: \"\",\r\n    },\r\n  };\r\n  const data = (await axios.get(url, config)).data as VodInfo;\r\n  for (const key in output) {\r\n    if (typeof output[key as keyof VodInfo] === \"object\") {\r\n      // @ts-ignore\r\n      for (const key2 in output[key]) {\r\n        // @ts-ignore\r\n        output[key][key2] = data[key][key2];\r\n      }\r\n    } else {\r\n      // @ts-ignore\r\n      output[key] = data[key];\r\n    }\r\n  }\r\n  return output;\r\n};\r\nexport default getVodInfo;\r\n","import { OnUpdate } from \"./../util/Observable\";\r\nimport { getComments, Comment } from \"../twitch_api/getComments\";\r\nimport { Comment as CommentDB } from \"../local_db/db\";\r\n\r\nimport Observable from \"../util/Observable\";\r\nimport getVodInfo from \"../twitch_api/getVodInfo\";\r\n\r\nexport interface Speed {\r\n  increment: number;\r\n  speeds: number[];\r\n}\r\nexport interface SpeedPoint {\r\n  time: number;\r\n  speed: number;\r\n}\r\nexport const getCommentsData = async (\r\n  id: string,\r\n  onUpdate: OnUpdate | null\r\n): Promise<Comment[] | null> => {\r\n  const observ = new Observable(onUpdate);\r\n  const vod = await getVodInfo(id);\r\n  if (!vod) return null;\r\n  const comments = await getComments(id, observ, 0, vod.length);\r\n  observ.finish();\r\n  return comments;\r\n};\r\n\r\nexport const getSpeeds = (comments: CommentDB[], increment = 4): Speed => {\r\n  if (comments.length === 0) return { increment, speeds: [] };\r\n  const lastSecond = comments[comments.length - 1].seconds;\r\n  const speeds: number[] = Array(~~(lastSecond / increment) + 2).fill(0);\r\n  comments.forEach((comment) => {\r\n    const time = comment.seconds;\r\n    speeds[~~(time / increment)] += 1 / increment;\r\n  });\r\n  return { increment, speeds };\r\n};\r\nexport const flattenSpeeds = (speed: Speed, flattenFactor: number): Speed => {\r\n  const dividedSpeeds: number[] = speed.speeds.map(\r\n    (item) => item / flattenFactor\r\n  );\r\n  const newSpeeds: number[] = [];\r\n  let i = 0;\r\n  while (i < dividedSpeeds.length) {\r\n    let tmp = 0;\r\n    for (let j = 0; j < flattenFactor; j++) {\r\n      if (i === dividedSpeeds.length) break;\r\n      tmp += dividedSpeeds[i];\r\n      i++;\r\n    }\r\n    newSpeeds.push(tmp);\r\n  }\r\n  return { increment: speed.increment * flattenFactor, speeds: newSpeeds };\r\n};\r\nexport const convertToSpeedPoint = (speed: Speed): SpeedPoint[] => {\r\n  return speed.speeds.map((s, i) => ({ time: i * speed.increment, speed: s }));\r\n};\r\n","import { makeStyles, Theme, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  return {\r\n    title: {\r\n      marginBottom: theme.spacing(2),\r\n      fontFamily: \"'New Tegomin', serif\",\r\n    },\r\n    subtitle: { fontFamily: \"'New Tegomin', serif\" },\r\n    info: {\r\n      margin: theme.spacing(5),\r\n    },\r\n  };\r\n});\r\nconst ErrorVodPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.info}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          component=\"h1\"\r\n          className={classes.title}\r\n          align=\"center\"\r\n        >\r\n          <b> Uh Oh! </b>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h2\"\r\n          className={classes.subtitle}\r\n          align=\"center\"\r\n        >\r\n          The VOD you are looking for doesn't seem to exist!\r\n        </Typography>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ErrorVodPage;\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  CardHeader,\r\n  IconButton,\r\n  Avatar,\r\n  Link,\r\n  CardMedia,\r\n  CardActionArea,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\nimport { Comment } from \"../../../twitch_api/getComments\";\r\ninterface VodInfoCardProps {\r\n  elevation: number;\r\n  downloadComments: () => void;\r\n  saveVod: () => void;\r\n  loadComments: () => Promise<Comment[]>;\r\n  vodInfo: VodWithAllInfo;\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n});\r\nconst VodInfoCard = ({\r\n  vodInfo,\r\n  elevation,\r\n  downloadComments,\r\n  saveVod,\r\n}: VodInfoCardProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card elevation={elevation}>\r\n      <CardHeader\r\n        avatar={\r\n          <IconButton\r\n            onClick={() => {\r\n              window.open(vodInfo.channelInfo.url);\r\n            }}\r\n          >\r\n            <Avatar aria-label=\"avatar image\" src={vodInfo.channelInfo.logo} />\r\n          </IconButton>\r\n        }\r\n        title={\r\n          <Typography variant=\"subtitle1\">{vodInfo.vodInfo.title}</Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            By{\" \"}\r\n            <Link\r\n              href={vodInfo.channelInfo.url}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {vodInfo.channelName}\r\n            </Link>{\" \"}\r\n            at {new Date(vodInfo.vodInfo.recorded_at).toDateString()}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardActionArea\r\n        onClick={() => {\r\n          window.open(vodInfo.vodInfo.url);\r\n        }}\r\n      >\r\n        <CardMedia\r\n          image={vodInfo.vodInfo.preview.large}\r\n          title=\"Go to vod\"\r\n          className={classes.media}\r\n        />\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={downloadComments}>\r\n          download comments\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={saveVod}>\r\n          save analytics\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default VodInfoCard;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getInnerDims = () => {\r\n  return {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  };\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n  const [winDim, setWinDim] = useState(getInnerDims());\r\n  useEffect(() => {\r\n    const handleResize = () => setWinDim(getInnerDims());\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return winDim;\r\n};\r\nexport const useWidth = () => {\r\n  return useWindowDimensions().width;\r\n};\r\nexport const useHeight = () => {\r\n  return useWindowDimensions().height;\r\n};\r\n","import {\r\n  VictoryLine,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  createContainer,\r\n  VictoryZoomContainerProps,\r\n  VictoryVoronoiContainerProps,\r\n  VictoryLabel,\r\n} from \"victory\";\r\nimport { DomainPropType } from \"victory-core\";\r\nimport React from \"react\";\r\nimport {\r\n  convertToSpeedPoint,\r\n  flattenSpeeds,\r\n  Speed,\r\n} from \"../../../services/speeds\";\r\nimport { useWidth } from \"../../../util/getDimensions\";\r\n\r\ninterface ChartProps {\r\n  data: Speed;\r\n  vodID: string | number;\r\n  flatten: number;\r\n}\r\nconst Chart = (props: ChartProps) => {\r\n  const VictoryZoomVoronoiContainer = createContainer<\r\n    VictoryZoomContainerProps,\r\n    VictoryVoronoiContainerProps\r\n  >(\"zoom\", \"voronoi\");\r\n  const [zoomXDomain, setZoomXDomain] = React.useState<\r\n    [number, number] | [Date, Date]\r\n  >([0, 1000000]);\r\n  const getEntireDomain = (): DomainPropType | undefined => {\r\n    if (props.data.speeds.length)\r\n      return {\r\n        x: [0, props.data.speeds.length * props.data.increment],\r\n        y: [0, Math.max(...props.data.speeds) + 0.5],\r\n      };\r\n  };\r\n  const windowWidth = useWidth();\r\n  const [width, setWidth] = React.useState(0);\r\n  const graphRef = React.useCallback(\r\n    (node) => {\r\n      if (node !== null) {\r\n        setWidth(node.getBoundingClientRect().width);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [windowWidth]\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }} ref={graphRef}>\r\n      <VictoryChart\r\n        height={300}\r\n        width={width}\r\n        padding={{ top: 50, left: 80, right: 50, bottom: 50 }}\r\n        domain={getEntireDomain()}\r\n        containerComponent={\r\n          <VictoryZoomVoronoiContainer\r\n            zoomDimension=\"x\"\r\n            responsive={false}\r\n            onZoomDomainChange={(domain) => {\r\n              setZoomXDomain(domain.x);\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <VictoryAxis\r\n          dependentAxis\r\n          label=\"Messages\"\r\n          tickFormat={(x) => x}\r\n          axisLabelComponent={<VictoryLabel dy={-20} />}\r\n        />\r\n        <VictoryAxis label=\"Time (s)\" />\r\n        <VictoryLine\r\n          data={convertToSpeedPoint(\r\n            flattenSpeeds(props.data, props.flatten)\r\n          ).filter((d) => d.time >= zoomXDomain[0] && d.time <= zoomXDomain[1])}\r\n          interpolation=\"natural\"\r\n          x=\"time\"\r\n          y=\"speed\"\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  makeStyles,\r\n  Slider,\r\n  CardContent,\r\n  Theme,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport SpeedsChart from \"../Charts/SpeedsChart\";\r\n\r\nimport React from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\nimport { getSpeeds } from \"../../../services/speeds\";\r\ninterface SpeedsChartCardProps {\r\n  vodInfo: VodWithAllInfo;\r\n  elevation: number;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  slider: {\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(5),\r\n    width: 250,\r\n    margin: 0,\r\n  },\r\n  header: {\r\n    paddingBottom: 0,\r\n  },\r\n  chart: {\r\n    marginTop: -40,\r\n    paddingBottom: 0,\r\n  },\r\n  action: {\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\nconst SpeedsChartCard = ({ vodInfo, elevation }: SpeedsChartCardProps) => {\r\n  const classes = useStyles();\r\n  const [flatten, setFlatten] = React.useState(1);\r\n  return (\r\n    <Card elevation={elevation}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"subtitle1\">Number of Chat Messages</Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">\r\n            Zoom in and drag to check out the graph\r\n          </Typography>\r\n        }\r\n        className={classes.header}\r\n      />\r\n      <CardContent className={classes.chart}>\r\n        <SpeedsChart\r\n          data={getSpeeds(vodInfo.comments)}\r\n          flatten={flatten}\r\n          vodID={vodInfo.vodID}\r\n        />\r\n      </CardContent>\r\n      <CardActions className={classes.action}>\r\n        <div className={classes.slider}>\r\n          <Slider\r\n            value={flatten}\r\n            marks={[\r\n              { value: 1, label: \"Most detailed\" },\r\n              { value: 10, label: \"Least detailed\" },\r\n            ]}\r\n            min={1}\r\n            max={10}\r\n            defaultValue={flatten}\r\n            onChange={(_, newVal: number | number[]) => {\r\n              setFlatten(newVal as number);\r\n            }}\r\n            aria-labelledby=\"flatten size\"\r\n          />\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default SpeedsChartCard;\r\n","import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Keyword } from \"../../../services/keywords\";\r\n\r\ninterface KeywordsChartProps {\r\n  data: Keyword[];\r\n  setHoveredData: (item: Keyword | null) => void;\r\n}\r\n\r\nconst Chart = ({ data, setHoveredData }: KeywordsChartProps) => {\r\n  return (\r\n    <div>\r\n      <PieChart\r\n        data={data}\r\n        onMouseOver={(_, index) => {\r\n          setHoveredData(data[index]);\r\n        }}\r\n        onMouseOut={() => {\r\n          setHoveredData(null);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import axios from \"axios\";\r\nimport { VodWithAllInfo } from \"./storage\";\r\nexport interface Keyword {\r\n  color: string;\r\n  value: number;\r\n  title: string | number;\r\n  url: string;\r\n}\r\nexport interface Emote {\r\n  emoteName: string;\r\n  emoteImgURL: string;\r\n}\r\nexport const getKeywords = async (vodInfo: VodWithAllInfo) => {\r\n  try {\r\n    const emotes = (await axios.get(`/api/emotes/${vodInfo.channelID}`))\r\n      .data as Emote[];\r\n    interface EmoteMap {\r\n      [nameLower: string]: {\r\n        url: string;\r\n        name: string;\r\n      };\r\n    }\r\n    const emoteMap: EmoteMap = {};\r\n    emotes.forEach((item) => {\r\n      emoteMap[item.emoteName.toLowerCase()] = {\r\n        url: item.emoteImgURL,\r\n        name: item.emoteName,\r\n      };\r\n    });\r\n    const emoteNumTimes = {};\r\n    let total = 0;\r\n    vodInfo.comments\r\n      .map((item) => item.message.trim().toLowerCase())\r\n      .filter((msg) => msg.length > 0)\r\n      .forEach((item) => {\r\n        const split = item.split(\" \");\r\n        const hasUsed = new Set();\r\n        for (let i = 0; i < split.length; i++) {\r\n          const trimmed = item.trim();\r\n          if (trimmed in emoteMap && !hasUsed.has(trimmed)) {\r\n            hasUsed.add(emoteMap[trimmed].name);\r\n            if (!(trimmed in emoteNumTimes)) emoteNumTimes[trimmed] = 0;\r\n            emoteNumTimes[trimmed]++;\r\n            total++;\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    const output: Keyword[] = [];\r\n    const colours = [\r\n      \"#2d080a\",\r\n      \"#c2f970\",\r\n      \"#7c3626\",\r\n      \"#a499b3\",\r\n      \"#f5853f\",\r\n      \"#89d2dc\",\r\n      \"#093824\",\r\n      \"#98a6d4\",\r\n      \"#ffcdbc\",\r\n      \"#6564db\",\r\n    ];\r\n    for (const key in emoteNumTimes) {\r\n      output.push({\r\n        title: emoteMap[key].name,\r\n        value: (100 * emoteNumTimes[key]) / total,\r\n        color: \"#E38627\",\r\n        url: emoteMap[key].url,\r\n      });\r\n    }\r\n    output.sort((a, b) => {\r\n      if (a.value >= b.value) return -1;\r\n      return 0;\r\n    });\r\n    const newOutput: Keyword[] = [];\r\n    let otherPercent = 0;\r\n    for (let i = 0; i < output.length; i++) {\r\n      if (output[i].value >= 1) {\r\n        newOutput.push({\r\n          ...output[i],\r\n          color: colours[i % colours.length],\r\n        });\r\n      } else {\r\n        otherPercent += output[i].value;\r\n      }\r\n    }\r\n    if (otherPercent > 0) {\r\n      newOutput.push({\r\n        title: \"Other\",\r\n        value: otherPercent,\r\n        color: \"#E38627\",\r\n        url: \"\",\r\n      });\r\n    }\r\n    return newOutput;\r\n  } catch (err) {\r\n    return [\r\n      {\r\n        title: \"Error\",\r\n        value: 100,\r\n        color: \"#E38627\",\r\n        url: \"\",\r\n      },\r\n    ];\r\n  }\r\n};\r\n","import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  makeStyles,\r\n  CardContent,\r\n  Theme,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport KeywordsChart from \"../Charts/KeywordsChart\";\r\n\r\nimport React from \"react\";\r\nimport { VodWithAllInfo } from \"../../../services/storage\";\r\nimport { getKeywords, Keyword } from \"../../../services/keywords\";\r\ninterface KeywordsChartProps {\r\n  vodInfo: VodWithAllInfo;\r\n  elevation: number;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  slider: {\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(5),\r\n    width: 250,\r\n    margin: 0,\r\n  },\r\n  header: {\r\n    paddingBottom: 0,\r\n  },\r\n  action: {\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  pie: {\r\n    justifyItems: \"center\",\r\n    maxWidth: \"45vw\",\r\n  },\r\n  content: { display: \"flex\" },\r\n  info: {\r\n    alignSelf: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n}));\r\nconst KeywordsCard = ({ vodInfo, elevation }: KeywordsChartProps) => {\r\n  const [selectedData, setSelectedData] = React.useState<null | Keyword>(null);\r\n  const [data, setData] = React.useState<Keyword[]>([]);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      setData(await getKeywords(vodInfo));\r\n    })();\r\n  }, [vodInfo]);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card elevation={elevation}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"subtitle1\">Most Frequent Emotes</Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle2\">Hover over for info</Typography>\r\n        }\r\n        className={classes.header}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <div className={classes.pie}>\r\n          <KeywordsChart data={data} setHoveredData={setSelectedData} />\r\n        </div>\r\n        <div className={classes.info}>\r\n          {selectedData && (\r\n            <div>\r\n              <Typography component=\"h4\" variant=\"h6\">\r\n                {selectedData.title} ({Math.round(selectedData.value)}%)\r\n              </Typography>\r\n              {selectedData.url && (\r\n                <img src={selectedData.url} alt={`${selectedData.title}`} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n      <CardActions className={classes.action}></CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default KeywordsCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../util/Navbar\";\r\nimport { getCommentsData } from \"../../services/speeds\";\r\nimport ErrorVodPage from \"./ErrorVodPage\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../util/Notification\";\r\nimport { Comment } from \"../../twitch_api/getComments\";\r\nimport VodInfoCard from \"./Cards/VodInfoCard\";\r\nimport SpeedsChartCard from \"./Cards/SpeedsChartCard\";\r\nimport KeywordsCard from \"./Cards/KeywordsCard\";\r\nimport {\r\n  getVodFullInfo,\r\n  getVodFullInfoDB,\r\n  saveVods,\r\n  VodWithAllInfo,\r\n} from \"../../services/storage\";\r\nimport { getNumVods } from \"../../local_db/vod\";\r\nimport getVodInfo, { VodInfo } from \"../../twitch_api/getVodInfo\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadedText: {\r\n    margin: theme.spacing(5),\r\n    fontFamily: \"'Delta Gothic One', cursive\",\r\n  },\r\n}));\r\nconst AnalyzeVod = () => {\r\n  const classes = useStyles();\r\n  const { vodID } = useParams() as { vodID: string };\r\n\r\n  const [vodInfo, setVodInfo] = React.useState<VodWithAllInfo | null>(null);\r\n  const [comments, setComments] = React.useState<Comment[]>([]);\r\n  const [twitchVodInfo, setTwitchVodInfo] = React.useState<VodInfo | null>(\r\n    null\r\n  );\r\n\r\n  const [isErr, setIsErr] = React.useState(false);\r\n\r\n  // -1 (done loading) >= 0 (number of comments that have been loaded)\r\n  const [commentsLoaded, setCommentsLoaded] = React.useState<number>(-2);\r\n\r\n  const [saveErr, setSaveErr] = React.useState(false);\r\n  const [saveMsg, setSaveMsg] = React.useState(\"\");\r\n  const [bookmarkNum, setBookmarkNum] = React.useState<number>(0);\r\n  const loadComments = async () => {\r\n    const comments = await getCommentsData(vodID, (prog, completed) => {\r\n      if (completed) setCommentsLoaded(-1);\r\n      else setCommentsLoaded(prog);\r\n    });\r\n    if (comments === null) {\r\n      setIsErr(true);\r\n      return [];\r\n    }\r\n    setComments(comments as Comment[]);\r\n    return comments;\r\n  };\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const vodFullInfo = await getVodFullInfoDB(vodID);\r\n      setVodInfo(vodFullInfo);\r\n      setBookmarkNum(await getNumVods());\r\n      if (vodFullInfo) {\r\n        setCommentsLoaded(-1);\r\n      } else {\r\n        const comments = await loadComments();\r\n        const twitchVodInfo = await getVodInfo(vodID);\r\n        setTwitchVodInfo(twitchVodInfo);\r\n        setVodInfo(getVodFullInfo(vodID, twitchVodInfo, comments));\r\n      }\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [vodID]);\r\n  const saveVod = async () => {\r\n    const savedInfo = await getVodFullInfoDB(vodID);\r\n    if (savedInfo) {\r\n      setSaveErr(true);\r\n      setSaveMsg(\"Already saved\");\r\n      return;\r\n    }\r\n    setBookmarkNum(bookmarkNum + 1);\r\n    if (twitchVodInfo) {\r\n      try {\r\n        saveVods(vodID, twitchVodInfo, comments);\r\n      } catch (err) {\r\n        setSaveErr(true);\r\n        setSaveMsg(\"Failed to save vod\");\r\n      }\r\n    }\r\n  };\r\n  const downloadComments = async () => {\r\n    if (vodInfo) {\r\n      const content = `VodID: ${vodInfo.vodID}\\n${vodInfo.comments\r\n        .map((item) => `${item.commenter}[${item.seconds}s]: ${item.message}`)\r\n        .join(\"\\n\")}`;\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([content], {\r\n        type: \"text/plain;charset=utf-8\",\r\n      });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"comments.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n      document.body.removeChild(element);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bookmarkNum={bookmarkNum} />\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <br />\r\n\r\n        {isErr ? (\r\n          <ErrorVodPage />\r\n        ) : (\r\n          <>\r\n            <Grid container spacing={3}>\r\n              {commentsLoaded === -1 && vodInfo && (\r\n                <>\r\n                  <Grid item xs={5} md={5} xl={5}>\r\n                    <VodInfoCard\r\n                      vodInfo={vodInfo}\r\n                      elevation={5}\r\n                      downloadComments={downloadComments}\r\n                      saveVod={saveVod}\r\n                      loadComments={loadComments}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} xl={6}>\r\n                    <SpeedsChartCard elevation={5} vodInfo={vodInfo} />\r\n                  </Grid>\r\n                  <Grid item xs={12} xl={6}>\r\n                    <KeywordsCard elevation={5} vodInfo={vodInfo} />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            {commentsLoaded >= 0 && (\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                className={classes.loadedText}\r\n              >\r\n                Loaded {commentsLoaded} comments...\r\n              </Typography>\r\n            )}\r\n          </>\r\n        )}\r\n        <Notification message={saveMsg} setOpen={setSaveErr} open={saveErr} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzeVod;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardHeader,\r\n  CardMedia,\r\n  Container,\r\n  IconButton,\r\n  Typography,\r\n  Link,\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  getAllVods,\r\n  getNumVods,\r\n  removeVod as removeVodFromStorage,\r\n  VodWithAllInfo,\r\n} from \"../../services/storage\";\r\nimport Navbar from \"../util/Navbar\";\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n});\r\nconst Bookmark = () => {\r\n  const [allVods, setAllVods] = React.useState<VodWithAllInfo[] | null>(null);\r\n  const classes = useStyles();\r\n  const [bookmarkNum, setBookmarkNum] = React.useState<number>(0);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const vods = await getAllVods();\r\n      setAllVods(vods);\r\n      setBookmarkNum(await getNumVods());\r\n    })();\r\n  }, []);\r\n  const removeVod = (vodID: string, index: number) => () => {\r\n    if (allVods) {\r\n      setAllVods(allVods.filter((_, i) => i !== index));\r\n      removeVodFromStorage(vodID);\r\n      setBookmarkNum(bookmarkNum - 1);\r\n    }\r\n  };\r\n  const elevation = 5;\r\n  const GridItem = ({ cardInner }: { cardInner: React.ReactNode }) => {\r\n    return (\r\n      <Grid item xs={12} sm={12} md={6} lg={4}>\r\n        <Card elevation={elevation}>{cardInner}</Card>\r\n      </Grid>\r\n    );\r\n  };\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Navbar bookmarkNum={bookmarkNum} />\r\n      <Container maxWidth={\"xl\"}>\r\n        <br />\r\n        {allVods && (\r\n          <Grid container spacing={3}>\r\n            {allVods.map((vod, i) => {\r\n              return (\r\n                <GridItem\r\n                  key={vod.vodID}\r\n                  cardInner={\r\n                    <>\r\n                      <CardHeader\r\n                        avatar={\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              window.open(allVods[i].channelInfo.url);\r\n                            }}\r\n                          >\r\n                            <Avatar\r\n                              aria-label=\"avatar image\"\r\n                              src={allVods[i].channelInfo.logo}\r\n                            />\r\n                          </IconButton>\r\n                        }\r\n                        title={\r\n                          <Typography variant=\"subtitle1\">\r\n                            {allVods[i].vodInfo.title}\r\n                          </Typography>\r\n                        }\r\n                        subheader={\r\n                          <Typography variant=\"subtitle2\">\r\n                            By{\" \"}\r\n                            <Link\r\n                              href={allVods[i].channelInfo.url}\r\n                              target=\"_blank\"\r\n                              rel=\"noreferrer\"\r\n                            >\r\n                              {allVods[i].channelName}\r\n                            </Link>{\" \"}\r\n                            at{\" \"}\r\n                            {new Date(\r\n                              allVods[i].vodInfo.recorded_at\r\n                            ).toDateString()}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          window.open(allVods[i].vodInfo.url);\r\n                        }}\r\n                      >\r\n                        <CardMedia\r\n                          image={allVods[i].vodInfo.preview.large}\r\n                          title=\"Go to vod\"\r\n                          className={classes.media}\r\n                        />\r\n                      </CardActionArea>\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            history.push(`/search/${vod.vodID}`);\r\n                            history.go(0);\r\n                          }}\r\n                        >\r\n                          Analytics\r\n                        </Button>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={removeVod(vod.vodID, i)}\r\n                        >\r\n                          Remove vod\r\n                        </Button>\r\n                      </CardActions>\r\n                    </>\r\n                  }\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Bookmark;\r\n","import Home from \"./components/home/Home\";\r\nimport \"fontsource-roboto\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AnalyzeVod from \"./components/analysis/AnalyzeVod\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Bookmark from \"./components/bookmarks/Bookmark\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <StylesProvider injectFirst>\r\n        <Switch>\r\n          <Route path=\"/search/:vodID\">\r\n            <AnalyzeVod />\r\n          </Route>\r\n          <Route path=\"/bookmarks\">\r\n            <Bookmark />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </StylesProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#7015c2\",\r\n    },\r\n    secondary: {\r\n      main: \"#25e220\",\r\n    },\r\n    background: { default: \"azure\", paper: \"azure\" },\r\n  },\r\n});\r\nexport default theme;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport theme from \"./theme\";\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}